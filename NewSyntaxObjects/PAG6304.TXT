OBJECT Page 6304 Power BI Report Selection
{
  OBJECT-PROPERTIES
  {
    Date=20180425D;
    Time=161545.10T;
    Modified=true;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Power BI Reports Selection;
    InsertAllowed=false;
    DeleteAllowed=false;
    LinksAllowed=false;
    SourceTable="Power BI Report Buffer";
    PageType=List;
    SourceTableTemporary=true;
    PromotedActionCategoriesML=ENU=New,Process,Report,Manage,Get Reports;
    OnOpenPage=BEGIN
                 LoadReportsList;
                 IsSaaS := AzureADMgt.IsSaaS;
               END;

    OnQueryClosePage=BEGIN
                       SaveAndClose;
                     END;

    ActionList=ACTIONS
    {
      { 5       ;    ;ActionContainer;
                      Name=ActionContainer5;
                      ActionContainerType=Reports }
      { 7       ;1   ;Action    ;
                      Name=EnableReport;
                      CaptionML=ENU=Enable;
                      ToolTipML=ENU=Enables the report selection.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Enabled=NOT Enabled;
                      PromotedIsBig=true;
                      Image=Report;
                      PromotedCategory=Category4;
                      PromotedOnly=true;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 Enabled := true;
                                 CurrPage.UPDATE;
                               END;

                      Gesture=LeftSwipe }
      { 8       ;1   ;Action    ;
                      Name=DisableReport;
                      CaptionML=ENU=Disable;
                      ToolTipML=ENU=Disables the report selection.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Enabled=Enabled;
                      PromotedIsBig=true;
                      Image=Report;
                      PromotedCategory=Category4;
                      PromotedOnly=true;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 Enabled := false;
                                 CurrPage.UPDATE;
                               END;

                      Gesture=RightSwipe }
      { 9       ;1   ;Action    ;
                      Name=Refresh;
                      CaptionML=ENU=Refresh List;
                      ToolTipML=ENU=Update the report list with any newly added reports.;
                      ApplicationArea=#All;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=Refresh;
                      PromotedCategory=Category5;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 LoadReportsList;
                               END;
                                }
      { 10      ;1   ;Action    ;
                      Name=MyOrganization;
                      CaptionML=ENU=My Organization;
                      ToolTipML=ENU=Browse content packs that other people in your organization have published.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Image=PowerBI;
                      PromotedCategory=Category5;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 // Opens a new browser tab to Power BI's content pack list, set to the My Organization tab.
                                 HYPERLINK(PowerBIServiceMgt.GetContentPacksMyOrganizationUrl);
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=Services;
                      CaptionML=ENU=Services;
                      ToolTipML=ENU=Choose content packs from online services that you use.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Image=PowerBI;
                      PromotedCategory=Category5;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 // Opens a new browser tab to AppSource's content pack list, filtered to NAV reports.
                                 HYPERLINK(PowerBIServiceMgt.GetContentPacksServicesUrl);
                               END;
                                }
      { 12      ;1   ;Action    ;
                      Name=ConnectionInfo;
                      CaptionML=ENU=Connection Information;
                      ToolTipML=ENU=Show information for connecting to Power BI content packs.;
                      ApplicationArea=#All;
                      RunObject=Page "Content Pack Setup Wizard";
                      Promoted=true;
                      Visible=NOT IsSaaS;
                      Image=Setup;
                      PromotedCategory=Category5;
                      PromotedOnly=true }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Control1;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                Visible=HasReports;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                Name=ReportName;
                CaptionML=ENU=Report Name;
                ToolTipML=ENU=Specifies the name of the report.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ReportName;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              // Event handler for when the user clicks the report name hyperlink. This automatically selects
                              // and enables the report and closes the window, so the user immediately sees the clicked report
                              // on the parent page.
                              Enabled := true;

                              // OnDrillDown returns a LookupCancel Action when the page closes.
                              // IsPgclosedOkay is used to tell the caller of this page that inspite of the LookupCancel
                              // the action should be treated like a LookupOk
                              IsPgClosedOkay := true;
                              SaveAndClose;
                            END;

                ImplicitType=Text100 }

    { 4   ;2   ;Field     ;
                Name=Enabled;
                ToolTipML=ENU=Specifies that the report selection is enabled.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Enabled;
                ImplicitType=Boolean }

    { 6   ;1   ;Group     ;
                Name=Control6;
                Visible=NOT HasReports;
                GroupType=Group }

    { 13  ;2   ;Field     ;
                Name=NoReportsError;
                CaptionML=ENU=There are no reports available from Power BI.;
                ToolTipML=ENU=Specifies that the user needs to select Power BI reports.;
                ApplicationArea=#Basic,#Suite }

  }
  CODE
  {
    VAR
      AzureADMgt@1002 : Codeunit "Azure AD Mgt.";
      PowerBIServiceMgt@1005 : Codeunit "Power BI Service Mgt.";
      Context@1001 : Text[30];
      NameFilter@1004 : Text;
      IsPgClosedOkay@1003 : Boolean;
      IsSaaS@1006 : Boolean;
      HasReports@1007 : Boolean;

    [External]
    PROCEDURE SetContext@2(ParentContext@1000 : Text[30]);
    BEGIN
      // Sets the ID of the parent page that reports are being selected for.
      Context := ParentContext;
    END;

    [External]
    PROCEDURE SetNameFilter@10(ParentFilter@1000 : Text);
    BEGIN
      // Sets the value to filter report names by.
      // This should be called by the parent page before opening this page.
      NameFilter := ParentFilter;
    END;

    LOCAL PROCEDURE FilterReports@21();
    BEGIN
      // Filters the report collection by name, if the parent page has provided a value to filter by.
      // This filter will display any report that has the value anywhere in the name, case insensitive.
      if NameFilter <> '' then
        SETFILTER(ReportName,'%1','@*' + NameFilter + '*');
    END;

    LOCAL PROCEDURE LoadReportsList@6();
    VAR
      ExceptionMessage@1000 : Text;
      ExceptionDetails@1001 : Text;
    BEGIN
      // Clears and retrieves a list of all reports in the user's Power BI account.
      DELETEALL;
      PowerBIServiceMgt.GetReports(Rec,ExceptionMessage,ExceptionDetails,Context);

      HasReports := not ISEMPTY;
      if ISEMPTY then
        INSERT; // Hack to prevent empty list error.

      // Set sort order, scrollbar position, and filters.
      SETCURRENTKEY(ReportName);
      FINDFIRST;
      FilterReports;
    END;

    LOCAL PROCEDURE SaveAndClose@5();
    VAR
      PowerBiReportConfiguration@1001 : Record "Power BI Report Configuration";
      TempPowerBiReportBuffer@1000 : TEMPORARY Record "Power BI Report Buffer";
    BEGIN
      // use a temp buffer record for saving to not disturb the position, filters, etc. of the source table
      // ShareTable = TRUE makes a shallow copy of the record, which is OK since no modifications are made to the records themselves
      TempPowerBiReportBuffer.COPY(Rec,true);

      if TempPowerBiReportBuffer.FIND('-') then
        repeat
          if PowerBiReportConfiguration.GET(USERSECURITYID,TempPowerBiReportBuffer.ReportID,Context) then begin
            if not TempPowerBiReportBuffer.Enabled then
              PowerBiReportConfiguration.DELETE;
          end else
            if TempPowerBiReportBuffer.Enabled then begin
              PowerBiReportConfiguration.INIT;
              PowerBiReportConfiguration."User Security ID" := USERSECURITYID;
              PowerBiReportConfiguration."Report ID" := TempPowerBiReportBuffer.ReportID;
              PowerBiReportConfiguration.Context := Context;
              PowerBiReportConfiguration.INSERT;
            end;
        until TempPowerBiReportBuffer.NEXT = 0;

      IsPgClosedOkay := true;
      CurrPage.CLOSE;
    END;

    [External]
    PROCEDURE IsPageClosedOkay@3() : Boolean;
    BEGIN
      exit(IsPgClosedOkay);
    END;

    BEGIN
    END.
  }
}

