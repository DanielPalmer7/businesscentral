OBJECT Table 5476 Sales Invoice Line Aggregate
{
  OBJECT-PROPERTIES
  {
    Date=20180425D;
    Time=160148.417T;
    Modified=true;
    Version List=;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               UpdateCalculatedFields;
             END;

    OnModify=BEGIN
               UpdateCalculatedFields;
             END;

    OnRename=BEGIN
               UpdateCalculatedFields;
             END;

    CaptionML=ENU=Sales Invoice Line Aggregate;
  }
  FIELDS
  {
    { 4   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 5   ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                "API Type" := Type;
                                                              END;

                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=" ,G/L Account,Item,Resource,Fixed Asset,Charge (Item)";
                                                   OptionString=" ","G/L Account",Item,Resource,"Fixed Asset","Charge (Item)" }
    { 6   ;   ;No.                 ;Code20        ;CaptionML=ENU=No. }
    { 10  ;   ;Shipment Date       ;Date          ;CaptionML=ENU=Shipment Date }
    { 11  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 12  ;   ;Description 2       ;Text50        ;CaptionML=ENU=Description 2 }
    { 15  ;   ;Quantity            ;Decimal       ;CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5 }
    { 17  ;   ;Qty. to Invoice     ;Decimal       ;CaptionML=ENU=Qty. to Invoice;
                                                   DecimalPlaces=0:5 }
    { 18  ;   ;Qty. to Ship        ;Decimal       ;AccessByPermission=TableData "Sales Shipment Header"=R;
                                                   CaptionML=ENU=Qty. to Ship;
                                                   DecimalPlaces=0:5 }
    { 22  ;   ;Unit Price          ;Decimal       ;CaptionML=ENU=Unit Price;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="Currency Code" }
    { 25  ;   ;VAT %               ;Decimal       ;CaptionML=ENU=Tax %;
                                                   DecimalPlaces=0:5 }
    { 27  ;   ;Line Discount %     ;Decimal       ;CaptionML=ENU=Line Discount %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 28  ;   ;Line Discount Amount;Decimal       ;CaptionML=ENU=Line Discount Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 29  ;   ;Amount              ;Decimal       ;CaptionML=ENU=Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 30  ;   ;Amount Including VAT;Decimal       ;CaptionML=ENU=Amount Including Tax;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 60  ;   ;Quantity Shipped    ;Decimal       ;AccessByPermission=TableData "Sales Shipment Header"=R;
                                                   CaptionML=ENU=Quantity Shipped;
                                                   DecimalPlaces=0:5;
                                                   Editable=false }
    { 61  ;   ;Quantity Invoiced   ;Decimal       ;CaptionML=ENU=Quantity Invoiced;
                                                   DecimalPlaces=0:5;
                                                   Editable=false }
    { 69  ;   ;Inv. Discount Amount;Decimal       ;CaptionML=ENU=Inv. Discount Amount;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 87  ;   ;Tax Group Code      ;Code20        ;TableRelation="Tax Group";
                                                   CaptionML=ENU=Tax Group Code }
    { 90  ;   ;VAT Prod. Posting Group;Code20     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=Tax Prod. Posting Group }
    { 91  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=ENU=Currency Code }
    { 99  ;   ;VAT Base Amount     ;Decimal       ;CaptionML=ENU=Tax Base Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 103 ;   ;Line Amount         ;Decimal       ;CaptionML=ENU=Line Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 180 ;   ;Line Discount Calculation;Option   ;OnValidate=BEGIN
                                                                UpdateLineDiscounts;
                                                              END;

                                                   CaptionML=ENU=Line Discount Calculation;
                                                   OptionCaptionML=ENU=None,%,Amount;
                                                   OptionString=None,"%",Amount }
    { 5407;   ;Unit of Measure Code;Code10        ;TableRelation=IF (Type=CONST(Item),
                                                                     "No."=FILTER(<>'')) "Item Unit of Measure".Code WHERE ("Item No."=FIELD("No."))
                                                                     ELSE IF (Type=CONST(Resource),
                                                                              "No."=FILTER(<>'')) "Resource Unit of Measure".Code WHERE ("Resource No."=FIELD("No."))
                                                                              ELSE "Unit of Measure";
                                                   CaptionML=ENU=Unit of Measure Code }
    { 8000;   ;Document Id         ;GUID          ;TableRelation="Sales Invoice Entity Aggregate".Id;
                                                   CaptionML=ENU=Document Id }
    { 9020;   ;Tax Code            ;Code50        ;CaptionML=ENU=Tax Code }
    { 9021;   ;Tax Amount          ;Decimal       ;CaptionML=ENU=Tax Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 9022;   ;Discount Applied Before Tax;Boolean;CaptionML=ENU=Discount Applied Before Tax }
    { 9029;   ;API Type            ;Option        ;OnValidate=BEGIN
                                                                Type := "API Type";
                                                              END;

                                                   CaptionML=ENU=API Type;
                                                   OptionCaptionML=ENU=Comment,Account,Item,Resource,Fixed Asset,Charge;
                                                   OptionString=Comment,Account,Item,Resource,"Fixed Asset",Charge }
    { 9030;   ;Item Id             ;GUID          ;OnValidate=BEGIN
                                                                VALIDATE(Type,Type::Item);
                                                                UpdateNo;
                                                              END;

                                                   CaptionML=ENU=Item Id }
    { 9031;   ;Account Id          ;GUID          ;OnValidate=BEGIN
                                                                VALIDATE(Type,Type::"G/L Account");
                                                                UpdateNo;
                                                              END;

                                                   CaptionML=ENU=Account Id }
    { 9032;   ;Unit of Measure Id  ;GUID          ;TableRelation="Unit of Measure".Id;
                                                   OnValidate=BEGIN
                                                                UpdateUnitOfMeasureCode;
                                                              END;

                                                   CaptionML=ENU=Unit of Measure Id }
    { 9039;   ;Line Tax Amount     ;Decimal       ;CaptionML=ENU=Line Tax Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 9040;   ;Line Amount Including Tax;Decimal  ;CaptionML=ENU=Line Amount Including Tax;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 9041;   ;Line Amount Excluding Tax;Decimal  ;CaptionML=ENU=Line Amount Excluding Tax;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 9042;   ;Prices Including Tax;Boolean       ;CaptionML=ENU=Prices Including Tax }
    { 9043;   ;Inv. Discount Amount Excl. VAT;Decimal;
                                                   CaptionML=ENU=Inv. Discount Amount Excl. Tax;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 9044;   ;Tax Id              ;GUID          ;OnValidate=VAR
                                                                TempTaxGroupBuffer@1000 : TEMPORARY Record "Tax Group Buffer";
                                                              BEGIN
                                                                TempTaxGroupBuffer.GetCodesFromTaxGroupId("Tax Id","Tax Group Code","VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=ENU=Tax Id }
    { 9050;   ;Line Discount Value ;Decimal       ;OnValidate=BEGIN
                                                                UpdateLineDiscounts;
                                                              END;

                                                   CaptionML=ENU=Line Discount Value;
                                                   AutoFormatType=1 }
  }
  KEYS
  {
    {    ;"Document Id","Line No."                ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      LineDiscountPctMustBePositiveErr@1002 : TextConst '@@@={Locked};ENU=Line discount percentage must be positive.';
      LineDiscountPctMustBeBelowHundredErr@1001 : TextConst '@@@={Locked};ENU=Line discount percentage must be below 100.';
      LineDiscountAmtMustBePositiveErr@1000 : TextConst '@@@={Locked};ENU=Line discount amount must be positive.';

    PROCEDURE UpdateItemId@1();
    VAR
      Item@1000 : Record Item;
    BEGIN
      if ("No." = '') or (Type <> Type::Item) then begin
        CLEAR("Item Id");
        exit;
      end;

      if not Item.GET("No.") then
        exit;

      "Item Id" := Item.Id;
    END;

    PROCEDURE UpdateAccountId@12();
    VAR
      GLAccount@1000 : Record "G/L Account";
    BEGIN
      if ("No." = '') or (Type <> Type::"G/L Account") then begin
        CLEAR("Account Id");
        exit;
      end;

      if not GLAccount.GET("No.") then
        exit;

      "Account Id" := GLAccount.Id;
    END;

    PROCEDURE UpdateNo@5();
    VAR
      Item@1001 : Record Item;
      GLAccount@1000 : Record "G/L Account";
    BEGIN
      case Type of
        Type::Item:
          begin
            Item.SETRANGE(Id,"Item Id");
            if not Item.FINDFIRST then
              exit;

            "No." := Item."No.";
          end;
        Type::"G/L Account":
          begin
            GLAccount.SETRANGE(Id,"Account Id");
            if not GLAccount.FINDFIRST then
              exit;

            "No." := GLAccount."No.";
          end;
      end;
    END;

    LOCAL PROCEDURE UpdateCalculatedFields@3();
    BEGIN
      UpdateReferencedRecordIds;
      "API Type" := Type;
    END;

    PROCEDURE UpdateReferencedRecordIds@2();
    BEGIN
      UpdateItemId;
      UpdateAccountId;
      UpdateUnitOfMeasureId;
    END;

    LOCAL PROCEDURE UpdateUnitOfMeasureId@6();
    VAR
      UnitOfMeasure@1000 : Record "Unit of Measure";
    BEGIN
      CLEAR("Unit of Measure Id");
      if "Unit of Measure Code" = '' then
        exit;

      if not UnitOfMeasure.GET("Unit of Measure Code") then
        exit;

      "Unit of Measure Id" := UnitOfMeasure.Id;
    END;

    LOCAL PROCEDURE UpdateUnitOfMeasureCode@7();
    VAR
      UnitOfMeasure@1000 : Record "Unit of Measure";
    BEGIN
      if ISNULLGUID("Unit of Measure Id") then begin
        VALIDATE("Unit of Measure Code",'');
        exit;
      end;

      UnitOfMeasure.SETRANGE(Id,"Unit of Measure Id");
      UnitOfMeasure.FINDFIRST;
      "Unit of Measure Code" := UnitOfMeasure.Code;
    END;

    PROCEDURE UpdateLineDiscounts@4();
    VAR
      Currency@1000 : Record Currency;
      LineAmount@1001 : Decimal;
    BEGIN
      if "Currency Code" = '' then
        Currency.InitRoundingPrecision;
      case "Line Discount Calculation" of
        "Line Discount Calculation"::"%":
          begin
            "Line Discount %" := "Line Discount Value";
            "Line Discount Amount" :=
              ROUND(
                ROUND(Quantity * "Unit Price",Currency."Amount Rounding Precision") *
                "Line Discount %" / 100,Currency."Amount Rounding Precision");
          end;
        "Line Discount Calculation"::Amount,"Line Discount Calculation"::None:
          begin
            "Line Discount Amount" := "Line Discount Value";
            LineAmount := Quantity * "Unit Price";
            if LineAmount <> 0 then
              "Line Discount %" :=
                ROUND("Line Discount Amount" / ROUND(LineAmount,Currency."Amount Rounding Precision") * 100,0.00001)
          end;
      end;

      if "Line Discount %" < 0 then
        ERROR(LineDiscountPctMustBePositiveErr);

      if "Line Discount %" > 100 then
        ERROR(LineDiscountPctMustBeBelowHundredErr);

      if "Line Discount Amount" < 0 then
        ERROR(LineDiscountAmtMustBePositiveErr);
    END;

    PROCEDURE SetDiscountValue@8();
    BEGIN
      case "Line Discount Calculation" of
        "Line Discount Calculation"::"%":
          "Line Discount Value" := "Line Discount %";
        "Line Discount Calculation"::Amount,"Line Discount Calculation"::None:
          begin
            "Line Discount Calculation" := "Line Discount Calculation"::Amount;
            "Line Discount Value" := "Line Discount Amount";
          end;
      end;
    END;

    BEGIN
    END.
  }
}

