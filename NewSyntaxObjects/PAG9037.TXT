OBJECT Page 9037 Accountant Activities
{
  OBJECT-PROPERTIES
  {
    Date=20180425D;
    Time=161634.833T;
    Modified=true;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Activities;
    SourceTable="Finance Cue";
    PageType=CardPart;
    RefreshOnActivate=true;
    OnInit=VAR
             PermissionManager@1000 : Codeunit "Permission Manager";
           BEGIN
             ReplayGettingStartedVisible := false;
             if PermissionManager.SoftwareAsAService then
               ReplayGettingStartedVisible := true;
           END;

    OnOpenPage=VAR
                 RoleCenterNotificationMgt@1000 : Codeunit "Role Center Notification Mgt.";
                 ApplicationManagement@1001 : Codeunit ApplicationManagement;
               BEGIN
                 RESET;
                 if not GET then begin
                   INIT;
                   INSERT;
                 end;

                 SETFILTER("Due Date Filter",'<=%1',WORKDATE);
                 SETFILTER("Overdue Date Filter",'<%1',WORKDATE);
                 SETFILTER("Due Next Week Filter",'%1..%2',CALCDATE('<1D>',WORKDATE),CALCDATE('<1W>',WORKDATE));
                 SETRANGE("User ID Filter",USERID);

                 ShowProductVideosActivities := true;
                 ShowCheckForOCR := OCRServiceMgt.OcrServiceIsEnable;

                 RoleCenterNotificationMgt.ShowNotifications;
                 ApplicationManagement.OnRoleCenterOpen;

                 if PageNotifier.IsAvailable then begin
                   PageNotifier := PageNotifier.Create;
                   PageNotifier.NotifyPageReady;
                 end;
               END;

    OnAfterGetRecord=BEGIN
                       CalculateCueFieldValues;
                       SetActivityGroupVisibility;
                     END;

    OnAfterGetCurrRecord=VAR
                           RoleCenterNotificationMgt@1000 : Codeunit "Role Center Notification Mgt.";
                           PermissionManager@1001 : Codeunit "Permission Manager";
                         BEGIN
                           ReplayGettingStartedVisible := false;
                           if PermissionManager.SoftwareAsAService then
                             ReplayGettingStartedVisible := true;
                           RoleCenterNotificationMgt.HideEvaluationNotificationAfterStartingTrial;
                         END;

    ActionList=ACTIONS
    {
      { 22      ;    ;ActionContainer;
                      Name=ActionContainer22;
                      ActionContainerType=ActionItems }
      { 24      ;1   ;Action    ;
                      Name=Set Up Cues;
                      CaptionML=ENU=Set Up Cues;
                      ToolTipML=ENU=Set up the cues (status tiles) related to the role.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Setup;
                      OnAction=VAR
                                 CueSetup@1001 : Codeunit "Cue Setup";
                                 CueRecordRef@1000 : RecordRef;
                               BEGIN
                                 CueRecordRef.GETTABLE(Rec);
                                 CueSetup.OpenCustomizePageForCurrentUser(CueRecordRef.NUMBER);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Control1900000001;
                ContainerType=ContentArea }

    { 36  ;1   ;Group     ;
                Name=Control36;
                GroupType=CueGroup;
                Layout=Wide }

    { 37  ;2   ;Field     ;
                Name="Overdue Purchase Documents";
                ToolTipML=ENU=Specifies the number of purchase invoices where your payment is late.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Overdue Purchase Documents";
                DrillDownPageID="Vendor Ledger Entries";
                ImplicitType=Integer }

    { 7   ;2   ;Field     ;
                Name="Cash Accounts Balance";
                ToolTipML=ENU=Specifies the sum of the accounts that have the cash account category.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Cash Accounts Balance";
                DrillDownPageID="Chart of Accounts";
                OnDrillDown=VAR
                              ActivitiesMgt@1000 : Codeunit "Activities Mgt.";
                            BEGIN
                              ActivitiesMgt.DrillDownCalcCashAccountsBalances;
                            END;

                ImplicitType=Decimal;
                Image=Cash }

    { 29  ;2   ;Field     ;
                Name="New Incoming Documents";
                ToolTipML=ENU=Specifies the number of new incoming documents in the company. The documents are filtered by today's date.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="New Incoming Documents";
                DrillDownPageID="Incoming Documents";
                ImplicitType=Integer }

    { 6   ;1   ;Group     ;
                Name=Payments;
                CaptionML=ENU=Payments;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 1       ;0   ;Action    ;
                                  Name="Edit Cash Receipt Journal";
                                  CaptionML=ENU=Edit Cash Receipt Journal;
                                  ToolTipML=ENU=Register received payments in a cash receipt journal that may already contain journal lines.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page "Cash Receipt Journal" }
                  { 3       ;0   ;Action    ;
                                  Name="New Sales Credit Memo";
                                  CaptionML=ENU=New Sales Credit Memo;
                                  ToolTipML=ENU=Process a return or refund by creating a new sales credit memo.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page "Sales Credit Memo";
                                  RunPageMode=Create }
                  { 4       ;0   ;Action    ;
                                  Name="Edit Payment Journal";
                                  CaptionML=ENU=Edit Payment Journal;
                                  ToolTipML=ENU=Pay your vendors by filling the payment journal automatically according to payments due, and potentially export all payment to your bank for automatic processing.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page "Payment Journal" }
                  { 5       ;0   ;Action    ;
                                  Name="New Purchase Credit Memo";
                                  CaptionML=ENU=New Purchase Credit Memo;
                                  ToolTipML=ENU=Create a new purchase credit memo so you can manage returned items to a vendor.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page "Purchase Credit Memo";
                                  RunPageMode=Create }
                }
                 }

    { 9   ;2   ;Field     ;
                Name="Purchase Documents Due Today";
                ToolTipML=ENU=Specifies the number of purchase invoices that are due for payment today.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Purchase Documents Due Today";
                DrillDownPageID="Vendor Ledger Entries";
                ImplicitType=Integer }

    { 16  ;2   ;Field     ;
                Name="Purch. Invoices Due Next Week";
                ToolTipML=ENU=Specifies the number of payments to vendors that are due next week.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Purch. Invoices Due Next Week";
                ImplicitType=Integer }

    { 17  ;2   ;Field     ;
                Name="Purchase Discounts Next Week";
                ToolTipML=ENU=Specifies the number of purchase discounts that are available next week, for example, because the discount expires after next week.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Purchase Discounts Next Week";
                ImplicitType=Integer }

    { 19  ;1   ;Group     ;
                Name="Document Approvals";
                CaptionML=ENU=Document Approvals;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 25      ;    ;Action    ;
                                  Name="Create Reminders...";
                                  CaptionML=ENU=Create Reminders...;
                                  ToolTipML=ENU=Remind your customers of late payments.;
                                  ApplicationArea=#Suite,#Advanced;
                                  RunObject=Report "Create Reminders";
                                  Image=CreateReminders }
                  { 26      ;    ;Action    ;
                                  Name="Create Finance Charge Memos...";
                                  CaptionML=ENU=Create Finance Charge Memos...;
                                  ToolTipML=ENU=Issue finance charge memos to your customers as a consequence of late payment.;
                                  ApplicationArea=#Suite,#Advanced;
                                  RunObject=Report "Create Finance Charge Memos";
                                  Image=CreateFinanceChargememo }
                }
                 }

    { 23  ;2   ;Field     ;
                Name="POs Pending Approval";
                ToolTipML=ENU=Specifies the number of purchase orders that are pending approval.;
                ApplicationArea=#Suite;
                SourceExpr="POs Pending Approval";
                DrillDownPageID="Purchase Order List";
                ImplicitType=Integer }

    { 20  ;2   ;Field     ;
                Name="SOs Pending Approval";
                ToolTipML=ENU=Specifies the number of sales orders that are pending approval.;
                ApplicationArea=#Suite;
                SourceExpr="SOs Pending Approval";
                DrillDownPageID="Sales Order List";
                ImplicitType=Integer }

    { 14  ;1   ;Group     ;
                Name=Financials;
                CaptionML=ENU=Financials;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 15      ;    ;Action    ;
                                  Name="New Payment Reconciliation Journal";
                                  CaptionML=ENU=New Payment Reconciliation Journal;
                                  ToolTipML=ENU=Reconcile unpaid documents automatically with their related bank transactions by importing bank a bank statement feed or file.;
                                  ApplicationArea=#Basic,#Suite;
                                  OnAction=VAR
                                             BankAccReconciliation@1000 : Record "Bank Acc. Reconciliation";
                                           BEGIN
                                             BankAccReconciliation.OpenNewWorksheet
                                           END;
                                            }
                }
                 }

    { 11  ;2   ;Field     ;
                Name="Non-Applied Payments";
                CaptionML=ENU=Unprocessed Payments;
                ToolTipML=ENU=Specifies a window to reconcile unpaid documents automatically with their related bank transactions by importing a bank statement feed or file. In the payment reconciliation journal, incoming or outgoing payments on your bank are automatically, or semi-automatically, applied to their related open customer or vendor ledger entries. Any open bank account ledger entries related to the applied customer or vendor ledger entries will be closed when you choose the Post Payments and Reconcile Bank Account action. This means that the bank account is automatically reconciled for payments that you post with the journal.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Non-Applied Payments";
                DrillDownPageID="Pmt. Reconciliation Journals";
                ImplicitType=Integer;
                Image=Cash }

    { 2   ;1   ;Group     ;
                Name="Incoming Documents";
                CaptionML=ENU=Incoming Documents;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 12      ;    ;Action    ;
                                  Name=CheckForOCR;
                                  CaptionML=ENU=Receive from OCR Service;
                                  ToolTipML=ENU=Process new incoming electronic documents that have been created by the OCR service and that you can convert to, for example, purchase invoices in Dynamics 365.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Codeunit "OCR - Receive from Service";
                                  Visible=ShowCheckForOCR;
                                  RunPageMode=View }
                }
                 }

    { 10  ;2   ;Field     ;
                Name="Approved Incoming Documents";
                ToolTipML=ENU=Specifies the number of approved incoming documents in the company. The documents are filtered by today's date.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Approved Incoming Documents";
                DrillDownPageID="Incoming Documents";
                ImplicitType=Integer }

    { 13  ;2   ;Field     ;
                Name="OCR Completed";
                ToolTipML=ENU=Specifies that incoming document records that have been created by the OCR service.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="OCR Completed";
                DrillDownPageID="Incoming Documents";
                ImplicitType=Integer }

    { 35  ;1   ;Group     ;
                Name="My User Tasks";
                CaptionML=ENU=My User Tasks;
                GroupType=CueGroup }

    { 34  ;2   ;Field     ;
                Name="Pending Tasks";
                CaptionML=ENU=Pending User Tasks;
                ToolTipML=ENU=Specifies the number of pending tasks that are assigned to you.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pending Tasks";
                DrillDownPageID="User Task List";
                ImplicitType=Integer;
                Image=Checklist }

    { 18  ;1   ;Group     ;
                Name=Start;
                CaptionML=ENU=Start;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 21      ;    ;Action    ;
                                  Name="G/L Journal Entry";
                                  CaptionML=ENU=G/L Journal Entry;
                                  ToolTipML=ENU=Prepare to post any transaction to the company books.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page "General Journal";
                                  Image=TileNew }
                  { 1020000 ;    ;Action    ;
                                  Name="Recurring G/L Entry";
                                  CaptionML=ENU=Recurring G/L Entry;
                                  ToolTipML=ENU=Prepare to post any recurring transaction to the company books.;
                                  ApplicationArea=#Suite;
                                  RunObject=Page "Recurring General Journal";
                                  Image=TileNew }
                  { 28      ;    ;Action    ;
                                  Name="Payment Journal Entry";
                                  CaptionML=ENU=Payment Journal Entry;
                                  ToolTipML=ENU=Pay your vendors by filling the payment journal automatically according to payments due, and potentially export all payment to your bank for automatic processing.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page "Payment Journal";
                                  Image=TileNew }
                }
                 }

    { 33  ;1   ;Group     ;
                Name="Product Videos";
                CaptionML=ENU=Product Videos;
                Visible=ShowProductVideosActivities;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 32      ;    ;Action    ;
                                  Name="Product Videos";
                                  CaptionML=ENU=Product Videos;
                                  ToolTipML=ENU=Open a list of videos that showcase some of the product capabilities.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page "Product Videos";
                                  Image=TileVideo }
                }
                 }

    { 31  ;1   ;Group     ;
                Name="Get started";
                CaptionML=ENU=Get started;
                Visible=ReplayGettingStartedVisible;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 27      ;    ;Action    ;
                                  Name=ShowStartInMyCompany;
                                  CaptionML=ENU=Try with my own data;
                                  ToolTipML=ENU=Set up My Company with the settings you choose. We'll show you how, it's easy.;
                                  ApplicationArea=#Basic,#Suite;
                                  Visible=FALSE;
                                  Image=TileSettings;
                                  OnAction=BEGIN
                                             if UserTours.IsAvailable and O365GettingStartedMgt.AreUserToursEnabled then
                                               UserTours.StartUserTour(O365GettingStartedMgt.GetChangeCompanyTourID);
                                           END;
                                            }
                  { 30      ;    ;Action    ;
                                  Name=ReplayGettingStarted;
                                  CaptionML=ENU=Play Getting Started;
                                  ToolTipML=ENU=Show the Getting Started guide again.;
                                  ApplicationArea=#Basic,#Suite;
                                  Image=TileVideo;
                                  OnAction=VAR
                                             O365GettingStarted@1000 : Record "O365 Getting Started";
                                           BEGIN
                                             if O365GettingStarted.GET(USERID,ClientTypeManagement.GetCurrentClientType) then begin
                                               O365GettingStarted."Tour in Progress" := false;
                                               O365GettingStarted."Current Page" := 1;
                                               O365GettingStarted.MODIFY;
                                               COMMIT;
                                             end;

                                             O365GettingStartedMgt.LaunchWizard(true,false);
                                           END;
                                            }
                }
                 }

  }
  CODE
  {
    VAR
      O365GettingStartedMgt@1002 : Codeunit "O365 Getting Started Mgt.";
      ClientTypeManagement@1077 : Codeunit ClientTypeManagement;
      PermissionManager@1099 : Codeunit "Permission Manager";
      OCRServiceMgt@1008 : Codeunit "OCR Service Mgt.";
      PageNotifier@1000 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=12.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.PageNotifier" WITHEVENTS RUNONCLIENT;
      UserTours@1003 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=12.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.UserTours" WITHEVENTS RUNONCLIENT;
      ShowProductVideosActivities@1005 : Boolean;
      HideNpsDialog@1006 : Boolean;
      ReplayGettingStartedVisible@1001 : Boolean;
      WhatIsNewTourVisible@1007 : Boolean;
      ShowCheckForOCR@1004 : Boolean;

    LOCAL PROCEDURE CalculateCueFieldValues@1();
    VAR
      ActivitiesMgt@1000 : Codeunit "Activities Mgt.";
    BEGIN
      if FIELDACTIVE("Cash Accounts Balance") then
        "Cash Accounts Balance" := ActivitiesMgt.CalcCashAccountsBalances;
    END;

    LOCAL PROCEDURE SetActivityGroupVisibility@12();
    VAR
      ProductVideosActivitiesMgt@1000 : Codeunit "Product Videos Activities Mgt.";
    BEGIN
      ShowProductVideosActivities := ProductVideosActivitiesMgt.IsActivitiesVisible;
    END;

    LOCAL PROCEDURE StartWhatIsNewTour@45(hasTourCompleted@1000 : Boolean);
    VAR
      O365UserTours@1001 : Record "User Tours";
      TourID@1003 : Integer;
    BEGIN
      TourID := O365GettingStartedMgt.GetWhatIsNewTourID;

      if O365UserTours.AlreadyCompleted(TourID) then
        exit;

      if (not hasTourCompleted) and (not PermissionManager.IsPreview) then begin
        UserTours.StartUserTour(TourID);
        WhatIsNewTourVisible := true;
        exit;
      end;

      if WhatIsNewTourVisible then begin
        O365UserTours.MarkAsCompleted(TourID);
        WhatIsNewTourVisible := false;
      end;
    END;

    EVENT PageNotifier@1000::PageReady@9();
    VAR
      NetPromoterScoreMgt@1000 : Codeunit "Net Promoter Score Mgt.";
    BEGIN
      NetPromoterScoreMgt.ShowNpsDialog;
    END;

    EVENT UserTours@1003::ShowTourWizard@15(hasTourCompleted@1000 : Boolean);
    VAR
      NetPromoterScoreMgt@1001 : Codeunit "Net Promoter Score Mgt.";
    BEGIN
      if O365GettingStartedMgt.IsGettingStartedSupported then
        if O365GettingStartedMgt.LaunchWizard(false,hasTourCompleted) then
          exit;

      if (not hasTourCompleted) and (not HideNpsDialog) then
        if NetPromoterScoreMgt.ShowNpsDialog then begin
          HideNpsDialog := true;
          exit;
        end;

      StartWhatIsNewTour(hasTourCompleted);
    END;

    EVENT UserTours@1003::IsTourInProgressResultReady@16(isInProgress@1000 : Boolean);
    BEGIN
    END;

    BEGIN
    END.
  }
}

