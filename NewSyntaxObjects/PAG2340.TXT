OBJECT Page 2340 BC O365 No. Series Card
{
  OBJECT-PROPERTIES
  {
    Date=20180425D;
    Time=161409.547T;
    Modified=true;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Numbers;
    SourceTable="No. Series";
    DataCaptionExpr=GetNoSeriesDescription;
    PageType=StandardDialog;
    OnInit=BEGIN
             Initialize;
           END;

    OnQueryClosePage=BEGIN
                       if CloseAction <> ACTION::OK then
                         exit;

                       UpdateLineForNewSeries;
                     END;

    ActionList=ACTIONS
    {
      { 7       ;    ;ActionContainer;
                      Name=ActionContainer7;
                      ActionContainerType=ActionItems }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Control1;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Control2;
                Visible=IsPostedInvoiceNoSeries;
                GroupType=Group;
                InstructionalTextML=ENU=Specify how you want your invoices to be numbered, such as 0001, INV0001, or INV-0001. This number will then be applied to your next invoice. }

    { 5   ;1   ;Group     ;
                Name=Control5;
                Visible=NOT IsPostedInvoiceNoSeries;
                GroupType=Group;
                InstructionalTextML=ENU=Specify how you want your estimates to be numbered, such as 0001, EST0001, or EST-0001. This number will then be applied to your next estimate. }

    { 3   ;1   ;Field     ;
                Name=NextNo;
                CaptionML=ENU=Next number;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                NotBlank=true;
                SourceExpr=NextNoSeries;
                ImplicitType=Code15;
                ShowCaption=false }

  }
  CODE
  {
    VAR
      SalesReceivablesSetup@1004 : Record "Sales & Receivables Setup";
      TextManagement@1001 : Codeunit TextManagement;
      NoSeriesManagement@1005 : Codeunit NoSeriesManagement;
      NextNoSeries@1000 : Code[15];
      IsPostedInvoiceNoSeries@1002 : Boolean;
      ConfirmNewInvoiceNoSeriesQst@1006 : TextConst 'ENU=If you have already sent invoices, please consult your accountant before you change the number sequence.\ \Do you want to continue?';
      InvoiceDocTypeTxt@1007 : TextConst 'ENU=Invoice';
      NextNumberTxt@1003 : TextConst 'ENU=Next number';
      Confirmed@1009 : Boolean;

    LOCAL PROCEDURE Initialize@1();
    VAR
      LocalNoSeries@1000 : Code[20];
    BEGIN
      if SalesReceivablesSetup.GET then;
      if Code = SalesReceivablesSetup."Posted Invoice Nos." then
        IsPostedInvoiceNoSeries := true;
      LocalNoSeries := NoSeriesManagement.ClearStateAndGetNextNo(Code);
      Confirmed := true;
      if STRLEN(LocalNoSeries) <= MAXSTRLEN(NextNoSeries) then
        NextNoSeries := COPYSTR(LocalNoSeries,1,MAXSTRLEN(NextNoSeries));
    END;

    LOCAL PROCEDURE UpdateLineForNewSeries@6();
    VAR
      NoSeriesLine@1001 : Record "No. Series Line";
    BEGIN
      if NextNoSeries = '' then
        exit;

      if NextNoSeries = NoSeriesManagement.ClearStateAndGetNextNo(Code) then
        exit;

      TextManagement.EvaluateIncStr(NextNoSeries,NextNumberTxt);

      if IsPostedInvoiceNoSeries then
        Confirmed := CONFIRM(ConfirmNewInvoiceNoSeriesQst);

      if Confirmed then begin
        NoSeriesLine.RESET;
        NoSeriesLine.SETCURRENTKEY("Series Code","Starting Date");
        NoSeriesLine.SETRANGE("Series Code",Code);
        NoSeriesLine.SETRANGE("Starting Date",0D,WORKDATE);
        if NoSeriesLine.FINDLAST then begin
          NoSeriesLine.INIT;
          NoSeriesLine.VALIDATE("Starting No.",NextNoSeries);
          NoSeriesLine.MODIFY(true);
        end else begin
          NoSeriesLine.INIT;
          NoSeriesLine.VALIDATE("Series Code",Code);
          NoSeriesLine.VALIDATE("Line No.",GetNextLineNo(Code));
          NoSeriesLine.VALIDATE("Starting No.",NextNoSeries);
          NoSeriesLine.INSERT(true);
        end;
        OnAfterNoSeriesModified;
      end;
    END;

    LOCAL PROCEDURE GetNoSeriesDescription@2() NoSeriesDescription : Text;
    VAR
      SalesReceivablesSetup@1000 : Record "Sales & Receivables Setup";
    BEGIN
      if SalesReceivablesSetup.GET then;

      if Code = SalesReceivablesSetup."Quote Nos." then
        NoSeriesDescription := Description
      else
        NoSeriesDescription := InvoiceDocTypeTxt;
    END;

    LOCAL PROCEDURE GetNextLineNo@5(SeriesCode@1000 : Code[20]) : Integer;
    VAR
      NoSeriesLine@1001 : Record "No. Series Line";
    BEGIN
      NoSeriesLine.SETRANGE("Series Code",SeriesCode);
      if NoSeriesLine.FINDLAST then;

      exit(NoSeriesLine."Line No." + 10000);
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterNoSeriesModified@18();
    BEGIN
    END;

    BEGIN
    END.
  }
}

