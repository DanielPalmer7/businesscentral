OBJECT Page 2142 O365 First Invoice Wizard
{
  OBJECT-PROPERTIES
  {
    Date=20180425D;
    Time=161403.290T;
    Modified=true;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=" ";
    PageType=NavigatePage;
    OnInit=BEGIN
             Initialize
           END;

    OnOpenPage=BEGIN
                 Step := Step::First;
                 EnableControls;

                 ItemBaseUnitOfMeasure := O365TemplateManagement.GetDefaultBaseUnitOfMeasure;
                 SetDefaultTaxAreaCodeForCA;
                 if IsUsingVAT then begin
                   VATBusinessPostingGroupCode := O365TemplateManagement.GetDefaultVATBusinessPostingGroup;
                   VATProductPostingGroup.GET(O365TemplateManagement.GetDefaultVATProdPostingGroup);
                 end;
               END;

    OnQueryClosePage=BEGIN
                       if Customer."No." <> '' then
                         if Step <> Step::Finish then
                           Customer.DELETE(true);
                     END;

    ActionList=ACTIONS
    {
      { 10      ;    ;ActionContainer;
                      Name=ActionContainer10;
                      ActionContainerType=ActionItems }
      { 14      ;1   ;Action    ;
                      Name=ActionNext;
                      CaptionML=ENU=Next;
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Visible=NextActionEnabled;
                      InFooterBar=true;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 NextStep;
                               END;
                                }
      { 35      ;1   ;Action    ;
                      Name=ActionBack;
                      CaptionML=ENU=Back;
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Visible=BackActionEnabled;
                      InFooterBar=true;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 PrevStep;
                               END;
                                }
      { 34      ;1   ;Action    ;
                      Name=ActionCreateInvoice;
                      CaptionML=ENU=Create Invoice;
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Visible=CreateInvoiceActionEnabled;
                      InFooterBar=true;
                      OnAction=BEGIN
                                 Step := Step::Customer;
                                 EnableControls;
                               END;
                                }
      { 36      ;1   ;Action    ;
                      Name=ActionDone;
                      CaptionML=ENU=Done;
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Visible=DoneActionEnabled;
                      InFooterBar=true;
                      OnAction=BEGIN
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Control1;
                ContainerType=ContentArea }

    { 96  ;1   ;Group     ;
                Name=Control96;
                Visible=TopBannerVisible AND CustomerStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 97  ;2   ;Field     ;
                Name=MediaResourcesFirstInv1;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=MediaResourcesFirstInv1."Media Reference";
                Editable=FALSE;
                ShowCaption=false }

    { 98  ;1   ;Group     ;
                Name=Control98;
                Visible=TopBannerVisible AND ItemStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 99  ;2   ;Field     ;
                Name=MediaResourcesFirstInv2;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=MediaResourcesFirstInv2."Media Reference";
                Editable=FALSE;
                ShowCaption=false }

    { 42  ;1   ;Group     ;
                Name=Control42;
                Visible=TopBannerVisible AND TaxStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 41  ;2   ;Field     ;
                Name=MediaResourcesFirstInv3;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=MediaResourcesFirstInv3."Media Reference";
                Editable=FALSE;
                ShowCaption=false }

    { 24  ;1   ;Group     ;
                Name=FirstStep;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 23  ;2   ;Group     ;
                Name=Hi;
                CaptionML=ENU=Hi;
                Visible=NOT UserNameAvailable;
                GroupType=Group }

    { 1020004;2;Group     ;
                Name="Hi,";
                CaptionML=ENU=Hi,;
                Visible=UserNameAvailable;
                GroupType=Group }

    { 1020003;3;Field     ;
                Name=UserName;
                CaptionML=ENU=User;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=UserName;
                Editable=FALSE;
                OnValidate=BEGIN
                             EnableControls;
                           END;

                ShowCaption=false }

    { 1020006;2;Group     ;
                Name=Control1020006;
                Visible=ImagesVisible;
                Editable=FALSE;
                GroupType=Group }

    { 1020005;3;Field     ;
                Name=<MediaRepositoryFirstInvFirst>;
                CaptionML=ENU=<MediaRepositoryFirstInvFirst>;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=MediaResourcesFirstInvFirst."Media Reference";
                Editable=FALSE;
                ShowCaption=false }

    { 19  ;2   ;Group     ;
                Name=Control19;
                GroupType=Group;
                InstructionalTextML=ENU=Let's create your first invoice. }

    { 8   ;1   ;Group     ;
                Name=CustomerStep;
                Visible=CustomerStepVisible;
                GroupType=Group }

    { 13  ;2   ;Group     ;
                Name="Who are you invoicing?";
                CaptionML=ENU=Who are you invoicing?;
                GroupType=Group }

    { 18  ;3   ;Group     ;
                Name=Control18;
                GroupType=Group;
                InstructionalTextML=ENU=We'll file this away for next time. }

    { 3   ;4   ;Field     ;
                Name=CustomerName;
                CaptionML=ENU=Customer name;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=CustomerName;
                OnValidate=BEGIN
                             ModifyCustomer;
                             EnableControls;
                           END;

                ShowCaption=false }

    { 1020002;4;Field     ;
                Name=CustomerEmail;
                ExtendedDatatype=E-Mail;
                CaptionML=ENU=Email (optional);
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=CustomerEmail;
                OnValidate=VAR
                             MailManagement@1000 : Codeunit "Mail Management";
                           BEGIN
                             if CustomerEmail <> '' then
                               MailManagement.CheckValidEmailAddress(CustomerEmail);
                             ModifyCustomer;
                             EnableControls;
                           END;

                ShowCaption=false }

    { 22  ;4   ;Field     ;
                Name=<FullAddress>;
                CaptionML=ENU=Address (optional);
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=FullAddress;
                OnAssistEdit=VAR
                               TempStandardAddress@1000 : TEMPORARY Record "Standard Address";
                             BEGIN
                               CreateCustomer(CustomerName);
                               TempStandardAddress.CopyFromCustomer(Customer);
                               if PAGE.RUNMODAL(PAGE::"O365 Address",TempStandardAddress) = ACTION::LookupOK then begin
                                 Customer.GET(Customer."No.");
                                 FullAddress := TempStandardAddress.ToString;
                               end;
                             END;

                ShowCaption=false;
                QuickEntry=FALSE }

    { 7   ;1   ;Group     ;
                Name=ItemStep;
                Visible=ItemStepVisible;
                GroupType=Group }

    { 26  ;2   ;Group     ;
                Name="What did you sell?";
                CaptionML=ENU=What did you sell?;
                GroupType=Group }

    { 2   ;3   ;Group     ;
                Name=Control2;
                GroupType=Group;
                InstructionalTextML=ENU=Start adding items. You can always edit later. }

    { 4   ;4   ;Field     ;
                Name=ItemDescription;
                CaptionML=ENU=Description of product or service;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=ItemDescription;
                OnValidate=BEGIN
                             EnableControls;
                           END;

                ShowCaption=false }

    { 5   ;4   ;Field     ;
                Name=ItemPrice;
                CaptionML=ENU=Price (excl. tax);
                ApplicationArea=#Basic,#Suite,#Invoicing;
                DecimalPlaces=2:5;
                BlankZero=true;
                SourceExpr=ItemPrice;
                MinValue=0;
                ShowCaption=false }

    { 28  ;1   ;Group     ;
                Name=TaxStep;
                Visible=TaxStepVisible;
                GroupType=Group }

    { 27  ;2   ;Group     ;
                Name="Need to add sales tax?";
                CaptionML=ENU=Need to add sales tax?;
                Visible=(NOT IsUsingVAT);
                GroupType=Group }

    { 17  ;3   ;Group     ;
                Name=Control17;
                Visible=(NOT IsUsingVAT) AND (NOT IsCanada);
                GroupType=Group;
                InstructionalTextML=ENU=Tell us the tax rate for your region. }

    { 9   ;4   ;Field     ;
                Name=CityTax;
                CaptionML=ENU=City Tax %;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                DecimalPlaces=1:3;
                BlankZero=true;
                SourceExpr=CityTax;
                MinValue=0;
                OnValidate=BEGIN
                             EnableControls;
                           END;

                ShowCaption=false }

    { 6   ;4   ;Field     ;
                Name=StateTax;
                CaptionML=ENU=State Tax %;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                DecimalPlaces=1:3;
                BlankZero=true;
                SourceExpr=StateTax;
                MinValue=0;
                ShowCaption=false }

    { 1020001;3;Group     ;
                Name=Control1020001;
                Visible=(NOT IsUsingVAT) AND IsCanada;
                GroupType=Group;
                InstructionalTextML=ENU=Tell us your region. }

    { 1020000;4;Field     ;
                Name=TaxAreaCode;
                CaptionML=ENU=Tax Area Code;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=TaxAreaCodeCA;
                TableRelation="Tax Area".Code;
                OnLookup=VAR
                           TaxArea@1020001 : Record "Tax Area";
                           CloseAction@1020000 : Action;
                         BEGIN
                           CloseAction := PAGE.RUNMODAL(PAGE::"O365 Tax Area List",TaxArea);
                           if CloseAction <> ACTION::LookupOK then
                             exit;

                           TaxAreaCodeCA := TaxArea.Code;
                         END;

                QuickEntry=FALSE }

    { 1020007;2;Group     ;
                Name="Here is your default Tax.";
                CaptionML=ENU=Here is your default Tax.;
                Visible=IsUsingVAT;
                GroupType=Group }

    { 21  ;3   ;Group     ;
                Name=Control21;
                Visible=IsUsingVAT;
                GroupType=Group;
                InstructionalTextML=ENU=You can always edit it later. }

    { 16  ;4   ;Field     ;
                Name=VAT Group;
                CaptionML=ENU=Tax;
                ToolTipML=ENU=Specifies the Tax group code for this item.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                NotBlank=true;
                SourceExpr=VATProductPostingGroup.Description;
                Visible=IsUsingVAT;
                OnLookup=BEGIN
                           if PAGE.RUNMODAL(PAGE::"O365 VAT Product Posting Gr.",VATProductPostingGroup) = ACTION::LookupOK then;
                         END;

                ShowCaption=false;
                QuickEntry=FALSE }

    { 49  ;1   ;Group     ;
                Name=FinalStep;
                Visible=FinalStepVisible;
                GroupType=Group }

    { 20  ;2   ;Group     ;
                Name=Control20;
                Visible=ImagesVisible;
                Editable=FALSE;
                GroupType=Group }

    { 12  ;3   ;Field     ;
                Name=<MediaRepositoryLastInvFirst>;
                CaptionML=ENU=<MediaRepositoryLastInvFirst>;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=MediaResourcesFirstInvLast."Media Reference";
                Editable=FALSE;
                ShowCaption=false }

    { 48  ;2   ;Group     ;
                Name="Voila!";
                CaptionML=ENU=Voila!;
                GroupType=Group }

    { 46  ;3   ;Group     ;
                Name=Control46;
                GroupType=Group;
                InstructionalTextML=ENU=Your first invoice is ready. Preview it, send it, or add more details whenever you want. }

  }
  CODE
  {
    VAR
      Customer@1001 : Record Customer;
      Item@1002 : Record Item;
      SalesHeader@1003 : Record "Sales Header";
      SalesLine@1030 : Record "Sales Line";
      MediaRepositoryFirstInv1@1040 : Record "Media Repository";
      MediaRepositoryFirstInv2@1034 : Record "Media Repository";
      MediaRepositoryFirstInv3@1041 : Record "Media Repository";
      MediaRepositoryFirstInvFirst@1033 : Record "Media Repository";
      MediaRepositoryFirstInvLast@1032 : Record "Media Repository";
      MediaResourcesFirstInv1@1028 : Record "Media Resources";
      MediaResourcesFirstInv2@1027 : Record "Media Resources";
      MediaResourcesFirstInv3@1039 : Record "Media Resources";
      MediaResourcesFirstInvFirst@1038 : Record "Media Resources";
      MediaResourcesFirstInvLast@1029 : Record "Media Resources";
      O365SalesInitialSetup@1023 : Record "O365 Sales Initial Setup";
      TaxSetup@1020008 : Record "Tax Setup";
      SalesTaxSetupWizard@1020007 : Record "Sales Tax Setup Wizard";
      VATProductPostingGroup@1037 : Record "VAT Product Posting Group";
      O365TemplateManagement@1024 : Codeunit "O365 Template Management";
      Step@1012 : 'First,Customer,Item,Tax,Finish';
      TopBannerVisible@1042 : Boolean;
      ImagesVisible@1036 : Boolean;
      FirstStepVisible@1009 : Boolean;
      CustomerStepVisible@1010 : Boolean;
      ItemStepVisible@1011 : Boolean;
      TaxStepVisible@1019 : Boolean;
      FinalStepVisible@1015 : Boolean;
      BackActionEnabled@1008 : Boolean;
      NextActionEnabled@1014 : Boolean;
      CreateInvoiceActionEnabled@1016 : Boolean;
      DoneActionEnabled@1017 : Boolean;
      UserNameAvailable@1013 : Boolean;
      UserName@1035 : Text;
      CustomerName@1005 : Text[50];
      ItemDescription@1007 : Text[50];
      FullAddress@1025 : Text;
      ItemPrice@1000 : Decimal;
      ItemBaseUnitOfMeasure@1004 : Code[10];
      CityTax@1020 : Decimal;
      StateTax@1022 : Decimal;
      VATBusinessPostingGroupCode@1018 : Code[20];
      IsUsingVAT@1021 : Boolean;
      ItemNoDescriptionErr@1026 : TextConst 'ENU=Give your product or service a description.';
      CustNoNameErr@1031 : TextConst 'ENU=Enter a customer name to create your first invoice for them.';
      IsCanada@1020001 : Boolean;
      TaxAreaCodeCA@1020000 : Code[20];
      DefaultCityTxt@1020005 : TextConst 'ENU=Default';
      DefaultStateTxt@1020004 : TextConst 'ENU=NN';
      DefaultLbl@1020003 : TextConst 'ENU=Default';
      TaxableCodeTxt@1020002 : TextConst '@@@={Locked};ENU=TAXABLE';
      CustomerEmail@1020006 : Text[80];

    PROCEDURE HasCompleted@9() : Boolean;
    BEGIN
      exit(Step = Step::Finish);
    END;

    PROCEDURE GetInvoiceNo@15() : Code[20];
    BEGIN
      exit(SalesHeader."No.");
    END;

    LOCAL PROCEDURE EnableControls@2();
    BEGIN
      ResetControls;

      case Step of
        Step::First:
          ShowFirstStep;
        Step::Customer:
          ShowCustomerStep;
        Step::Item:
          ShowItemStep;
        Step::Tax:
          ShowTaxStep;
        Step::Finish:
          ShowFinishStep;
      end;
    END;

    LOCAL PROCEDURE PrevStep@12();
    BEGIN
      case Step of
        Step::First:
          ShowFirstStep;
        Step::Customer:
          ShowFirstStep;
        Step::Item:
          ShowCustomerStep;
        Step::Tax:
          ShowItemStep;
        Step::Finish:
          ShowFinishStep;
      end;
      EnableControls;
    END;

    LOCAL PROCEDURE NextStep@41();
    BEGIN
      case Step of
        Step::First:
          ShowCustomerStep;
        Step::Customer:
          if ValidateCustomer then
            ShowItemStep;
        Step::Item:
          if ValidateItem then
            ShowTaxStep;
        Step::Tax:
          ShowFinishStep;
      end;
      EnableControls;
    END;

    LOCAL PROCEDURE ShowFirstStep@7();
    BEGIN
      Step := Step::First;
      FirstStepVisible := true;
      CreateInvoiceActionEnabled := true;
    END;

    LOCAL PROCEDURE ShowCustomerStep@33();
    BEGIN
      Step := Step::Customer;
      CustomerStepVisible := true;
      NextActionEnabled := true;
      BackActionEnabled := true;
    END;

    LOCAL PROCEDURE ShowItemStep@34();
    BEGIN
      Step := Step::Item;
      ItemStepVisible := true;
      NextActionEnabled := true;
      BackActionEnabled := true;
    END;

    LOCAL PROCEDURE ShowTaxStep@8();
    BEGIN
      Step := Step::Tax;
      TaxStepVisible := true;
      NextActionEnabled := true;
      BackActionEnabled := true;
    END;

    LOCAL PROCEDURE ShowFinishStep@35();
    BEGIN
      CreateInvoice;
      Step := Step::Finish;
      FinalStepVisible := true;
      DoneActionEnabled := true;
    END;

    LOCAL PROCEDURE ResetControls@1();
    BEGIN
      NextActionEnabled := false;
      FirstStepVisible := false;
      CustomerStepVisible := false;
      ItemStepVisible := false;
      TaxStepVisible := false;
      FinalStepVisible := false;
      BackActionEnabled := false;
      DoneActionEnabled := false;
      CreateInvoiceActionEnabled := false;
    END;

    LOCAL PROCEDURE LoadTopBanners@40();
    BEGIN
      if MediaRepositoryFirstInv1.GET('FirstInvoice1.png','PHONE') and
         MediaRepositoryFirstInv2.GET('FirstInvoice2.png','PHONE') and
         MediaRepositoryFirstInv3.GET('FirstInvoice3.png','PHONE')
      then
        if MediaResourcesFirstInv1.GET(MediaRepositoryFirstInv1."Media Resources Ref") and
           MediaResourcesFirstInv2.GET(MediaRepositoryFirstInv2."Media Resources Ref") and
           MediaResourcesFirstInv3.GET(MediaRepositoryFirstInv3."Media Resources Ref")
        then
          TopBannerVisible := MediaResourcesFirstInv1."Media Reference".HASVALUE;
    END;

    LOCAL PROCEDURE LoadImages@6();
    BEGIN
      if MediaRepositoryFirstInvFirst.GET('FirstInvoiceSplash.png','PHONE') and
         MediaRepositoryFirstInvLast.GET('FirstInvoiceSplash.png','PHONE')
      then
        if MediaResourcesFirstInvFirst.GET(MediaRepositoryFirstInvFirst."Media Resources Ref") and
           MediaResourcesFirstInvLast.GET(MediaRepositoryFirstInvLast."Media Resources Ref")
        then
          ImagesVisible := MediaResourcesFirstInvFirst."Media Reference".HASVALUE;
    END;

    LOCAL PROCEDURE CreateCustomer@13(CustomerName@1002 : Text[50]);
    VAR
      Customer2@1003 : Record Customer;
      MiniCustomerTemplate@1000 : Record "Mini Customer Template";
      CustContUpdate@1004 : Codeunit "CustCont-Update";
    BEGIN
      if Customer."No." <> '' then
        exit;

      Customer2.INIT;
      if MiniCustomerTemplate.NewCustomerFromTemplate(Customer2) then begin
        Customer2.VALIDATE(Name,CustomerName);
        Customer2.VALIDATE("E-Mail",CustomerEmail);
        Customer2.VALIDATE("Tax Liable",true);
        Customer2.MODIFY(true);
        CustContUpdate.OnModify(Customer2);
        COMMIT;
      end;

      Customer := Customer2;
    END;

    LOCAL PROCEDURE CreateItem@14();
    VAR
      ItemTemplate@1000 : Record "Item Template";
    BEGIN
      if Item."No." = '' then begin
        Item.INIT;
        if ItemTemplate.NewItemFromTemplate(Item) then begin
          Item.VALIDATE(Description,ItemDescription);
          Item.VALIDATE("Unit Price",ItemPrice);
          if IsUsingVAT then
            Item.VALIDATE("VAT Prod. Posting Group",VATProductPostingGroup.Code);
          if ItemBaseUnitOfMeasure <> '' then
            Item.VALIDATE("Base Unit of Measure",ItemBaseUnitOfMeasure);
          Item.MODIFY(true);
          COMMIT;
        end;
      end;
    END;

    LOCAL PROCEDURE CreateInvoice@11();
    BEGIN
      if SalesHeader."No." <> '' then
        exit;
      CreateCustomer(CustomerName);
      CreateItem;

      StoreSalesTaxSetup;

      SalesHeader.INIT;
      SalesHeader."Document Type" := SalesHeader."Document Type"::Invoice;
      SalesHeader.INSERT(true);
      SalesHeader.VALIDATE("Sell-to Customer No.",Customer."No.");
      SalesHeader.MODIFY;

      SalesLine.INIT;
      SalesLine."Document Type" := SalesHeader."Document Type";
      SalesLine."Document No." := SalesHeader."No.";
      SalesLine."Line No." := 10000;
      SalesLine.INSERT(true);
      SalesLine."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
      SalesLine.Type := SalesLine.Type::Item;
      if IsUsingVAT then begin
        SalesLine."VAT Bus. Posting Group" := VATBusinessPostingGroupCode;
        SalesLine."VAT Prod. Posting Group" := VATProductPostingGroup.Code;
      end;
      SalesLine.VALIDATE("No.",Item."No.");
      SalesLine.VALIDATE(Quantity,1);
      SalesLine.MODIFY;
    END;

    LOCAL PROCEDURE ValidateItem@3() : Boolean;
    BEGIN
      if ItemDescription = '' then
        ERROR(ItemNoDescriptionErr);

      exit(true);
    END;

    LOCAL PROCEDURE ValidateCustomer@4() : Boolean;
    BEGIN
      if CustomerName = '' then
        ERROR(CustNoNameErr);

      exit(true);
    END;

    LOCAL PROCEDURE GetUserFirstName@16();
    VAR
      User@1000 : Record User;
      TempString@1001 : Text;
    BEGIN
      if User.GET(USERSECURITYID) then begin
        TempString := User."Full Name";
        TempString := DELCHR(TempString,'<>',' ');
        TempString := CONVERTSTR(TempString,' ',',');
        UserName := SELECTSTR(1,TempString);
        if UserName <> '' then
          UserNameAvailable := true;
      end;
    END;

    LOCAL PROCEDURE Initialize@5();
    VAR
      CompanyInformation@1020000 : Record "Company Information";
    BEGIN
      LoadTopBanners;
      LoadImages;
      GetUserFirstName;
      IsUsingVAT := O365SalesInitialSetup.IsUsingVAT;

      IsCanada := CompanyInformation.IsCanada;
    END;

    LOCAL PROCEDURE ModifyCustomer@10();
    VAR
      CustContUpdate@1000 : Codeunit "CustCont-Update";
    BEGIN
      if Customer."No." <> '' then begin
        Customer.VALIDATE(Name,CustomerName);
        Customer.VALIDATE("E-Mail",CustomerEmail);
        Customer.MODIFY(true);
        CustContUpdate.OnModify(Customer);
      end;
    END;

    LOCAL PROCEDURE SetDefaultTaxAreaCodeForCA@1020004();
    VAR
      TaxArea@1020001 : Record "Tax Area";
      CompanyInformation@1020000 : Record "Company Information";
    BEGIN
      if TaxAreaCodeCA <> '' then
        exit;

      if not IsCanada then
        exit;

      TaxArea.SETRANGE("Country/Region",TaxArea."Country/Region"::CA);

      if CompanyInformation.GET and (CompanyInformation.County <> '') then begin
        TaxArea.SETRANGE(Code,CompanyInformation.County);
        if TaxArea.FINDFIRST then
          TaxAreaCodeCA := TaxArea.Code
        else begin
          TaxArea.SETRANGE(Code);
          TaxArea.SETRANGE(Description,CompanyInformation.County);
          if TaxArea.FINDFIRST then
            TaxAreaCodeCA := TaxArea.Code
        end;
      end;

      if TaxAreaCodeCA = '' then begin
        TaxArea.SETRANGE(Code);
        TaxArea.SETRANGE(Description);
        if TaxArea.FINDFIRST then
          TaxAreaCodeCA := TaxArea.Code;
      end;
    END;

    LOCAL PROCEDURE StoreSalesTaxSetup@1020013();
    BEGIN
      if not SalesTaxSetupWizard.GET then begin
        SalesTaxSetupWizard.INIT;
        SalesTaxSetupWizard.INSERT;
      end;
      if TaxSetup.GET then;
      if IsCanada then
        StoreSalesTaxSetupForCA
      else
        StoreSalesTaxSetupForUS
    END;

    LOCAL PROCEDURE StoreSalesTaxSetupForUS@1020003();
    VAR
      TaxGroup@1020001 : Record "Tax Group";
      CompanyInformation@1020005 : Record "Company Information";
      ConfigTemplateManagement@1020007 : Codeunit "Config. Template Management";
      O365TaxSettingsManagement@1020000 : Codeunit "O365 Tax Settings Management";
      TaxAreaCode@1020006 : Code[20];
      TaxJurisdictionCityCode@1020004 : Code[10];
      TaxJurisdictionStateCode@1020002 : Code[10];
    BEGIN
      TaxAreaCode := DefaultLbl;
      TaxJurisdictionCityCode := DefaultCityTxt;
      TaxJurisdictionStateCode := DefaultStateTxt;

      if CompanyInformation.GET then begin
        if CompanyInformation.City <> '' then begin
          TaxAreaCode := UPPERCASE(COPYSTR(CompanyInformation.City,1,MAXSTRLEN(TaxAreaCode) - 4));
          TaxJurisdictionCityCode := COPYSTR(TaxAreaCode,1,MAXSTRLEN(TaxJurisdictionCityCode));
        end;
        if CompanyInformation.County <> '' then begin// 2 char state
          TaxJurisdictionStateCode := COPYSTR(CompanyInformation.County,1,2);
          TaxAreaCode := COPYSTR(TaxJurisdictionCityCode + ', ' + TaxJurisdictionStateCode,1,MAXSTRLEN(TaxAreaCode));
        end;
      end;

      SalesTaxSetupWizard.SetTaxGroup(TaxGroup);
      SalesTaxSetupWizard."Tax Area Code" := TaxAreaCode;
      SalesTaxSetupWizard."Tax Account (Sales)" := TaxSetup."Tax Account (Sales)";
      SalesTaxSetupWizard."Tax Account (Purchases)" := TaxSetup."Tax Account (Purchases)";
      SalesTaxSetupWizard.City := TaxJurisdictionCityCode;
      SalesTaxSetupWizard.State := COPYSTR(TaxJurisdictionStateCode,1,2);
      SalesTaxSetupWizard."State Rate" := StateTax;
      SalesTaxSetupWizard."City Rate" := CityTax;
      SalesTaxSetupWizard.StoreSalesTaxSetup;
      SalesTaxSetupWizard.MODIFY;
      COMMIT;

      Customer.MODIFYALL("Tax Area Code",TaxAreaCode);
      COMMIT;

      ConfigTemplateManagement.ReplaceDefaultValueForAllTemplates(
        DATABASE::Item,Item.FIELDNO("Tax Group Code"),TaxGroup.Code);

      O365TaxSettingsManagement.AssignDefaultTaxArea(TaxAreaCode);
    END;

    LOCAL PROCEDURE StoreSalesTaxSetupForCA@1020010();
    VAR
      TaxGroup@1020001 : Record "Tax Group";
      TaxArea@1020003 : Record "Tax Area";
      ConfigTemplateManagement@1020002 : Codeunit "Config. Template Management";
      O365TaxSettingsManagement@1020000 : Codeunit "O365 Tax Settings Management";
      TaxAreaCode@1020006 : Code[20];
    BEGIN
      if not TaxGroup.GET(TaxableCodeTxt) then
        exit;

      if not TaxArea.GET(TaxAreaCodeCA) then
        exit;

      TaxAreaCode := TaxArea.Code;
      SalesTaxSetupWizard."Tax Area Code" := TaxAreaCode;
      SalesTaxSetupWizard."Tax Account (Sales)" := TaxSetup."Tax Account (Sales)";
      SalesTaxSetupWizard."Tax Account (Purchases)" := TaxSetup."Tax Account (Purchases)";
      SalesTaxSetupWizard.SetTaxGroup(TaxGroup);
      SalesTaxSetupWizard."Country/Region" := SalesTaxSetupWizard."Country/Region"::CA;
      SalesTaxSetupWizard.MODIFY;

      ConfigTemplateManagement.ReplaceDefaultValueForAllTemplates(
        DATABASE::Item,Item.FIELDNO("Tax Group Code"),TaxGroup.Code);

      O365TaxSettingsManagement.AssignDefaultTaxArea(TaxAreaCode);
    END;

    BEGIN
    END.
  }
}

