OBJECT Table 409 SMTP Mail Setup
{
  OBJECT-PROPERTIES
  {
    Date=20180425D;
    Time=160111.933T;
    Modified=true;
    Version List=;
  }
  PROPERTIES
  {
    Permissions=TableData "Service Password"=rimd;
    CaptionML=ENU=SMTP Mail Setup;
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key }
    { 2   ;   ;SMTP Server         ;Text250       ;CaptionML=ENU=SMTP Server }
    { 3   ;   ;Authentication      ;Option        ;OnValidate=BEGIN
                                                                if Authentication <> Authentication::Basic then begin
                                                                  "User ID" := '';
                                                                  SetPassword('');
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Authentication;
                                                   OptionCaptionML=ENU=Anonymous,NTLM,Basic;
                                                   OptionString=Anonymous,NTLM,Basic }
    { 4   ;   ;User ID             ;Text250       ;OnValidate=BEGIN
                                                                "User ID" := DELCHR("User ID",'<>',' ');
                                                                TESTFIELD(Authentication,Authentication::Basic);
                                                              END;

                                                   DataClassification=EndUserIdentifiableInformation;
                                                   CaptionML=ENU=User ID }
    { 6   ;   ;SMTP Server Port    ;Integer       ;InitValue=25;
                                                   CaptionML=ENU=SMTP Server Port }
    { 7   ;   ;Secure Connection   ;Boolean       ;InitValue=false;
                                                   CaptionML=ENU=Secure Connection }
    { 8   ;   ;Password Key        ;GUID          ;CaptionML=ENU=Password Key }
    { 9   ;   ;Send As             ;Text250       ;CaptionML=ENU=Send As }
  }
  KEYS
  {
    {    ;"Primary Key"                           ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [External]
    PROCEDURE SetPassword@1(NewPassword@1000 : Text[250]);
    VAR
      ServicePassword@1001 : Record "Service Password";
    BEGIN
      if ISNULLGUID("Password Key") or not ServicePassword.GET("Password Key") then begin
        ServicePassword.SavePassword(NewPassword);
        ServicePassword.INSERT(true);
        "Password Key" := ServicePassword.Key;
      end else begin
        ServicePassword.SavePassword(NewPassword);
        ServicePassword.MODIFY;
      end;
    END;

    [External]
    PROCEDURE GetPassword@3() : Text[250];
    VAR
      ServicePassword@1000 : Record "Service Password";
    BEGIN
      if not ISNULLGUID("Password Key") then
        if ServicePassword.GET("Password Key") then
          exit(ServicePassword.GetPassword);
      exit('');
    END;

    [External]
    PROCEDURE HasPassword@2() : Boolean;
    BEGIN
      exit(GetPassword <> '');
    END;

    PROCEDURE RemovePassword@4();
    VAR
      ServicePassword@1020 : Record "Service Password";
    BEGIN
      if not ISNULLGUID("Password Key") then begin
        if ServicePassword.GET("Password Key") then
          ServicePassword.DELETE(true);

        CLEAR("Password Key");
      end;
    END;

    PROCEDURE GetSender@5() : Text[250];
    BEGIN
      if "Send As" = '' then
        "Send As" := "User ID";

      exit("Send As");
    END;

    PROCEDURE GetConnectionString@6() : Text[250];
    BEGIN
      if GetSender = "User ID" then
        exit("User ID");

      exit(COPYSTR(STRSUBSTNO('%1\%2',"User ID","Send As"),1,MAXSTRLEN("User ID")));
    END;

    PROCEDURE SplitUserIdAndSendAs@7(ConnectionString@1001 : Text[250]);
    VAR
      MailManagement@1000 : Codeunit "Mail Management";
      AtLocation@1002 : Integer;
      SlashLocation@1003 : Integer;
    BEGIN
      if (ConnectionString = '') or MailManagement.CheckValidEmailAddress(ConnectionString) then begin
        "User ID" := ConnectionString;
        "Send As" := ConnectionString;
        exit;
      end;

      AtLocation := STRPOS(ConnectionString,'@');

      if AtLocation > 0 then begin
        SlashLocation := STRPOS(ConnectionString,'\');
        if SlashLocation > AtLocation then begin
          "User ID" := COPYSTR(ConnectionString,1,SlashLocation - 1);
          "Send As" := COPYSTR(ConnectionString,SlashLocation + 1);
          if MailManagement.CheckValidEmailAddress("User ID") and MailManagement.CheckValidEmailAddress("Send As") then
            exit;
        end;
      end;

      "User ID" := ConnectionString;
      "Send As" := ConnectionString;
    END;

    BEGIN
    END.
  }
}

