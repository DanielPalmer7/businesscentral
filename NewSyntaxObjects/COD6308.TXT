OBJECT Codeunit 6308 PBI Job Chart Calc.
{
  OBJECT-PROPERTIES
  {
    Date=20180425D;
    Time=160833.437T;
    Modified=true;
    Version List=;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Job@1012 : Record Job;
      TotalRevenueTxt@1011 : TextConst 'ENU=Total Revenue';
      TotalCostTxt@1010 : TextConst 'ENU=Total Cost';
      ProfitMarginTxt@1009 : TextConst 'ENU=Profit Margin';
      ActualTotalCostTxt@1008 : TextConst 'ENU=Actual Total Cost';
      BudgetTotalCostTxt@1007 : TextConst 'ENU=Budget Total Cost';
      CostVarianceTxt@1006 : TextConst 'ENU=Cost Variance';
      ActualTotalPriceTxt@1005 : TextConst 'ENU=Actual Total Price';
      BudgetTotalPriceTxt@1004 : TextConst 'ENU=Budget Total Price';
      PriceVarianceTxt@1003 : TextConst 'ENU=Price Variance';
      JobChartType@1013 : 'Profitability,"Actual to Budget Cost","Actual to Budget Price"';

    PROCEDURE GetValues@6(VAR TempPowerBIChartBuffer@1004 : TEMPORARY Record "Power BI Chart Buffer";pJobChartType@1006 : 'Profitability,"Actual to Budget Cost","Actual to Budget Price"');
    VAR
      MyJob@1000 : Record "My Job";
    BEGIN
      JobChartType := pJobChartType;

      with MyJob do begin
        SETRANGE("User ID",USERID);
        SETRANGE("Exclude from Business Chart",false);
        if FINDSET then
          repeat
            if Job.GET("Job No.") then
              CalculateValues(TempPowerBIChartBuffer);
          until NEXT = 0;
      end;
    END;

    LOCAL PROCEDURE CalculateValues@15(VAR TempPowerBIChartBuffer@1001 : TEMPORARY Record "Power BI Chart Buffer");
    VAR
      JobChartMgt@1000 : Codeunit "Job Chart Mgt";
      ActualCost@1005 : Decimal;
      BudgetCost@1004 : Decimal;
      CostVariance@1003 : Decimal;
      JobRevenue@1008 : Decimal;
      JobCost@1007 : Decimal;
      ProfitMargin@1006 : Decimal;
      ActualPrice@1011 : Decimal;
      BudgetPrice@1010 : Decimal;
      PriceVariance@1009 : Decimal;
    BEGIN
      case JobChartType of
        JobChartType::Profitability:
          begin
            JobChartMgt.CalculateJobRevenueAndCost(Job,JobRevenue,JobCost);
            ProfitMargin := JobRevenue - JobCost;
            InsertToBuffer(TempPowerBIChartBuffer,JobRevenue,TotalRevenueTxt);
            InsertToBuffer(TempPowerBIChartBuffer,JobCost,TotalCostTxt);
            InsertToBuffer(TempPowerBIChartBuffer,ProfitMargin,ProfitMarginTxt);
          end;
        JobChartType::"Actual to Budget Cost":
          begin
            JobChartMgt.CalculateJobCosts(Job,ActualCost,BudgetCost);
            CostVariance := BudgetCost - ActualCost;
            InsertToBuffer(TempPowerBIChartBuffer,ActualCost,ActualTotalCostTxt);
            InsertToBuffer(TempPowerBIChartBuffer,BudgetCost,BudgetTotalCostTxt);
            InsertToBuffer(TempPowerBIChartBuffer,CostVariance,CostVarianceTxt);
          end;
        JobChartType::"Actual to Budget Price":
          begin
            JobChartMgt.CalculateJobPrices(Job,ActualPrice,BudgetPrice);
            PriceVariance := BudgetPrice - ActualPrice;
            InsertToBuffer(TempPowerBIChartBuffer,ActualPrice,ActualTotalPriceTxt);
            InsertToBuffer(TempPowerBIChartBuffer,BudgetPrice,BudgetTotalPriceTxt);
            InsertToBuffer(TempPowerBIChartBuffer,PriceVariance,PriceVarianceTxt);
          end;
      end;
    END;

    LOCAL PROCEDURE InsertToBuffer@14(VAR TempPowerBIChartBuffer@1000 : TEMPORARY Record "Power BI Chart Buffer";pValue@1001 : Decimal;pMeasureName@1002 : Text[111]);
    BEGIN
      with TempPowerBIChartBuffer do begin
        if FINDLAST then
          ID += 1
        else
          ID := 1;
        Value := pValue;
        "Measure Name" := pMeasureName;
        "Measure No." := Job."No.";
        INSERT;
      end;
    END;

    BEGIN
    END.
  }
}

