OBJECT Page 475 VAT Statement Preview Line
{
  OBJECT-PROPERTIES
  {
    Date=20180425D;
    Time=161246.763T;
    Modified=true;
    Version List=;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Lines;
    LinksAllowed=false;
    SourceTable="VAT Statement Line";
    PageType=ListPart;
    OnAfterGetRecord=BEGIN
                       VATStatement.CalcLineTotal(Rec,ColumnValue,0);
                       if "Print with" = "Print with"::"Opposite Sign" then
                         ColumnValue := -ColumnValue;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Control1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Control1;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name="Row No.";
                ToolTipML=ENU=Specifies a number that identifies the line.;
                SourceExpr="Row No.";
                ImplicitType=Code10 }

    { 4   ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies a description of the VAT statement line.;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 19  ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU=Specifies what the VAT statement line will include.;
                SourceExpr=Type;
                ImplicitType=Option }

    { 14  ;2   ;Field     ;
                Name="Amount Type";
                ToolTipML=ENU=Specifies if the Tax statement line shows the Tax amounts, or the base amounts on which the Tax is calculated.;
                SourceExpr="Amount Type";
                ImplicitType=Option }

    { 6   ;2   ;Field     ;
                Name="VAT Bus. Posting Group";
                ToolTipML=ENU=Specifies the Tax specification of the involved customer or vendor to link transactions made for this record with the appropriate general ledger account according to the Tax posting setup.;
                SourceExpr="VAT Bus. Posting Group";
                ImplicitType=Code20 }

    { 8   ;2   ;Field     ;
                Name="VAT Prod. Posting Group";
                ToolTipML=ENU=Specifies the Tax specification of the involved item or resource to link transactions made for this record with the appropriate general ledger account according to the Tax posting setup.;
                SourceExpr="VAT Prod. Posting Group";
                ImplicitType=Code20 }

    { 10  ;2   ;Field     ;
                Name="Tax Jurisdiction Code";
                ToolTipML=ENU=Specifies a tax jurisdiction code for the statement.;
                ApplicationArea=#Advanced;
                SourceExpr="Tax Jurisdiction Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 12  ;2   ;Field     ;
                Name="Use Tax";
                ToolTipML=ENU=Specifies whether to use only entries from the Tax Entry table that are marked as Use Tax to be totaled on this line.;
                ApplicationArea=#Advanced;
                SourceExpr="Use Tax";
                Visible=FALSE;
                ImplicitType=Boolean }

    { 17  ;2   ;Field     ;
                Name=ColumnValue;
                DrillDown=true;
                CaptionML=ENU=Column Amount;
                ToolTipML=ENU=Specifies the type of entries that will be included in the amounts in columns.;
                BlankZero=true;
                SourceExpr=ColumnValue;
                AutoFormatType=1;
                OnDrillDown=BEGIN
                              case Type of
                                Type::"Account Totaling":
                                  begin
                                    GLEntry.SETFILTER("G/L Account No.","Account Totaling");
                                    COPYFILTER("Date Filter",GLEntry."Posting Date");
                                    PAGE.RUN(PAGE::"General Ledger Entries",GLEntry);
                                  end;
                                Type::"VAT Entry Totaling":
                                  begin
                                    VATEntry.RESET;
                                    if not
                                       VATEntry.SETCURRENTKEY(
                                         Type,Closed,"VAT Bus. Posting Group","VAT Prod. Posting Group","Posting Date")
                                    then
                                      VATEntry.SETCURRENTKEY(
                                        Type,Closed,"Tax Jurisdiction Code","Use Tax","Posting Date");
                                    VATEntry.SETRANGE(Type,"Gen. Posting Type");
                                    VATEntry.SETRANGE("VAT Bus. Posting Group","VAT Bus. Posting Group");
                                    VATEntry.SETRANGE("VAT Prod. Posting Group","VAT Prod. Posting Group");
                                    VATEntry.SETRANGE("Tax Jurisdiction Code","Tax Jurisdiction Code");
                                    VATEntry.SETRANGE("Use Tax","Use Tax");
                                    if GETFILTER("Date Filter") <> '' then
                                      if PeriodSelection = PeriodSelection::"Before and Within Period" then
                                        VATEntry.SETRANGE("Posting Date",0D,GETRANGEMAX("Date Filter"))
                                      else
                                        COPYFILTER("Date Filter",VATEntry."Posting Date");
                                    case Selection of
                                      Selection::Open:
                                        VATEntry.SETRANGE(Closed,false);
                                      Selection::Closed:
                                        VATEntry.SETRANGE(Closed,true);
                                      Selection::"Open and Closed":
                                        VATEntry.SETRANGE(Closed);
                                    end;
                                    PAGE.RUN(PAGE::"VAT Entries",VATEntry);
                                  end;
                                Type::"Row Totaling",
                                Type::Description:
                                  ERROR(Text000,FIELDCAPTION(Type),Type);
                              end;
                            END;

                ImplicitType=Decimal }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Drilldown is not possible when %1 is %2.';
      GLEntry@1001 : Record "G/L Entry";
      VATEntry@1002 : Record "VAT Entry";
      VATStatement@1004 : Report "VAT Statement";
      ColumnValue@1005 : Decimal;
      Selection@1006 : 'Open,Closed,"Open and Closed"';
      PeriodSelection@1007 : '"Before and Within Period","Within Period"';
      UseAmtsInAddCurr@1008 : Boolean;

    [External]
    PROCEDURE UpdateForm@1(VAR VATStmtName@1000 : Record "VAT Statement Name";NewSelection@1001 : 'Open,Closed,"Open and Closed"';NewPeriodSelection@1002 : '"Before and Within Period","Within Period"';NewUseAmtsInAddCurr@1003 : Boolean);
    BEGIN
      SETRANGE("Statement Template Name",VATStmtName."Statement Template Name");
      SETRANGE("Statement Name",VATStmtName.Name);
      VATStmtName.COPYFILTER("Date Filter","Date Filter");
      Selection := NewSelection;
      PeriodSelection := NewPeriodSelection;
      UseAmtsInAddCurr := NewUseAmtsInAddCurr;
      VATStatement.InitializeRequest(VATStmtName,Rec,Selection,PeriodSelection,false,UseAmtsInAddCurr);
      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

