OBJECT Page 1344 Vendor Template Card
{
  OBJECT-PROPERTIES
  {
    Date=20180425D;
    Time=161344.990T;
    Modified=true;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Vendor Template;
    SourceTable="Mini Vendor Template";
    DataCaptionExpr="Template Name";
    PageType=Card;
    SourceTableTemporary=true;
    CardPageID="Vendor Template Card";
    RefreshOnActivate=true;
    PromotedActionCategoriesML=ENU=New,Process,Reports,Master Data;
    OnOpenPage=BEGIN
                 if Vendor."No." <> '' then
                   CreateConfigTemplateFromExistingVendor(Vendor,Rec);
               END;

    OnDeleteRecord=BEGIN
                     CheckTemplateNameProvided
                   END;

    OnQueryClosePage=BEGIN
                       case CloseAction of
                         ACTION::LookupOK:
                           if Code <> '' then
                             CheckTemplateNameProvided;
                         ACTION::LookupCancel:
                           if DELETE(true) then;
                       end;
                     END;

    OnAfterGetCurrRecord=BEGIN
                           SetDimensionsEnabled;
                           SetTemplateEnabled;
                           SetNoSeries;
                         END;

    ActionList=ACTIONS
    {
      { 27      ;    ;ActionContainer;
                      Name=ActionContainer27;
                      ActionContainerType=ActionItems }
      { 30      ;1   ;ActionGroup;
                      Name="Master Data";
                      CaptionML=ENU=Master Data;
                      ActionContainerType=NewDocumentItems }
      { 31      ;2   ;Action    ;
                      Name=Default Dimensions;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Dimensions;
                      RunObject=Page "Dimensions Template List";
                      RunPageLink="Table Id"=CONST(18),
                                  "Master Record Template Code"=FIELD(Code);
                      Promoted=true;
                      Enabled=DimensionsEnabled;
                      PromotedIsBig=true;
                      Image=Dimensions;
                      PromotedCategory=Category4 }
    }
  }
  CONTROLS
  {
    { 29  ;0   ;Container ;
                Name=Control29;
                ContainerType=ContentArea }

    { 28  ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General }

    { 26  ;2   ;Field     ;
                Name="Template Name";
                ToolTipML=ENU=Specifies the name of the template.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Template Name";
                OnValidate=BEGIN
                             SetDimensionsEnabled;
                           END;

                ImplicitType=Text50 }

    { 2   ;2   ;Field     ;
                Name=TemplateEnabled;
                CaptionML=ENU=Enabled;
                ToolTipML=ENU=Specifies if the template is ready to be used;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TemplateEnabled;
                OnValidate=VAR
                             ConfigTemplateHeader@1000 : Record "Config. Template Header";
                           BEGIN
                             if ConfigTemplateHeader.GET(Code) then
                               ConfigTemplateHeader.SetTemplateEnabled(TemplateEnabled);
                           END;

                ImplicitType=Boolean }

    { 13  ;2   ;Field     ;
                Name=NoSeries;
                CaptionML=ENU=No. Series;
                ToolTipML=ENU=Specifies the code for the number series that will be used to assign numbers to vendors.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NoSeries;
                TableRelation="No. Series";
                OnValidate=VAR
                             ConfigTemplateHeader@1000 : Record "Config. Template Header";
                           BEGIN
                             if ConfigTemplateHeader.GET(Code) then
                               ConfigTemplateHeader.SetNoSeries(NoSeries);
                           END;

                ImplicitType=Code20 }

    { 25  ;1   ;Group     ;
                Name=AddressDetails;
                CaptionML=ENU=Address Details;
                GroupType=Group }

    { 24  ;2   ;Field     ;
                Name="Post Code";
                ToolTipML=ENU=Specifies the ZIP Code.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Post Code";
                Importance=Promoted;
                ImplicitType=Code20 }

    { 23  ;2   ;Field     ;
                Name=City;
                ToolTipML=ENU=Specifies the vendor's city.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=City;
                ImplicitType=Text30 }

    { 22  ;2   ;Field     ;
                Name="Country/Region Code";
                ToolTipML=ENU=Specifies the country/region of the address.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Country/Region Code";
                ImplicitType=Code10 }

    { 21  ;1   ;Group     ;
                Name=Invoicing;
                CaptionML=ENU=Invoicing;
                GroupType=Group }

    { 4   ;2   ;Field     ;
                Name="Validate EU Vat Reg. No.";
                ToolTipML=ENU=Specifies if the Tax registration number has been validated by the Tax number validation service.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Validate EU Vat Reg. No.";
                ImplicitType=Boolean }

    { 20  ;2   ;Group     ;
                Name=PostingDetails;
                CaptionML=ENU=Posting Details;
                GroupType=Group }

    { 19  ;3   ;Field     ;
                Name="Gen. Bus. Posting Group";
                ToolTipML=ENU=Specifies the vendor's trade type to link transactions made for this vendor with the appropriate general ledger account according to the general posting setup.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Gen. Bus. Posting Group";
                Importance=Promoted;
                ImplicitType=Code20 }

    { 18  ;3   ;Field     ;
                Name="VAT Bus. Posting Group";
                ToolTipML=ENU=Specifies the vendor's tax specification to link transactions made for this vendor with the appropriate general ledger account according to the tax posting setup.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Bus. Posting Group";
                ImplicitType=Code20 }

    { 17  ;3   ;Field     ;
                Name="Vendor Posting Group";
                ToolTipML=ENU=Specifies the vendor's market type to link business transactions made for the vendor with the appropriate account in the general ledger.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Posting Group";
                Importance=Promoted;
                ImplicitType=Code20 }

    { 15  ;3   ;Field     ;
                Name="Invoice Disc. Code";
                ToolTipML=ENU=Specifies the vendor's invoice discount code. When you set up a new vendor card, the number you have entered in the No. field is automatically inserted.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Invoice Disc. Code";
                Importance=Promoted;
                ImplicitType=Code20 }

    { 12  ;3   ;Field     ;
                Name="Prices Including VAT";
                ToolTipML=ENU=Specifies if the Unit Price and Line Amount fields on document lines should be shown with or without tax.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Prices Including VAT";
                ImplicitType=Boolean }

    { 1030000;3;Field     ;
                Name="Tax Liable";
                ToolTipML=ENU=Specifies if the vendor is liable for sales tax.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tax Liable";
                ImplicitType=Boolean }

    { 11  ;2   ;Group     ;
                Name=ForeignTrade;
                CaptionML=ENU=Foreign Trade;
                GroupType=Group }

    { 10  ;3   ;Field     ;
                Name="Currency Code";
                ToolTipML=ENU=Specifies a default currency code for the vendor.;
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                Importance=Promoted;
                ImplicitType=Code10 }

    { 9   ;3   ;Field     ;
                Name="Language Code";
                ToolTipML=ENU=Specifies the language on printouts for this vendor.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Language Code";
                ImplicitType=Code10 }

    { 8   ;1   ;Group     ;
                Name=Payments;
                CaptionML=ENU=Payments;
                GroupType=Group }

    { 7   ;2   ;Field     ;
                Name="Application Method";
                ToolTipML=ENU=Specifies how to apply payments to entries for this vendor.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Application Method";
                ImplicitType=Option }

    { 6   ;2   ;Field     ;
                Name="Payment Terms Code";
                ToolTipML=ENU=Specifies a code that indicates the payment terms that the vendor usually requires.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Terms Code";
                Importance=Promoted;
                ImplicitType=Code10 }

    { 5   ;2   ;Field     ;
                Name="Payment Method Code";
                ToolTipML=ENU=Specifies how the vendor requires you to submit payment, such as bank transfer or check.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Method Code";
                Importance=Promoted;
                ImplicitType=Code10 }

    { 3   ;2   ;Field     ;
                Name="Fin. Charge Terms Code";
                ToolTipML=ENU=Specifies how the vendor calculates finance charges.;
                ApplicationArea=#Advanced;
                SourceExpr="Fin. Charge Terms Code";
                Importance=Promoted;
                ImplicitType=Code10 }

    { 1   ;2   ;Field     ;
                Name="Block Payment Tolerance";
                ToolTipML=ENU=Specifies if the vendor allows payment tolerance.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Block Payment Tolerance";
                ImplicitType=Boolean }

    { 1020000;2;Field     ;
                Name="Check Date Format";
                ToolTipML=ENU=Specifies how you want the date to appear on the printed check image for this vendor.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Check Date Format";
                ImplicitType=Option }

    { 1020001;2;Field     ;
                Name="Check Date Separator";
                ToolTipML=ENU=Specifies the character that you want to separate Month, Day and Year, for the date that prints on the check image.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Check Date Separator";
                ImplicitType=Option }

  }
  CODE
  {
    VAR
      Vendor@1002 : Record Vendor;
      NoSeries@1004 : Code[20];
      DimensionsEnabled@1000 : Boolean INDATASET;
      ProvideTemplateNameErr@1001 : TextConst '@@@=%1 Template Name;ENU=You must enter a %1.';
      TemplateEnabled@1003 : Boolean;

    LOCAL PROCEDURE SetDimensionsEnabled@4();
    BEGIN
      DimensionsEnabled := "Template Name" <> '';
    END;

    LOCAL PROCEDURE SetTemplateEnabled@5();
    VAR
      ConfigTemplateHeader@1000 : Record "Config. Template Header";
    BEGIN
      TemplateEnabled := ConfigTemplateHeader.GET(Code) and ConfigTemplateHeader.Enabled;
    END;

    LOCAL PROCEDURE CheckTemplateNameProvided@2();
    BEGIN
      if "Template Name" = '' then
        ERROR(STRSUBSTNO(ProvideTemplateNameErr,FIELDCAPTION("Template Name")));
    END;

    [External]
    PROCEDURE CreateFromVend@1(FromVendor@1000 : Record Vendor);
    BEGIN
      Vendor := FromVendor;
    END;

    LOCAL PROCEDURE SetNoSeries@7();
    VAR
      ConfigTemplateHeader@1000 : Record "Config. Template Header";
    BEGIN
      NoSeries := '';
      if ConfigTemplateHeader.GET(Code) then
        NoSeries := ConfigTemplateHeader."Instance No. Series";
    END;

    BEGIN
    END.
  }
}

