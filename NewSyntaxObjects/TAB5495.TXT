OBJECT Table 5495 Sales Order Entity Buffer
{
  OBJECT-PROPERTIES
  {
    Date=20180425D;
    Time=160148.857T;
    Modified=true;
    Version List=;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               "Last Modified Date Time" := CURRENTDATETIME;
               UpdateReferencedRecordIds;
             END;

    OnModify=BEGIN
               "Last Modified Date Time" := CURRENTDATETIME;
               UpdateReferencedRecordIds;
             END;

    OnRename=BEGIN
               "Last Modified Date Time" := CURRENTDATETIME;
               UpdateReferencedRecordIds;
             END;

    CaptionML=ENU=Sales Order Entity Buffer;
  }
  FIELDS
  {
    { 2   ;   ;Sell-to Customer No.;Code20        ;TableRelation=Customer;
                                                   OnValidate=BEGIN
                                                                UpdateCustomerId;
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Sell-to Customer No.;
                                                   NotBlank=true }
    { 3   ;   ;No.                 ;Code20        ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=No. }
    { 23  ;   ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   OnValidate=BEGIN
                                                                UpdatePaymentTermsId;
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Payment Terms Code }
    { 31  ;   ;Customer Posting Group;Code20      ;TableRelation="Customer Posting Group";
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Customer Posting Group }
    { 32  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                UpdateCurrencyId;
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Currency Code }
    { 35  ;   ;Prices Including VAT;Boolean       ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Prices Including Tax }
    { 43  ;   ;Salesperson Code    ;Code20        ;TableRelation="Salesperson/Purchaser";
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Salesperson Code }
    { 56  ;   ;Recalculate Invoice Disc.;Boolean  ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Sales Line" WHERE ("Document Type"=CONST(Invoice),
                                                                                         "Document No."=FIELD("No."),
                                                                                         "Recalculate Invoice Disc."=CONST(true)));
                                                   CaptionML=ENU=Recalculate Invoice Disc.;
                                                   Editable=false }
    { 60  ;   ;Amount              ;Decimal       ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 61  ;   ;Amount Including VAT;Decimal       ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Amount Including Tax;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 79  ;   ;Sell-to Customer Name;Text50       ;TableRelation=Customer.Name;
                                                   ValidateTableRelation=false;
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Sell-to Customer Name }
    { 81  ;   ;Sell-to Address     ;Text50        ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Sell-to Address }
    { 82  ;   ;Sell-to Address 2   ;Text50        ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Sell-to Address 2 }
    { 83  ;   ;Sell-to City        ;Text30        ;TableRelation=IF ("Sell-to Country/Region Code"=CONST('')) "Post Code".City
                                                                 ELSE IF ("Sell-to Country/Region Code"=FILTER(<>'')) "Post Code".City WHERE ("Country/Region Code"=FIELD("Sell-to Country/Region Code"));
                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Sell-to City }
    { 84  ;   ;Sell-to Contact     ;Text50        ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Sell-to Contact }
    { 88  ;   ;Sell-to Post Code   ;Code20        ;TableRelation=IF ("Sell-to Country/Region Code"=CONST('')) "Post Code"
                                                                 ELSE IF ("Sell-to Country/Region Code"=FILTER(<>'')) "Post Code" WHERE ("Country/Region Code"=FIELD("Sell-to Country/Region Code"));
                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Sell-to ZIP Code }
    { 89  ;   ;Sell-to County      ;Text30        ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Sell-to State }
    { 90  ;   ;Sell-to Country/Region Code;Code10 ;TableRelation="Country/Region";
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Sell-to Country/Region Code }
    { 99  ;   ;Document Date       ;Date          ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Document Date }
    { 100 ;   ;External Document No.;Code35       ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=External Document No. }
    { 1304;   ;Cust. Ledger Entry No.;Integer     ;TableRelation="Cust. Ledger Entry"."Entry No.";
                                                   TestTableRelation=false;
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Cust. Ledger Entry No. }
    { 1305;   ;Invoice Discount Amount;Decimal    ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Invoice Discount Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 5052;   ;Sell-To Contact No. ;Code20        ;TableRelation=Contact;
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Sell-To Contact No. }
    { 5750;   ;Shipping Advice     ;Option        ;AccessByPermission=TableData "Sales Shipment Header"=R;
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Shipping Advice;
                                                   OptionCaptionML=ENU=Partial,Complete;
                                                   OptionString=Partial,Complete }
    { 5752;   ;Completely Shipped  ;Boolean       ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Completely Shipped }
    { 5790;   ;Requested Delivery Date;Date       ;AccessByPermission=TableData "Order Promising Line"=R;
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Requested Delivery Date }
    { 8000;   ;Id                  ;GUID          ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Id }
    { 9600;   ;Total Tax Amount    ;Decimal       ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Total Tax Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 9601;   ;Status              ;Option        ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Status;
                                                   OptionCaptionML=[@@@={Locked};
                                                                    ENU=Draft,In Review,Open];
                                                   OptionString=Draft,"In Review",Open }
    { 9624;   ;Discount Applied Before Tax;Boolean;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Discount Applied Before Tax }
    { 9630;   ;Last Modified Date Time;DateTime   ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Last Modified Date Time }
    { 9631;   ;Customer Id         ;GUID          ;TableRelation=Customer.Id;
                                                   OnValidate=BEGIN
                                                                UpdateCustomerNo;
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Customer Id }
    { 9633;   ;Contact Graph Id    ;Text250       ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Contact Graph Id }
    { 9634;   ;Currency Id         ;GUID          ;TableRelation=Currency.Id;
                                                   OnValidate=BEGIN
                                                                UpdateCurrencyCode;
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Currency Id }
    { 9635;   ;Payment Terms Id    ;GUID          ;TableRelation="Payment Terms".Id;
                                                   OnValidate=BEGIN
                                                                UpdatePaymentTermsCode;
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Payment Terms Id }
  }
  KEYS
  {
    {    ;"No."                                    }
    {    ;Id                                      ;Clustered=true }
    {    ;"Cust. Ledger Entry No."                 }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    LOCAL PROCEDURE UpdateCustomerId@2();
    VAR
      Customer@1000 : Record Customer;
    BEGIN
      if "Sell-to Customer No." = '' then begin
        CLEAR("Customer Id");
        exit;
      end;

      if not Customer.GET("Sell-to Customer No.") then
        exit;

      "Customer Id" := Customer.Id;
    END;

    PROCEDURE UpdateCurrencyId@9();
    VAR
      Currency@1000 : Record Currency;
    BEGIN
      if "Currency Code" = '' then begin
        CLEAR("Currency Id");
        exit;
      end;

      if not Currency.GET("Currency Code") then
        exit;

      "Currency Id" := Currency.Id;
    END;

    PROCEDURE UpdatePaymentTermsId@57();
    VAR
      PaymentTerms@1000 : Record "Payment Terms";
    BEGIN
      if "Payment Terms Code" = '' then begin
        CLEAR("Payment Terms Id");
        exit;
      end;

      if not PaymentTerms.GET("Payment Terms Code") then
        exit;

      "Payment Terms Id" := PaymentTerms.Id;
    END;

    LOCAL PROCEDURE UpdateCustomerNo@1();
    VAR
      Customer@1000 : Record Customer;
    BEGIN
      if not ISNULLGUID("Customer Id") then begin
        Customer.SETRANGE(Id,"Customer Id");
        Customer.FINDFIRST;
      end;

      VALIDATE("Sell-to Customer No.",Customer."No.");
    END;

    LOCAL PROCEDURE UpdateCurrencyCode@10();
    VAR
      Currency@1000 : Record Currency;
    BEGIN
      if not ISNULLGUID("Currency Id") then begin
        Currency.SETRANGE(Id,"Currency Id");
        Currency.FINDFIRST;
      end;

      VALIDATE("Currency Code",Currency.Code);
    END;

    LOCAL PROCEDURE UpdatePaymentTermsCode@56();
    VAR
      PaymentTerms@1001 : Record "Payment Terms";
    BEGIN
      if not ISNULLGUID("Payment Terms Id") then begin
        PaymentTerms.SETRANGE(Id,"Payment Terms Id");
        PaymentTerms.FINDFIRST;
      end;

      VALIDATE("Payment Terms Code",PaymentTerms.Code);
    END;

    PROCEDURE UpdateReferencedRecordIds@5();
    BEGIN
      UpdateCustomerId;
      UpdateCurrencyId;
      UpdatePaymentTermsId;

      UpdateGraphContactId;
    END;

    PROCEDURE UpdateGraphContactId@6();
    VAR
      Contact@1000 : Record Contact;
      GraphIntegrationRecord@1001 : Record "Graph Integration Record";
      GraphID@1002 : Text[250];
    BEGIN
      if "Sell-To Contact No." = '' then begin
        CLEAR("Contact Graph Id");
        exit;
      end;

      if not Contact.GET("Sell-To Contact No.") then
        exit;

      if not GraphIntegrationRecord.FindIDFromRecordID(Contact.RECORDID,GraphID) then
        exit;

      "Contact Graph Id" := GraphID;
    END;

    BEGIN
    END.
  }
}

