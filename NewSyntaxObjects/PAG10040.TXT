OBJECT Page 10040 Sales Tax Lines Subform
{
  OBJECT-PROPERTIES
  {
    Date=20180425D;
    Time=161716.233T;
    Modified=true;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Sales Tax Lines Subform;
    InsertAllowed=false;
    DeleteAllowed=false;
    SourceTable="Sales Tax Amount Line";
    PageType=ListPart;
    SourceTableTemporary=true;
    OnInit=BEGIN
             "Tax AmountEditable" := true;
           END;

    OnFindRecord=BEGIN
                   if FINDFIRST then
                     exit(true);
                 END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Control1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Control1;
                GroupType=Repeater }

    { 1020000;2;Field     ;
                Name="Tax Area Code";
                ToolTipML=ENU=Specifies the tax area code used on the sales or purchase lines with this Tax Group Code.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tax Area Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 4   ;2   ;Field     ;
                Name="Tax Group Code";
                ToolTipML=ENU=Specifies the tax group that is used to calculate and post sales tax.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tax Group Code";
                ImplicitType=Code20 }

    { 1020002;2;Field     ;
                Name="Tax Jurisdiction Code";
                ToolTipML=ENU=Specifies the tax jurisdiction that is used for the Tax Area Code field on the purchase or sales lines.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tax Jurisdiction Code";
                ImplicitType=Code10 }

    { 1020006;2;Field     ;
                Name="Tax Type";
                ToolTipML=ENU=Specifies the type of sales tax.;
                SourceExpr="Tax Type";
                Visible=FALSE;
                ImplicitType=Option }

    { 6   ;2   ;Field     ;
                Name="Tax %";
                ToolTipML=ENU=Specifies the tax percentage that was used on the sales tax amount lines with this combination of tax area code and tax group code.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tax %";
                ImplicitType=Decimal }

    { 10  ;2   ;Field     ;
                Name="Line Amount";
                ToolTipML=ENU=Specifies the net amount (excluding tax) for sales or purchase lines matching the combination of tax area code and tax group code.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Line Amount";
                AutoFormatType=1;
                AutoFormatExpr=CurrencyCode;
                ImplicitType=Decimal }

    { 16  ;2   ;Field     ;
                Name="Tax Base Amount";
                ToolTipML=ENU=Specifies the net amount (excluding tax) for sales or purchase lines.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tax Base Amount";
                AutoFormatType=1;
                AutoFormatExpr=CurrencyCode;
                ImplicitType=Decimal }

    { 1020008;2;Field     ;
                Name=Quantity;
                ToolTipML=ENU=Specifies the sum of quantities from sales or purchase lines matching the combination of Tax Area Code and Tax Group Code found on this line.;
                SourceExpr=Quantity;
                Visible=FALSE;
                ImplicitType=Decimal }

    { 20  ;2   ;Field     ;
                Name="Tax Amount";
                ToolTipML=ENU=Specifies the sales tax calculated for this Sales Tax Amount Line.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=2:5;
                SourceExpr="Tax Amount";
                Editable="Tax AmountEditable";
                OnValidate=BEGIN
                             if AllowVATDifference and not AllowVATDifferenceOnThisTab then
                               ERROR(Text000,FIELDCAPTION("Tax Amount"));
                             "Amount Including Tax" := "Tax Amount" + "Tax Base Amount";

                             FormCheckVATDifference;
                             Modified := true;
                             MODIFY;
                           END;

                ImplicitType=Decimal }

    { 26  ;2   ;Field     ;
                Name="Tax Difference";
                ToolTipML=ENU=Specifies the difference for the sales tax amount that is used for tax calculations.;
                DecimalPlaces=2:5;
                SourceExpr="Tax Difference";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 22  ;2   ;Field     ;
                Name="Amount Including Tax";
                ToolTipML=ENU=Specifies the sum of the Tax Base Amount field and the Tax Amount field.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Amount Including Tax";
                AutoFormatType=1;
                AutoFormatExpr=CurrencyCode;
                OnValidate=BEGIN
                             FormCheckVATDifference;
                           END;

                ImplicitType=Decimal }

    { 1020004;2;Field     ;
                Name="Expense/Capitalize";
                ToolTipML=ENU=Specifies if the Tax Amount will be debited to an Expense or Capital account, rather than to a Payable or Receivable account.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Expense/Capitalize";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Boolean }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 can only be modified on the Invoicing tab.';
      Text001@1001 : TextConst 'ENU="The total %1 for a document must not exceed %2 = %3."';
      Currency@1003 : Record Currency;
      CurrencyCode@1004 : Code[10];
      AllowVATDifference@1005 : Boolean;
      AllowVATDifferenceOnThisTab@1006 : Boolean;
      PricesIncludingVAT@1007 : Boolean;
      AllowInvDisc@1008 : Boolean;
      VATBaseDiscPct@1009 : Decimal;
      "Tax AmountEditable"@19052394 : Boolean INDATASET;

    [External]
    PROCEDURE SetTempTaxAmountLine@1(VAR NewSalesTaxLine@1000 : TEMPORARY Record "Sales Tax Amount Line");
    BEGIN
      DELETEALL;
      if NewSalesTaxLine.FINDFIRST then
        repeat
          COPY(NewSalesTaxLine);
          INSERT;
        until NewSalesTaxLine.NEXT = 0;
      CurrPage.UPDATE;
    END;

    [External]
    PROCEDURE GetTempTaxAmountLine@5(VAR NewSalesTaxLine@1000 : TEMPORARY Record "Sales Tax Amount Line");
    BEGIN
      NewSalesTaxLine.DELETEALL;
      if FINDFIRST then
        repeat
          NewSalesTaxLine.COPY(Rec);
          NewSalesTaxLine.INSERT;
        until NEXT = 0;
    END;

    [External]
    PROCEDURE InitGlobals@2(NewCurrencyCode@1000 : Code[10];NewAllowVATDifference@1001 : Boolean;NewAllowVATDifferenceOnThisTab@1002 : Boolean;NewPricesIncludingVAT@1003 : Boolean;NewAllowInvDisc@1004 : Boolean;NewVATBaseDiscPct@1005 : Decimal);
    BEGIN
      CurrencyCode := NewCurrencyCode;
      AllowVATDifference := NewAllowVATDifference;
      AllowVATDifferenceOnThisTab := NewAllowVATDifferenceOnThisTab;
      PricesIncludingVAT := NewPricesIncludingVAT;
      AllowInvDisc := NewAllowInvDisc;
      VATBaseDiscPct := NewVATBaseDiscPct;
      "Tax AmountEditable" := AllowVATDifference;
      if CurrencyCode = '' then
        Currency.InitRoundingPrecision
      else
        Currency.GET(CurrencyCode);
      CurrPage.UPDATE;
    END;

    [External]
    PROCEDURE FormCheckVATDifference@4();
    VAR
      TaxAmountLine2@1000 : Record "Sales Tax Amount Line";
      TotalVATDifference@1001 : Decimal;
    BEGIN
      CheckTaxDifference(CurrencyCode,AllowVATDifference,PricesIncludingVAT);
      TaxAmountLine2 := Rec;
      TotalVATDifference := ABS("Tax Difference") - ABS(xRec."Tax Difference");
      if FIND('-') then
        repeat
          TotalVATDifference := TotalVATDifference + ABS("Tax Difference");
        until NEXT = 0;
      Rec := TaxAmountLine2;
      if TotalVATDifference > Currency."Max. VAT Difference Allowed" then
        ERROR(
          Text001,FIELDCAPTION("Tax Difference"),
          Currency.FIELDCAPTION("Max. VAT Difference Allowed"),Currency."Max. VAT Difference Allowed");
    END;

    BEGIN
    END.
  }
}

