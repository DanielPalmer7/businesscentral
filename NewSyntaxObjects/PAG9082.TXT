OBJECT Page 9082 Customer Statistics FactBox
{
  OBJECT-PROPERTIES
  {
    Date=20180425D;
    Time=161636.880T;
    Modified=true;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Customer Statistics;
    SourceTable=Customer;
    PageType=CardPart;
    OnInit=BEGIN
             ShowCustomerNo := true;
           END;

    OnAfterGetRecord=BEGIN
                       FILTERGROUP(4);
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Control1900000001;
                ContainerType=ContentArea }

    { 19  ;1   ;Field     ;
                Name="No.";
                CaptionML=ENU=Customer No.;
                ToolTipML=ENU=Specifies the number of the customer. The field is either filled automatically from a defined number series, or you enter the number manually because you have enabled manual number entry in the number-series setup.;
                ApplicationArea=#All;
                SourceExpr="No.";
                Visible=ShowCustomerNo;
                OnDrillDown=BEGIN
                              ShowDetails;
                            END;

                ImplicitType=Code20 }

    { 13  ;1   ;Field     ;
                Name="Balance (LCY)";
                ToolTipML=ENU=Specifies the payment amount that the customer owes for completed sales. This value is also known as the customer's balance.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Balance (LCY)";
                OnDrillDown=VAR
                              DtldCustLedgEntry@1000 : Record "Detailed Cust. Ledg. Entry";
                              CustLedgEntry@1001 : Record "Cust. Ledger Entry";
                            BEGIN
                              DtldCustLedgEntry.SETRANGE("Customer No.","No.");
                              COPYFILTER("Global Dimension 1 Filter",DtldCustLedgEntry."Initial Entry Global Dim. 1");
                              COPYFILTER("Global Dimension 2 Filter",DtldCustLedgEntry."Initial Entry Global Dim. 2");
                              COPYFILTER("Currency Filter",DtldCustLedgEntry."Currency Code");
                              CustLedgEntry.DrillDownOnEntries(DtldCustLedgEntry);
                            END;

                ImplicitType=Decimal }

    { 5   ;1   ;Group     ;
                Name=Sales;
                CaptionML=ENU=Sales;
                GroupType=Group }

    { 14  ;2   ;Field     ;
                Name="Outstanding Orders (LCY)";
                ToolTipML=ENU=Specifies your expected sales income from the customer in $ based on ongoing sales orders.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Outstanding Orders (LCY)";
                ImplicitType=Decimal }

    { 15  ;2   ;Field     ;
                Name="Shipped Not Invoiced (LCY)";
                CaptionML=ENU=Shipped Not Invd. ($);
                ToolTipML=ENU=Specifies your expected sales income from the customer in $ based on ongoing sales orders where items have been shipped.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Shipped Not Invoiced (LCY)";
                ImplicitType=Decimal }

    { 2   ;2   ;Field     ;
                Name="Outstanding Invoices (LCY)";
                ToolTipML=ENU=Specifies your expected sales income from the customer in $ based on unpaid sales invoices.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Outstanding Invoices (LCY)";
                ImplicitType=Decimal }

    { 1   ;1   ;Group     ;
                Name=Service;
                CaptionML=ENU=Service;
                GroupType=Group }

    { 7   ;2   ;Field     ;
                Name="Outstanding Serv. Orders (LCY)";
                ToolTipML=ENU=Specifies your expected service income from the customer in $ based on ongoing service orders.;
                ApplicationArea=#Service;
                SourceExpr="Outstanding Serv. Orders (LCY)";
                ImplicitType=Decimal }

    { 6   ;2   ;Field     ;
                Name="Serv Shipped Not Invoiced(LCY)";
                ToolTipML=ENU=Specifies your expected service income from the customer in $ based on service orders that are shipped but not invoiced.;
                ApplicationArea=#Service;
                SourceExpr="Serv Shipped Not Invoiced(LCY)";
                ImplicitType=Decimal }

    { 3   ;2   ;Field     ;
                Name="Outstanding Serv.Invoices(LCY)";
                ToolTipML=ENU=Specifies your expected service income from the customer in $ based on unpaid service invoices.;
                ApplicationArea=#Service;
                SourceExpr="Outstanding Serv.Invoices(LCY)";
                ImplicitType=Decimal }

    { 10  ;1   ;Field     ;
                Name=Total (LCY);
                AccessByPermission=TableData "Sales Line"=R;
                CaptionML=ENU=Total ($);
                ToolTipML=ENU=Specifies the payment amount that the customer owes for completed sales plus sales that are still ongoing.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GetTotalAmountLCY;
                AutoFormatType=1;
                Importance=Promoted;
                Style=Strong;
                StyleExpr=TRUE;
                ImplicitType=Decimal }

    { 11  ;1   ;Field     ;
                Name="Credit Limit (LCY)";
                ToolTipML=ENU=Specifies the maximum amount you allow the customer to exceed the payment balance before warnings are issued.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Credit Limit (LCY)";
                ImplicitType=Decimal }

    { 12  ;1   ;Field     ;
                Name=Balance Due (LCY);
                CaptionML=[ENU="";
                           ENG=Balance Due (LCY)];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CalcOverdueBalance;
                CaptionClass=FORMAT(STRSUBSTNO(Text000,FORMAT(WORKDATE)));
                OnDrillDown=VAR
                              DtldCustLedgEntry@1000 : Record "Detailed Cust. Ledg. Entry";
                              CustLedgEntry@1001 : Record "Cust. Ledger Entry";
                            BEGIN
                              DtldCustLedgEntry.SETFILTER("Customer No.","No.");
                              COPYFILTER("Global Dimension 1 Filter",DtldCustLedgEntry."Initial Entry Global Dim. 1");
                              COPYFILTER("Global Dimension 2 Filter",DtldCustLedgEntry."Initial Entry Global Dim. 2");
                              COPYFILTER("Currency Filter",DtldCustLedgEntry."Currency Code");
                              CustLedgEntry.DrillDownOnOverdueEntries(DtldCustLedgEntry);
                            END;

                ImplicitType=Decimal }

    { 4   ;1   ;Field     ;
                Name=Sales (LCY);
                CaptionML=ENU=Total Sales ($);
                ToolTipML=ENU=Specifies your total sales turnover with the customer in the current fiscal year. It is calculated from amounts excluding tax on all completed and open sales invoices and credit memos.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GetSalesLCY;
                OnDrillDown=VAR
                              CustLedgEntry@1000 : Record "Cust. Ledger Entry";
                              AccountingPeriod@1001 : Record "Accounting Period";
                            BEGIN
                              CustLedgEntry.RESET;
                              CustLedgEntry.SETRANGE("Customer No.","No.");
                              CustLedgEntry.SETRANGE(
                                "Posting Date",AccountingPeriod.GetFiscalYearStartDate(WORKDATE),AccountingPeriod.GetFiscalYearEndDate(WORKDATE));
                              PAGE.RUNMODAL(PAGE::"Customer Ledger Entries",CustLedgEntry);
                            END;

                ImplicitType=Decimal }

    { 8   ;1   ;Field     ;
                Name=GetInvoicedPrepmtAmountLCY;
                AccessByPermission=TableData "Sales Line"=R;
                CaptionML=ENU=Invoiced Prepayment Amount ($);
                ToolTipML=ENU=Specifies your sales income from the customer, based on invoiced prepayments.;
                ApplicationArea=#Prepayments;
                SourceExpr=GetInvoicedPrepmtAmountLCY;
                ImplicitType=Decimal }

  }
  CODE
  {
    VAR
      Text000@1024 : TextConst 'ENU=Overdue Amounts ($) as of %1';
      ShowCustomerNo@1000 : Boolean;

    LOCAL PROCEDURE ShowDetails@1102601000();
    BEGIN
      PAGE.RUN(PAGE::"Customer Card",Rec);
    END;

    [External]
    PROCEDURE SetCustomerNoVisibility@1(Visible@1000 : Boolean);
    BEGIN
      ShowCustomerNo := Visible;
    END;

    BEGIN
    END.
  }
}

