OBJECT Codeunit 704 MemoryStream Wrapper
{
  OBJECT-PROPERTIES
  {
    Date=0D;
    Time=0T;
    Version List=;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      MemoryStream@1000 : DotNet "'mscorlib'.System.IO.MemoryStream";
      StreamWriter@1001 : DotNet "'mscorlib'.System.IO.StreamWriter";
      StreamReader@1002 : DotNet "'mscorlib'.System.IO.StreamReader";

    [External]
    PROCEDURE Create@1(Capacity@1000 : Integer);
    BEGIN
      MemoryStream := MemoryStream.MemoryStream(Capacity);
    END;

    [External]
    PROCEDURE SetPosition@2(Position@1000 : Integer);
    BEGIN
      MemoryStream.Position := Position;
    END;

    [External]
    PROCEDURE GetPosition@3() : Integer;
    BEGIN
      exit(MemoryStream.Position);
    END;

    [External]
    PROCEDURE CopyTo@4(OutStream@1000 : OutStream);
    BEGIN
      MemoryStream.CopyTo(OutStream);
    END;

    [External]
    PROCEDURE GetInStream@5(VAR InStream@1000 : InStream);
    BEGIN
      InStream := MemoryStream;
    END;

    [External]
    PROCEDURE ReadFrom@6(VAR InStream@1000 : InStream);
    BEGIN
      COPYSTREAM(MemoryStream,InStream);
    END;

    [External]
    PROCEDURE ToText@7() : Text;
    BEGIN
      MemoryStream.Position := 0;
      if ISNULL(StreamReader) then
        StreamReader := StreamReader.StreamReader(MemoryStream);
      exit(StreamReader.ReadToEnd());
    END;

    [External]
    PROCEDURE AddText@8(Txt@1000 : Text);
    BEGIN
      if ISNULL(StreamWriter) then
        StreamWriter := StreamWriter.StreamWriter(MemoryStream);
      StreamWriter.Write(Txt);
      StreamWriter.Flush();
    END;

    [External]
    PROCEDURE Length@9() : Integer;
    BEGIN
      exit(MemoryStream.Length);
    END;

    BEGIN
    END.
  }
}

