OBJECT Codeunit 99000768 Production BOM-Copy
{
  OBJECT-PROPERTIES
  {
    Date=20180425D;
    Time=161110.353T;
    Modified=true;
    Version List=;
  }
  PROPERTIES
  {
    TableNo="Production BOM Header";
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The %1 cannot be copied to itself.';
      Text001@1001 : TextConst 'ENU=%1 on %2 %3 must not be %4';
      Text002@1002 : TextConst 'ENU=%1 on %2 %3 %4 must not be %5';

    [External]
    PROCEDURE CopyBOM@1(BOMHeaderNo@1000 : Code[20];FromVersionCode@1001 : Code[20];CurrentBOMHeader@1002 : Record "Production BOM Header";ToVersionCode@1003 : Code[20]);
    VAR
      FromProdBOMLine@1004 : Record "Production BOM Line";
      ToProdBOMLine@1005 : Record "Production BOM Line";
      FromProdBOMCompComment@1006 : Record "Production BOM Comment Line";
      ToProdBOMCompComment@1007 : Record "Production BOM Comment Line";
      ProdBOMVersion@1008 : Record "Production BOM Version";
    BEGIN
      if (CurrentBOMHeader."No." = BOMHeaderNo) and
         (FromVersionCode = ToVersionCode)
      then
        ERROR(Text000,CurrentBOMHeader.TABLECAPTION);

      if ToVersionCode = '' then begin
        if CurrentBOMHeader.Status = CurrentBOMHeader.Status::Certified then
          ERROR(
            Text001,
            CurrentBOMHeader.FIELDCAPTION(Status),
            CurrentBOMHeader.TABLECAPTION,
            CurrentBOMHeader."No.",
            CurrentBOMHeader.Status);
      end else begin
        ProdBOMVersion.GET(
          CurrentBOMHeader."No.",ToVersionCode);
        if ProdBOMVersion.Status = ProdBOMVersion.Status::Certified then
          ERROR(
            Text002,
            ProdBOMVersion.FIELDCAPTION(Status),
            ProdBOMVersion.TABLECAPTION,
            ProdBOMVersion."Production BOM No.",
            ProdBOMVersion."Version Code",
            ProdBOMVersion.Status);
      end;

      ToProdBOMLine.SETRANGE("Production BOM No.",CurrentBOMHeader."No.");
      ToProdBOMLine.SETRANGE("Version Code",ToVersionCode);
      ToProdBOMLine.DELETEALL;

      ToProdBOMCompComment.SETRANGE("Production BOM No.",CurrentBOMHeader."No.");
      ToProdBOMCompComment.SETRANGE("Version Code",ToVersionCode);
      ToProdBOMCompComment.DELETEALL;

      FromProdBOMLine.SETRANGE("Production BOM No.",BOMHeaderNo);
      FromProdBOMLine.SETRANGE("Version Code",FromVersionCode);
      if FromProdBOMLine.FIND('-') then
        repeat
          ToProdBOMLine := FromProdBOMLine;
          ToProdBOMLine."Production BOM No." := CurrentBOMHeader."No.";
          ToProdBOMLine."Version Code" := ToVersionCode;
          OnBeforeInsertProdBOMComponent(ToProdBOMLine,FromProdBOMLine);
          ToProdBOMLine.INSERT;
        until FromProdBOMLine.NEXT = 0;

      FromProdBOMCompComment.SETRANGE("Production BOM No.",BOMHeaderNo);
      FromProdBOMCompComment.SETRANGE("Version Code",FromVersionCode);
      if FromProdBOMCompComment.FIND('-') then
        repeat
          ToProdBOMCompComment := FromProdBOMCompComment;
          ToProdBOMCompComment."Production BOM No." := CurrentBOMHeader."No.";
          ToProdBOMCompComment."Version Code" := ToVersionCode;
          ToProdBOMCompComment.INSERT;
        until FromProdBOMCompComment.NEXT = 0;
    END;

    [External]
    PROCEDURE CopyFromVersion@2(VAR ProdBOMVersionList2@1000 : Record "Production BOM Version");
    VAR
      ProdBOMHeader@1001 : Record "Production BOM Header";
      OldProdBOMVersionList@1002 : Record "Production BOM Version";
    BEGIN
      OldProdBOMVersionList := ProdBOMVersionList2;

      ProdBOMHeader.INIT;
      ProdBOMHeader."No." := ProdBOMVersionList2."Production BOM No.";
      if PAGE.RUNMODAL(0,ProdBOMVersionList2) = ACTION::LookupOK then begin
        if OldProdBOMVersionList.Status = OldProdBOMVersionList.Status::Certified then
          ERROR(
            Text002,
            OldProdBOMVersionList.FIELDCAPTION(Status),
            OldProdBOMVersionList.TABLECAPTION,
            OldProdBOMVersionList."Production BOM No.",
            OldProdBOMVersionList."Version Code",
            OldProdBOMVersionList.Status);
        CopyBOM(ProdBOMHeader."No.",ProdBOMVersionList2."Version Code",ProdBOMHeader,OldProdBOMVersionList."Version Code");
      end;

      ProdBOMVersionList2 := OldProdBOMVersionList;
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeInsertProdBOMComponent@3(VAR ToProductionBOMLine@1000 : Record "Production BOM Line";FromProductionBOMLine@1001 : Record "Production BOM Line");
    BEGIN
    END;

    BEGIN
    END.
  }
}

