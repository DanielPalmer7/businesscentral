OBJECT Table 5509 Attachment Entity Buffer
{
  OBJECT-PROPERTIES
  {
    Date=20180425D;
    Time=160149.247T;
    Modified=true;
    Version List=;
  }
  PROPERTIES
  {
    OnRename=BEGIN
               if xRec.Id <> Id then
                 ERROR(CannotChangeIDErr);
             END;

    CaptionML=ENU=Attachment Entity Buffer;
  }
  FIELDS
  {
    { 3   ;   ;Created Date-Time   ;DateTime      ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Created Date-Time }
    { 5   ;   ;File Name           ;Text250       ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=File Name }
    { 6   ;   ;Type                ;Option        ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=" ,Image,PDF,Word,Excel,PowerPoint,Email,XML,Other";
                                                   OptionString=" ",Image,PDF,Word,Excel,PowerPoint,Email,XML,Other }
    { 8   ;   ;Content             ;BLOB          ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Content;
                                                   SubType=Bitmap }
    { 8000;   ;Id                  ;GUID          ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Id }
    { 8001;   ;Document Id         ;GUID          ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Document Id }
    { 8002;   ;Byte Size           ;Integer       ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Byte Size }
  }
  KEYS
  {
    {    ;Id                                      ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CannotChangeIDErr@1000 : TextConst '@@@={Locked};ENU=The id cannot be changed.';

    PROCEDURE SetBinaryContent@17(BinaryContent@1002 : Text);
    VAR
      OutStream@1001 : OutStream;
    BEGIN
      Content.CREATEOUTSTREAM(OutStream);
      OutStream.WRITE(BinaryContent,STRLEN(BinaryContent));
    END;

    PROCEDURE SetTextContent@1(TextContent@1002 : Text);
    VAR
      OutStream@1001 : OutStream;
    BEGIN
      Content.CREATEOUTSTREAM(OutStream,GetContentTextEncoding);
      OutStream.WRITE(TextContent,STRLEN(TextContent));
    END;

    PROCEDURE SetTextContentToBLOB@2(VAR TempBlob@1000 : TEMPORARY Record TempBlob;TextContent@1002 : Text);
    VAR
      OutStream@1001 : OutStream;
    BEGIN
      TempBlob.Blob.CREATEOUTSTREAM(OutStream,GetContentTextEncoding);
      OutStream.WRITE(TextContent,STRLEN(TextContent));
    END;

    LOCAL PROCEDURE GetContentTextEncoding@4() : TextEncoding;
    BEGIN
      exit(TEXTENCODING::UTF8);
    END;

    BEGIN
    END.
  }
}

