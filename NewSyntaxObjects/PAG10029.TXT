OBJECT Page 10029 Sales Order Invoice Subform
{
  OBJECT-PROPERTIES
  {
    Date=20180425D;
    Time=161714.737T;
    Modified=true;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    MultipleNewLines=true;
    InsertAllowed=false;
    DeleteAllowed=false;
    SourceTable="Sales Line";
    DelayedInsert=true;
    SourceTableView=WHERE("Document Type"=FILTER(Order),
                          "Qty. Shipped Not Invoiced"=FILTER(<>0));
    PageType=ListPart;
    AutoSplitKey=true;
    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                     END;

    OnNewRecord=BEGIN
                  Type := xRec.Type;
                  CLEAR(ShortcutDimCode);
                END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 1906587504;1 ;ActionGroup;
                      Name="F&unctions";
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 1903866504;2 ;ActionGroup;
                      Name="Drop Shipment";
                      CaptionML=ENU=Drop Shipment;
                      Image=Delivery }
      { 1901312904;3 ;Action    ;
                      Name="Purchase &Order";
                      CaptionML=ENU=Purchase &Order;
                      ToolTipML=ENU=Purchase goods or services from a vendor.;
                      Image=Document;
                      OnAction=BEGIN
                                 OpenPurchOrderForm;
                               END;
                                }
      { 1907213204;2 ;ActionGroup;
                      Name="Special Order";
                      CaptionML=ENU=Special Order;
                      Image=SpecialOrder }
      { 1902819104;3 ;Action    ;
                      Name=Action1902819104;
                      CaptionML=ENU=Purchase &Order;
                      ToolTipML=ENU=Purchase goods or services from a vendor.;
                      Image=Document;
                      OnAction=BEGIN
                                 OpenPurchOrderForm;
                               END;
                                }
      { 1907935204;1 ;ActionGroup;
                      Name="&Line";
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 1902085804;2 ;Action    ;
                      Name=Dimensions;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1907184504;2 ;Action    ;
                      Name="Item Charge &Assignment";
                      Ellipsis=true;
                      CaptionML=ENU=Item Charge &Assignment;
                      ToolTipML=ENU=Assign additional direct costs, for example for freight, to the item on the line.;
                      OnAction=BEGIN
                                 ItemChargeAssgnt;
                               END;
                                }
      { 1905987604;2 ;Action    ;
                      Name="Item &Tracking Lines";
                      CaptionML=ENU=Item &Tracking Lines;
                      ToolTipML=ENU=View or edit serial numbers and lot numbers that are assigned to the item on the document or journal line.;
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 OpenItemTrackingLines;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Control1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Control1;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU="Specifies the type of the record on the document line. ";
                SourceExpr=Type;
                Editable=FALSE;
                ImplicitType=Option }

    { 4   ;2   ;Field     ;
                Name="No.";
                ToolTipML=ENU=Specifies the number of the record.;
                SourceExpr="No.";
                Editable=FALSE;
                OnValidate=BEGIN
                             ShowShortcutDimCode(ShortcutDimCode);
                             NoOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 68  ;2   ;Field     ;
                Name="Cross-Reference No.";
                ToolTipML=ENU=Specifies the cross-reference number of the item specified on the line.;
                SourceExpr="Cross-Reference No.";
                Visible=FALSE;
                Editable=FALSE;
                OnLookup=BEGIN
                           // Item Cross Ref - start
                           if Type = Type::Item then begin
                             SalesHeader.GET("Document Type","Document No.");
                             ItemCrossReference.RESET;
                             ItemCrossReference.SETCURRENTKEY("Cross-Reference Type","Cross-Reference Type No.");
                             ItemCrossReference.SETRANGE("Cross-Reference Type",ItemCrossReference."Cross-Reference Type"::Customer);
                             ItemCrossReference.SETRANGE("Cross-Reference Type No.",SalesHeader."Sell-to Customer No.");
                             if PAGE.RUNMODAL(PAGE::"Cross Reference List",ItemCrossReference) = ACTION::LookupOK then begin
                               VALIDATE("Cross-Reference No.",ItemCrossReference."Cross-Reference No.");
                               InsertExtendedText(false);
                             end;
                           end;
                           // Item Cross Ref - end
                         END;

                ImplicitType=Code20 }

    { 30  ;2   ;Field     ;
                Name="Variant Code";
                ToolTipML=ENU=Specifies the variant number of the items sold.;
                SourceExpr="Variant Code";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Code10 }

    { 104 ;2   ;Field     ;
                Name="Substitution Available";
                ToolTipML=ENU=Specifies that a substitute is available for the item on the sales line.;
                SourceExpr="Substitution Available";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Boolean }

    { 74  ;2   ;Field     ;
                Name="Purchasing Code";
                ToolTipML=ENU=Specifies the purchasing code for the item.;
                SourceExpr="Purchasing Code";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Code10 }

    { 70  ;2   ;Field     ;
                Name=Nonstock;
                ToolTipML=ENU=Specifies that the item on the sales line is a nonstock item (an item not normally kept in inventory).;
                SourceExpr=Nonstock;
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Boolean }

    { 6   ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies a description of the invoice line.;
                SourceExpr=Description;
                Editable=FALSE;
                ImplicitType=Text50 }

    { 26  ;2   ;Field     ;
                Name="Drop Shipment";
                ToolTipML=ENU=Specifies whether to ship the items on the line directly to your customer.;
                SourceExpr="Drop Shipment";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Boolean }

    { 106 ;2   ;Field     ;
                Name="Special Order";
                ToolTipML=ENU=Specifies that the item on the sales line is a special-order item.;
                SourceExpr="Special Order";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Boolean }

    { 1020000;2;Field     ;
                Name="Package Tracking No.";
                ToolTipML=ENU=Specifies the shipping agent's package number.;
                SourceExpr="Package Tracking No.";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Text30 }

    { 8   ;2   ;Field     ;
                Name=Quantity;
                ToolTipML=ENU=Specifies the quantity of items on document line.;
                BlankZero=true;
                SourceExpr=Quantity;
                Editable=FALSE;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;

                ImplicitType=Decimal }

    { 44  ;2   ;Field     ;
                Name="Unit of Measure Code";
                ToolTipML=ENU="Specifies the item's unit of measure. ";
                SourceExpr="Unit of Measure Code";
                Editable=FALSE;
                OnValidate=BEGIN
                             UnitofMeasureCodeOnAfterValida;
                           END;

                ImplicitType=Code10 }

    { 10  ;2   ;Field     ;
                Name="Unit of Measure";
                ToolTipML=ENU="Specifies the item's unit of measure. ";
                SourceExpr="Unit of Measure";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Text10 }

    { 12  ;2   ;Field     ;
                Name="Unit Price";
                ToolTipML=ENU="Specifies the price for one unit of the item. ";
                BlankZero=true;
                SourceExpr="Unit Price";
                ImplicitType=Decimal }

    { 112 ;2   ;Field     ;
                Name="Tax Liable";
                ToolTipML=ENU=Specifies that the customer is liable for sales tax.;
                SourceExpr="Tax Liable";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Boolean }

    { 1480000;2;Field     ;
                Name="Tax Area Code";
                ToolTipML=ENU=Specifies the tax area that is used to calculate and post sales tax.;
                SourceExpr="Tax Area Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 1010;2   ;Field     ;
                Name="Tax Group Code";
                ToolTipML=ENU=Specifies the tax group that is used to calculate and post sales tax.;
                SourceExpr="Tax Group Code";
                ImplicitType=Code20 }

    { 76  ;2   ;Field     ;
                Name="Line Amount";
                ToolTipML=ENU=Specifies the amount of the sales line, calculated as the quantity times the unit price minus any percentage value in the Line Discount % field. If the Prices Including tax check box on the customer card is selected, the amount includes tax.;
                BlankZero=true;
                SourceExpr="Line Amount";
                ImplicitType=Decimal }

    { 114 ;2   ;Field     ;
                Name="Amount Including VAT";
                ToolTipML=ENU=Specifies the sum of the amounts in the Amount Including Tax fields on the associated sales lines.;
                SourceExpr="Amount Including VAT";
                ImplicitType=Decimal }

    { 16  ;2   ;Field     ;
                Name="Line Discount %";
                ToolTipML=ENU=Specifies the discount percentage that is granted to the amount on the line.;
                BlankZero=true;
                SourceExpr="Line Discount %";
                ImplicitType=Decimal }

    { 52  ;2   ;Field     ;
                Name="Line Discount Amount";
                ToolTipML=ENU=Specifies the amount of the discount that will be given on the invoice line.;
                SourceExpr="Line Discount Amount";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 54  ;2   ;Field     ;
                Name="Allow Invoice Disc.";
                ToolTipML=ENU=Specifies if  the invoice line can be included in a possible invoice discount calculation. The value is copied from the Allow Invoice Disc. field on the sales line.;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE;
                ImplicitType=Boolean }

    { 90  ;2   ;Field     ;
                Name="Inv. Discount Amount";
                ToolTipML=ENU=Specifies the invoice discount amount that is calculated on the line if you click Actions, point to Functions, and then click Calculate Invoice Discount.;
                SourceExpr="Inv. Discount Amount";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 20  ;2   ;Field     ;
                Name="Quantity Shipped";
                ToolTipML=ENU=Specifies how many of the units in the Quantity field have been posted as shipped.;
                BlankZero=true;
                SourceExpr="Quantity Shipped";
                Editable=FALSE;
                ImplicitType=Decimal }

    { 22  ;2   ;Field     ;
                Name="Qty. to Invoice";
                ToolTipML=ENU="Specifies how many of the units in the Quantity field to post as invoiced. ";
                BlankZero=true;
                SourceExpr="Qty. to Invoice";
                ImplicitType=Decimal }

    { 24  ;2   ;Field     ;
                Name="Quantity Invoiced";
                ToolTipML=ENU=Specifies how many of the units in the Quantity field have been posted as invoiced.;
                BlankZero=true;
                SourceExpr="Quantity Invoiced";
                ImplicitType=Decimal }

    { 46  ;2   ;Field     ;
                Name="Allow Item Charge Assignment";
                ToolTipML=ENU=Specifies that you can assign item charges to this line.;
                SourceExpr="Allow Item Charge Assignment";
                Visible=FALSE;
                ImplicitType=Boolean }

    { 5800;2   ;Field     ;
                Name="Qty. to Assign";
                ToolTipML=ENU=Specifies how many of the units in the Quantity field to assign.;
                BlankZero=true;
                SourceExpr="Qty. to Assign";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              UpdateForm(false);
                            END;

                ImplicitType=Decimal }

    { 102 ;2   ;Field     ;
                Name="Qty. Assigned";
                ToolTipML=ENU=Specifies how many of the units in the Quantity field have been assigned.;
                BlankZero=true;
                SourceExpr="Qty. Assigned";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              CurrPage.UPDATE(false);
                            END;

                ImplicitType=Decimal }

    { 100 ;2   ;Field     ;
                Name="Shipment Date";
                ToolTipML=ENU=Specifies the date that the items on the line are in inventory and available to be picked. The shipment date is the date you expect to ship the items on the line.;
                SourceExpr="Shipment Date";
                Editable=FALSE;
                ImplicitType=Date }

    { 14  ;2   ;Field     ;
                Name="FA Posting Date";
                ToolTipML=ENU=Specifies the posting date for the fixed asset.;
                SourceExpr="FA Posting Date";
                Visible=FALSE;
                ImplicitType=Date }

    { 32  ;2   ;Field     ;
                Name="Shortcut Dimension 1 Code";
                ToolTipML=ENU=Specifies the dimension value code that the sales line is associated with.;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 34  ;2   ;Field     ;
                Name="Shortcut Dimension 2 Code";
                ToolTipML=ENU=Specifies the dimension value code that the sales line is associated with.;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 300 ;2   ;Field     ;
                Name="ShortcutDimCode[3]";
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(3),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 302 ;2   ;Field     ;
                Name="ShortcutDimCode[4]";
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(4),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 304 ;2   ;Field     ;
                Name="ShortcutDimCode[5]";
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(5),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 306 ;2   ;Field     ;
                Name="ShortcutDimCode[6]";
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(6),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 308 ;2   ;Field     ;
                Name="ShortcutDimCode[7]";
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(7),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 310 ;2   ;Field     ;
                Name="ShortcutDimCode[8]";
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(8),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

  }
  CODE
  {
    VAR
      SalesHeader@1000 : Record "Sales Header";
      ItemCrossReference@1001 : Record "Item Cross Reference";
      TransferExtendedText@1002 : Codeunit "Transfer Extended Text";
      ShortcutDimCode@1003 : ARRAY [8] OF Code[20];

    [External]
    PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Disc. (Yes/No)",Rec);
    END;

    [External]
    PROCEDURE CalcInvDisc@6();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Calc. Discount",Rec);
    END;

    [External]
    PROCEDURE ExplodeBOM@3();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Explode BOM",Rec);
    END;

    [External]
    PROCEDURE OpenPurchOrderForm@4();
    VAR
      PurchHeader@1000 : Record "Purchase Header";
      PurchOrder@1001 : Page "Purchase Order";
    BEGIN
      PurchHeader.SETRANGE("No.","Purchase Order No.");
      PurchOrder.SETTABLEVIEW(PurchHeader);
      PurchOrder.EDITABLE := false;
      PurchOrder.RUN;
    END;

    [External]
    PROCEDURE InsertExtendedText@5(Unconditionally@1000 : Boolean);
    BEGIN
      if TransferExtendedText.SalesCheckIfAnyExtText(Rec,Unconditionally) then begin
        CurrPage.SAVERECORD;
        TransferExtendedText.InsertSalesExtText(Rec);
      end;
      if TransferExtendedText.MakeUpdate then
        UpdateForm(true);
    END;

    [External]
    PROCEDURE ShowReservation@2();
    BEGIN
      FIND;
      ShowReservation;
    END;

    [External]
    PROCEDURE ItemAvailability@7(AvailabilityType@1000 : 'Date,Variant,Location,Bin');
    BEGIN
      ItemAvailability(AvailabilityType);
    END;

    [External]
    PROCEDURE ShowReservationEntries@9();
    BEGIN
      ShowReservationEntries(true);
    END;

    [External]
    PROCEDURE ShowDimensions@8();
    BEGIN
      ShowDimensions;
    END;

    [External]
    PROCEDURE ShowItemSub@10();
    BEGIN
      ShowItemSub;
    END;

    [External]
    PROCEDURE ShowNonstockItems@11();
    BEGIN
      ShowNonstock;
    END;

    [External]
    PROCEDURE OpenItemTrackingLines@6500();
    BEGIN
      OpenItemTrackingLines;
    END;

    [External]
    PROCEDURE ShowTracking@13();
    VAR
      TrackingForm@1000 : Page "Order Tracking";
    BEGIN
      TrackingForm.SetSalesLine(Rec);
      TrackingForm.RUNMODAL;
    END;

    [External]
    PROCEDURE ItemChargeAssgnt@5800();
    BEGIN
      ShowItemChargeAssgnt;
    END;

    [External]
    PROCEDURE UpdateForm@12(SetSaveRecord@1000 : Boolean);
    BEGIN
      CurrPage.UPDATE(SetSaveRecord);
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      InsertExtendedText(false);
      if (Type = Type::"Charge (Item)") and ("No." <> xRec."No.") and
         (xRec."No." <> '')
      then
        CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      if Reserve = Reserve::Always then begin
        CurrPage.SAVERECORD;
        AutoReserve;
        CurrPage.UPDATE(false);
      end;
    END;

    LOCAL PROCEDURE UnitofMeasureCodeOnAfterValida@19057939();
    BEGIN
      if Reserve = Reserve::Always then begin
        CurrPage.SAVERECORD;
        AutoReserve;
        CurrPage.UPDATE(false);
      end;
    END;

    BEGIN
    END.
  }
}

