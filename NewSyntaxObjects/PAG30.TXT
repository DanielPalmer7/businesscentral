OBJECT Page 30 Item Card
{
  OBJECT-PROPERTIES
  {
    Date=20180425D;
    Time=161152.303T;
    Modified=true;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Item Card;
    SourceTable=Item;
    PageType=Card;
    RefreshOnActivate=true;
    PromotedActionCategoriesML=ENU=New,Process,Report,Item,History,Special Sales Prices & Discounts,Approve,Request Approval;
    OnInit=BEGIN
             InitControls;
           END;

    OnOpenPage=VAR
                 GLSetup@1020000 : Record "General Ledger Setup";
                 PermissionManager@1000 : Codeunit "Permission Manager";
               BEGIN
                 IsFoundationEnabled := ApplicationAreaMgmtFacade.IsFoundationEnabled;
                 EnableControls;
                 SetNoFieldVisible;
                 IsSaaS := PermissionManager.SoftwareAsAService;

                 GLSetup.GET;
                 UseVAT := GLSetup."VAT in Use";
                 UseSalesTax := not UseVAT;
               END;

    OnNewRecord=BEGIN
                  OnNewRec
                END;

    OnInsertRecord=BEGIN
                     InsertItemUnitOfMeasure;
                   END;

    OnAfterGetCurrRecord=VAR
                           CRMCouplingManagement@1002 : Codeunit "CRM Coupling Management";
                           WorkflowManagement@1001 : Codeunit "Workflow Management";
                           WorkflowEventHandling@1000 : Codeunit "Workflow Event Handling";
                           WorkflowWebhookManagement@1003 : Codeunit "Workflow Webhook Management";
                         BEGIN
                           CreateItemFromTemplate;
                           EnableControls;
                           if CRMIntegrationEnabled then begin
                             CRMIsCoupledToRecord := CRMCouplingManagement.IsRecordCoupledToCRM(RECORDID);
                             if "No." <> xRec."No." then
                               CRMIntegrationManagement.SendResultNotification(Rec);
                           end;
                           OpenApprovalEntriesExistCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
                           OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
                           ShowWorkflowStatus := CurrPage.WorkflowStatus.PAGE.SetFilterOnWorkflowRecord(RECORDID);

                           WorkflowWebhookManagement.GetCanRequestAndCanCancel(RECORDID,CanRequestApprovalForFlow,CanCancelApprovalForFlow);

                           EventFilter := WorkflowEventHandling.RunWorkflowOnSendItemForApprovalCode + '|' +
                             WorkflowEventHandling.RunWorkflowOnItemChangedCode;

                           EnabledApprovalWorkflowsExist := WorkflowManagement.EnabledWorkflowExist(DATABASE::Item,EventFilter);

                           CurrPage.ItemAttributesFactbox.PAGE.LoadItemAttributesData("No.");
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 123     ;1   ;ActionGroup;
                      Name=Item;
                      CaptionML=ENU=Item;
                      Image=DataEntry }
      { 199     ;2   ;Action    ;
                      Name=Attributes;
                      AccessByPermission=TableData "Item Attribute"=R;
                      CaptionML=ENU=Attributes;
                      ToolTipML=ENU=View or edit the item's attributes, such as color, size, or other characteristics that help to describe the item.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Image=Category;
                      PromotedCategory=Category4;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 PAGE.RUNMODAL(PAGE::"Item Attribute Value Editor",Rec);
                                 CurrPage.SAVERECORD;
                                 CurrPage.ItemAttributesFactbox.PAGE.LoadItemAttributesData("No.");
                               END;
                                }
      { 186     ;2   ;Action    ;
                      Name=AdjustInventory;
                      CaptionML=ENU=Adjust Inventory;
                      ToolTipML=ENU=Increase or decrease the item's inventory quantity manually by entering a new quantity. Adjusting the inventory quantity manually may be relevant after a physical count or if you do not record purchased quantities.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Visible=IsFoundationEnabled;
                      Enabled=InventoryItemEditable;
                      Image=InventoryCalculation;
                      PromotedCategory=Category4;
                      PromotedOnly=true;
                      OnAction=VAR
                                 AdjustInventory@1000 : Page "Adjust Inventory";
                               BEGIN
                                 COMMIT;
                                 AdjustInventory.SetItem("No.");
                                 AdjustInventory.RUNMODAL;
                               END;
                                }
      { 119     ;2   ;Action    ;
                      Name="Va&riants";
                      CaptionML=ENU=Va&riants;
                      ToolTipML=ENU=View how the inventory level of an item will develop over time according to the variant that you select.;
                      ApplicationArea=#Planning;
                      RunObject=Page "Item Variants";
                      RunPageLink="Item No."=FIELD("No.");
                      Image=ItemVariant }
      { 218     ;2   ;Action    ;
                      Name=Identifiers;
                      CaptionML=ENU=Identifiers;
                      ToolTipML=ENU=View a unique identifier for each item that you want warehouse employees to keep track of within the warehouse when using handheld devices. The item identifier can include the item number, the variant code and the unit of measure.;
                      ApplicationArea=#Warehouse;
                      RunObject=Page "Item Identifiers";
                      RunPageView=SORTING("Item No.","Variant Code","Unit of Measure Code");
                      RunPageLink="Item No."=FIELD("No.");
                      Image=BarCode }
      { 1901458458;2 ;Action    ;
                      Name=Attachments;
                      CaptionML=ENU=Attachments;
                      ToolTipML=ENU=Add a file as an attachment. You can attach images as well as documents.;
                      ApplicationArea=#All;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=Attach;
                      PromotedCategory=Category4;
                      PromotedOnly=true;
                      OnAction=VAR
                                 DocumentAttachmentDetails@1000 : Page "Document Attachment Details";
                                 RecRef@1001 : RecordRef;
                               BEGIN
                                 RecRef.GETTABLE(Rec);
                                 DocumentAttachmentDetails.OpenForRecRef(RecRef);
                                 DocumentAttachmentDetails.RUNMODAL;
                               END;
                                }
      { 182     ;1   ;ActionGroup;
                      Name=PricesandDiscounts;
                      CaptionML=ENU=Special Sales Prices & Discounts }
      { 82      ;2   ;Action    ;
                      Name="Set Special Prices";
                      CaptionML=ENU=Set Special Prices;
                      ToolTipML=ENU=Set up different prices for the item. An item price is automatically granted on invoice lines when the specified criteria are met, such as customer, quantity, or ending date.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "Sales Prices";
                      RunPageLink="Item No."=FIELD("No.");
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=Price;
                      PromotedCategory=Category6 }
      { 80      ;2   ;Action    ;
                      Name="Set Special Discounts";
                      CaptionML=ENU=Set Special Discounts;
                      ToolTipML=ENU=Set up different discounts for the item. An item discount is automatically granted on invoice lines when the specified criteria are met, such as customer, quantity, or ending date.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "Sales Line Discounts";
                      RunPageView=SORTING(Type,Code);
                      RunPageLink=Type=CONST(Item),
                                  Code=FIELD("No.");
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=LineDiscount;
                      PromotedCategory=Category6 }
      { 165     ;2   ;Action    ;
                      Name=PricesDiscountsOverview;
                      CaptionML=ENU=Special Prices & Discounts Overview;
                      ToolTipML=ENU=View the special prices and line discounts that you grant for this item when certain criteria are met, such as vendor, quantity, or ending date.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PriceWorksheet;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 SalesPriceAndLineDiscounts@1000 : Page "Sales Price and Line Discounts";
                               BEGIN
                                 SalesPriceAndLineDiscounts.InitPage(true);
                                 SalesPriceAndLineDiscounts.LoadItem(Rec);
                                 SalesPriceAndLineDiscounts.RUNMODAL;
                               END;
                                }
      { 160     ;1   ;ActionGroup;
                      Name=Approval;
                      CaptionML=ENU=Approval }
      { 159     ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=ENU=Approve;
                      ToolTipML=ENU=Approve the requested changes.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=OpenApprovalEntriesExistCurrUser;
                      PromotedIsBig=true;
                      Image=Approve;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.ApproveRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 156     ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=ENU=Reject;
                      ToolTipML=ENU=Reject the approval request.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=OpenApprovalEntriesExistCurrUser;
                      PromotedIsBig=true;
                      Image=Reject;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.RejectRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 154     ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=ENU=Delegate;
                      ToolTipML=ENU=Delegate the approval to a substitute approver.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=OpenApprovalEntriesExistCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.DelegateRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 503     ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=ENU=Comments;
                      ToolTipML=ENU=View or add comments for the record.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=OpenApprovalEntriesExistCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.GetApprovalComment(Rec);
                               END;
                                }
      { 150     ;1   ;ActionGroup;
                      Name="Request Approval";
                      CaptionML=ENU=Request Approval;
                      Image=SendApprovalRequest }
      { 149     ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=ENU=Send A&pproval Request;
                      ToolTipML=ENU=Request approval to change the record.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=(NOT OpenApprovalEntriesExist) AND EnabledApprovalWorkflowsExist AND CanRequestApprovalForFlow;
                      Image=SendApprovalRequest;
                      PromotedCategory=Category8;
                      PromotedOnly=true;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 if ApprovalsMgmt.CheckItemApprovalsWorkflowEnabled(Rec) then
                                   ApprovalsMgmt.OnSendItemForApproval(Rec);
                               END;
                                }
      { 148     ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=ENU=Cancel Approval Re&quest;
                      ToolTipML=ENU=Cancel the approval request.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=OpenApprovalEntriesExist OR CanCancelApprovalForFlow;
                      Image=CancelApprovalRequest;
                      PromotedCategory=Category8;
                      PromotedOnly=true;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit "Approvals Mgmt.";
                                 WorkflowWebhookManagement@1000 : Codeunit "Workflow Webhook Management";
                               BEGIN
                                 ApprovalsMgmt.OnCancelItemApprovalRequest(Rec);
                                 WorkflowWebhookManagement.FindAndCancel(RECORDID);
                               END;
                                }
      { 46      ;2   ;ActionGroup;
                      Name=Flow;
                      CaptionML=ENU=Flow }
      { 47      ;3   ;Action    ;
                      Name=CreateFlow;
                      CaptionML=ENU=Create a Flow;
                      ToolTipML=ENU=Create a new Flow from a list of relevant Flow templates.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Visible=IsSaaS;
                      Image=Flow;
                      PromotedCategory=Category8;
                      PromotedOnly=true;
                      OnAction=VAR
                                 FlowServiceManagement@1001 : Codeunit "Flow Service Management";
                                 FlowTemplateSelector@1000 : Page "Flow Template Selector";
                               BEGIN
                                 // Opens page 6400 where the user can use filtered templates to create new Flows.
                                 FlowTemplateSelector.SetSearchText(FlowServiceManagement.GetItemTemplateFilter);
                                 FlowTemplateSelector.RUN;
                               END;
                                }
      { 70      ;3   ;Action    ;
                      Name=SeeFlows;
                      CaptionML=ENU=See my Flows;
                      ToolTipML=ENU=View and configure Flows that you created.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "Flow Selector";
                      Promoted=true;
                      Image=Flow;
                      PromotedCategory=Category8;
                      PromotedOnly=true }
      { 193     ;1   ;ActionGroup;
                      Name=Workflow;
                      CaptionML=ENU=Workflow }
      { 197     ;2   ;Action    ;
                      Name=CreateApprovalWorkflow;
                      CaptionML=ENU=Create Approval Workflow;
                      ToolTipML=ENU=Set up an approval workflow for creating or changing items, by going through a few pages that will guide you.;
                      ApplicationArea=#Advanced;
                      Enabled=NOT EnabledApprovalWorkflowsExist;
                      Image=CreateWorkflow;
                      OnAction=BEGIN
                                 PAGE.RUNMODAL(PAGE::"Item Approval WF Setup Wizard");
                               END;
                                }
      { 195     ;2   ;Action    ;
                      Name=ManageApprovalWorkflow;
                      CaptionML=ENU=Manage Approval Workflow;
                      ToolTipML=ENU=View or edit existing approval workflows for creating or changing items.;
                      ApplicationArea=#Advanced;
                      Enabled=EnabledApprovalWorkflowsExist;
                      Image=WorkflowSetup;
                      OnAction=VAR
                                 WorkflowManagement@1000 : Codeunit "Workflow Management";
                               BEGIN
                                 WorkflowManagement.NavigateToWorkflows(DATABASE::Item,EventFilter);
                               END;
                                }
      { 91      ;1   ;ActionGroup;
                      Name="F&unctions";
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 92      ;2   ;Action    ;
                      Name="&Create Stockkeeping Unit";
                      AccessByPermission=TableData "Stockkeeping Unit"=R;
                      CaptionML=ENU=&Create Stockkeeping Unit;
                      ToolTipML=ENU=Create an instance of the item at each location that is set up.;
                      ApplicationArea=#Warehouse;
                      Image=CreateSKU;
                      OnAction=VAR
                                 Item@1001 : Record Item;
                               BEGIN
                                 Item.SETRANGE("No.","No.");
                                 REPORT.RUNMODAL(REPORT::"Create Stockkeeping Unit",true,false,Item);
                               END;
                                }
      { 7380    ;2   ;Action    ;
                      Name=CalculateCountingPeriod;
                      AccessByPermission=TableData "Phys. Invt. Item Selection"=R;
                      CaptionML=ENU=C&alculate Counting Period;
                      ToolTipML=ENU=Prepare for a physical inventory by calculating which items or SKUs need to be counted in the current period.;
                      ApplicationArea=#Warehouse;
                      Image=CalculateCalendar;
                      OnAction=VAR
                                 Item@1001 : Record Item;
                                 PhysInvtCountMgt@1000 : Codeunit "Phys. Invt. Count.-Management";
                               BEGIN
                                 Item.SETRANGE("No.","No.");
                                 PhysInvtCountMgt.UpdateItemPhysInvtCount(Item);
                               END;
                                }
      { 178     ;2   ;Action    ;
                      Name=Templates;
                      CaptionML=ENU=Templates;
                      ToolTipML=ENU=View or edit item templates.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "Config Templates";
                      RunPageLink="Table ID"=CONST(27);
                      Image=Template }
      { 242     ;2   ;Action    ;
                      Name=ApplyTemplate;
                      Ellipsis=true;
                      CaptionML=ENU=Apply Template;
                      ToolTipML=ENU=Apply a template to update the entity with your standard settings for a certain type of entity.;
                      ApplicationArea=#Basic,#Suite;
                      Image=ApplyTemplate;
                      OnAction=VAR
                                 ItemTemplate@1002 : Record "Item Template";
                               BEGIN
                                 ItemTemplate.UpdateItemFromTemplate(Rec);
                               END;
                                }
      { 179     ;2   ;Action    ;
                      Name=SaveAsTemplate;
                      Ellipsis=true;
                      CaptionML=ENU=Save as Template;
                      ToolTipML=ENU=Save the item card as a template that can be reused to create new item cards. Item templates contain preset information to help you fill in fields on item cards.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Save;
                      OnAction=VAR
                                 TempItemTemplate@1002 : TEMPORARY Record "Item Template";
                               BEGIN
                                 TempItemTemplate.SaveAsTemplate(Rec);
                               END;
                                }
      { 1905370404;1 ;Action    ;
                      Name="Requisition Worksheet";
                      CaptionML=ENU=Requisition Worksheet;
                      ToolTipML=ENU=Calculate a supply plan to fulfill item demand with purchases or transfers.;
                      ApplicationArea=#Planning;
                      RunObject=Page "Req. Worksheet";
                      Image=Worksheet }
      { 1904344904;1 ;Action    ;
                      Name="Item Journal";
                      CaptionML=ENU=Item Journal;
                      ToolTipML=ENU=Open a list of journals where you can adjust the physical quantity of items on inventory.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Item Journal";
                      Promoted=true;
                      Image=Journals;
                      PromotedCategory=Process }
      { 1906716204;1 ;Action    ;
                      Name="Item Reclassification Journal";
                      CaptionML=ENU=Item Reclassification Journal;
                      ToolTipML=ENU=Change information on item ledger entries, such as dimensions, location codes, bin codes, and serial or lot numbers.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Item Reclass. Journal";
                      Promoted=true;
                      Image=Journals;
                      PromotedCategory=Process }
      { 1902532604;1 ;Action    ;
                      Name="Item Tracing";
                      CaptionML=ENU=Item Tracing;
                      ToolTipML=ENU=Trace where a lot or serial number assigned to the item was used, for example, to find which lot a defective component came from or to find all the customers that have received items containing the defective component.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Item Tracing";
                      Image=ItemTracing }
      { 1900000006;0 ;ActionContainer;
                      Name=ActionContainer1900000006;
                      ActionContainerType=Reports }
      { 1900830806;1 ;Action    ;
                      Name="Item Turnover";
                      CaptionML=ENU=Item Turnover;
                      ToolTipML=ENU=View a detailed account of item turnover by periods after you have set the relevant filters for location and variant.;
                      RunObject=Report "Item Turnover";
                      Promoted=false;
                      Image=Report;
                      PromotedCategory=Report }
      { 1904038006;1 ;Action    ;
                      Name="Item Transaction Detail";
                      CaptionML=ENU=Item Transaction Detail;
                      ToolTipML=ENU=View detailed purchase, sales, and adjustment information about the items in your inventory. This report lists transactions by the item that they pertain to. If an item has variants, each variant's transactions are listed separately.;
                      RunObject=Report "Item Transaction Detail";
                      Promoted=true;
                      Image=Report;
                      PromotedCategory=Report }
      { 1900457106;1 ;Action    ;
                      Name="Serial Number Status/Aging";
                      CaptionML=ENU=Serial Number Status/Aging;
                      ToolTipML=ENU=View a list of serial-numbered items that are currently in stock. This report includes serial-numbered items along with the purchase date and the number of days the item has been in stock.;
                      RunObject=Report "Top __ Inventory Items";
                      Promoted=false;
                      Image=Report;
                      PromotedCategory=Report }
      { 1905655706;1 ;Action    ;
                      Name="Issue History";
                      CaptionML=ENU=Issue History;
                      ToolTipML=ENU=View figures for items removed from inventory to be used in the production of bills of material during specific periods.;
                      RunObject=Report "Issue History";
                      Promoted=false;
                      Image=Report;
                      PromotedCategory=Report }
      { 1901781006;1 ;Action    ;
                      Name="Item Sales by Customer";
                      CaptionML=ENU=Item Sales by Customer;
                      ToolTipML=ENU=View a list of sales for the items that you select. The report lists each item, each customer who bought the item, and the quantity that each customer bought in the specified period.;
                      RunObject=Report "Item Sales by Customer";
                      Promoted=false;
                      Image=Report;
                      PromotedCategory=Report }
      { 1902050606;1 ;Action    ;
                      Name="Picking List by Item";
                      CaptionML=ENU=Picking List by Item;
                      ToolTipML=ENU=View the picking list by item. Microsoft Dynamics NAV prints items in order by their shelf/bin number to make picking more convenient. For items using the specific costing method, Microsoft Dynamics NAV leaves space for you to write the serial number.;
                      RunObject=Report "Picking List by Item";
                      Promoted=false;
                      Image=Report;
                      PromotedCategory=Report }
      { 1906608106;1 ;Action    ;
                      Name="Sales Order Status";
                      CaptionML=ENU=Sales Order Status;
                      ToolTipML=ENU=View the status of partially filled or unfilled orders so you can determine what effect filling these orders may have on your inventory. NOTE: The Amount Remaining column may include sales taxes and therefore may not match the result of multiplying the remaining amount times the unit price and subtracting the discounts.;
                      RunObject=Report "Sales Order Status";
                      Promoted=true;
                      Image=Report;
                      PromotedCategory=Report }
      { 1903311006;1 ;Action    ;
                      Name="Serial Number Sold History";
                      CaptionML=ENU=Serial Number Sold History;
                      ToolTipML=ENU=View or track serial-numbered items to the customers that bought them. The system includes the date of the sale as well as the amount the item was sold for on the report. The report shows the item first followed by the customer that purchased that item.;
                      RunObject=Report "Serial Number Sold History";
                      Promoted=false;
                      Image=Report;
                      PromotedCategory=Report }
      { 1900219606;1 ;Action    ;
                      Name="Vendor Purchases by Item";
                      CaptionML=ENU=Vendor Purchases by Item;
                      ToolTipML=ENU=View a list of the items that you purchased and the vendors that you purchased the items from.;
                      RunObject=Report "Vendor Purchases by Item";
                      Promoted=false;
                      Image=Report;
                      PromotedCategory=Report }
      { 1900430206;1 ;Action    ;
                      Name="Item/Vendor Catalog";
                      CaptionML=ENU=Item/Vendor Catalog;
                      ToolTipML=ENU=View a complete or partial catalog of which vendors offer which items.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Report "Item/Vendor Catalog";
                      Promoted=false;
                      Image=Report;
                      PromotedCategory=Report }
      { 1900506906;1 ;Action    ;
                      Name="Purchase Order Status";
                      CaptionML=ENU=Purchase Order Status;
                      ToolTipML=ENU=View outstanding purchase orders, including partial receipts and orders not yet received.;
                      RunObject=Report "Purchase Order Status";
                      Promoted=true;
                      Image=Report;
                      PromotedCategory=Report }
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 126     ;1   ;ActionGroup;
                      Name=History;
                      CaptionML=ENU=History;
                      Image=History }
      { 101     ;2   ;ActionGroup;
                      Name="E&ntries";
                      CaptionML=ENU=E&ntries;
                      Image=Entries }
      { 105     ;3   ;Action    ;
                      Name="Ledger E&ntries";
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Ledger E&ntries;
                      ToolTipML=ENU=View the history of transactions that have been posted for the selected record.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "Item Ledger Entries";
                      RunPageView=SORTING("Item No.")
                                  ORDER(Descending);
                      RunPageLink="Item No."=FIELD("No.");
                      PromotedIsBig=true;
                      Image=ItemLedger;
                      PromotedCategory=Category5 }
      { 112     ;3   ;Action    ;
                      Name="&Phys. Inventory Ledger Entries";
                      CaptionML=ENU=&Phys. Inventory Ledger Entries;
                      ToolTipML=ENU=View how many units of the item you had in stock at the last physical count.;
                      ApplicationArea=#Warehouse;
                      RunObject=Page "Phys. Inventory Ledger Entries";
                      RunPageView=SORTING("Item No.");
                      RunPageLink="Item No."=FIELD("No.");
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PhysicalInventoryLedger;
                      PromotedCategory=Category5 }
      { 75      ;3   ;Action    ;
                      Name="&Reservation Entries";
                      CaptionML=ENU=&Reservation Entries;
                      ToolTipML=ENU=View all reservations that are made for the item, either manually or automatically.;
                      ApplicationArea=#Reservation;
                      RunObject=Page "Reservation Entries";
                      RunPageView=SORTING("Item No.","Variant Code","Location Code","Reservation Status");
                      RunPageLink="Reservation Status"=CONST(Reservation),
                                  "Item No."=FIELD("No.");
                      Image=ReservationLedger }
      { 5800    ;3   ;Action    ;
                      Name="&Value Entries";
                      CaptionML=ENU=&Value Entries;
                      ToolTipML=ENU=View the history of posted amounts that affect the value of the item. Value entries are created for every transaction with the item.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Value Entries";
                      RunPageView=SORTING("Item No.");
                      RunPageLink="Item No."=FIELD("No.");
                      Image=ValueLedger }
      { 6500    ;3   ;Action    ;
                      Name="Item &Tracking Entries";
                      CaptionML=ENU=Item &Tracking Entries;
                      ToolTipML=ENU=View serial or lot numbers that are assigned to items.;
                      ApplicationArea=#ItemTracking;
                      Image=ItemTrackingLedger;
                      OnAction=VAR
                                 ItemTrackingDocMgt@1000 : Codeunit "Item Tracking Doc. Management";
                               BEGIN
                                 ItemTrackingDocMgt.ShowItemTrackingForMasterData(3,'',"No.",'','','','');
                               END;
                                }
      { 11      ;3   ;Action    ;
                      Name="&Warehouse Entries";
                      CaptionML=ENU=&Warehouse Entries;
                      ToolTipML=ENU="View the history of quantities that are registered for the item in warehouse activities. ";
                      ApplicationArea=#Warehouse;
                      RunObject=Page "Warehouse Entries";
                      RunPageView=SORTING("Item No.","Bin Code","Location Code","Variant Code","Unit of Measure Code","Lot No.","Serial No.","Entry Type",Dedicated);
                      RunPageLink="Item No."=FIELD("No.");
                      Image=BinLedger }
      { 237     ;3   ;Action    ;
                      Name="Application Worksheet";
                      CaptionML=ENU=Application Worksheet;
                      ToolTipML=ENU=Edit item applications that are automatically created between item ledger entries during item transactions. Use special functions to manually undo or change item application entries.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Application Worksheet";
                      RunPageLink="Item No."=FIELD("No.");
                      Image=ApplicationWorksheet }
      { 65      ;3   ;Action    ;
                      Name="Export Item Data";
                      CaptionML=ENU=Export Item Data;
                      ToolTipML=ENU=Use this function to export item related data to text file (you can attach this file to support requests in case you may have issues with costing calculation).;
                      ApplicationArea=#Basic,#Suite;
                      Image=ExportFile;
                      OnAction=VAR
                                 Item@1001 : Record Item;
                                 ExportItemData@1000 : XMLport "Export Item Data";
                               BEGIN
                                 Item.SETRANGE("No.","No.");
                                 CLEAR(ExportItemData);
                                 ExportItemData.SETTABLEVIEW(Item);
                                 ExportItemData.RUN;
                               END;
                                }
      { 190     ;1   ;ActionGroup;
                      Name=ActionGroup190;
                      CaptionML=ENU=Item }
      { 184     ;2   ;Action    ;
                      Name=Dimensions;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Dimensions;
                      RunObject=Page "Default Dimensions";
                      RunPageLink="Table ID"=CONST(27),
                                  "No."=FIELD("No.");
                      PromotedIsBig=true;
                      Image=Dimensions;
                      PromotedCategory=Category4 }
      { 161     ;2   ;Action    ;
                      Name="Cross Re&ferences";
                      CaptionML=ENU=Cross Re&ferences;
                      ToolTipML=ENU=Set up a customer's or vendor's own identification of the item. Cross-references to the customer's item number means that the item number is automatically shown on sales documents instead of the number that you use.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "Item Cross Reference Entries";
                      RunPageLink="Item No."=FIELD("No.");
                      PromotedIsBig=true;
                      Image=Change;
                      PromotedCategory=Category4 }
      { 114     ;2   ;Action    ;
                      Name="&Units of Measure";
                      CaptionML=ENU=&Units of Measure;
                      ToolTipML=ENU=Set up the different units that the item can be traded in, such as piece, box, or hour.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "Item Units of Measure";
                      RunPageLink="Item No."=FIELD("No.");
                      PromotedIsBig=true;
                      Image=UnitOfMeasure;
                      PromotedCategory=Category4 }
      { 117     ;2   ;Action    ;
                      Name="E&xtended Text";
                      CaptionML=ENU=E&xtended Text;
                      ToolTipML=ENU=Select or set up additional text for the description of the item. Extended text can be inserted under the Description field on document lines for the item.;
                      ApplicationArea=#Suite;
                      RunObject=Page "Extended Text List";
                      RunPageView=SORTING("Table Name","No.","Language Code","All Language Codes","Starting Date","Ending Date");
                      RunPageLink="Table Name"=CONST(Item),
                                  "No."=FIELD("No.");
                      PromotedIsBig=true;
                      Image=Text;
                      PromotedCategory=Category4 }
      { 116     ;2   ;Action    ;
                      Name=Translations;
                      CaptionML=ENU=Translations;
                      ToolTipML=ENU=View or edit translated item descriptions. Translated item descriptions are automatically inserted on documents according to the language code.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "Item Translations";
                      RunPageLink="Item No."=FIELD("No.");
                      PromotedIsBig=true;
                      Image=Translations;
                      PromotedCategory=Category4 }
      { 158     ;2   ;Action    ;
                      Name="Substituti&ons";
                      CaptionML=ENU=Substituti&ons;
                      ToolTipML=ENU=View substitute items that are set up to be sold instead of the item.;
                      ApplicationArea=#Suite;
                      RunObject=Page "Item Substitution Entry";
                      RunPageLink=Type=CONST(Item),
                                  "No."=FIELD("No.");
                      Image=ItemSubstitution }
      { 129     ;2   ;Action    ;
                      Name=ApprovalEntries;
                      AccessByPermission=TableData "Approval Entry"=R;
                      CaptionML=ENU=Approvals;
                      ToolTipML=ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                      ApplicationArea=#Suite;
                      Promoted=true;
                      Image=Approvals;
                      PromotedCategory=Category8;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 ApprovalsMgmt.OpenApprovalEntriesPage(RECORDID);
                               END;
                                }
      { 147     ;1   ;ActionGroup;
                      Name=ActionGroupCRM;
                      CaptionML=ENU=Dynamics 365 for Sales;
                      Visible=CRMIntegrationEnabled }
      { 146     ;2   ;Action    ;
                      Name=CRMGoToProduct;
                      CaptionML=ENU=Product;
                      ToolTipML=ENU=Open the coupled Dynamics 365 for Sales product.;
                      ApplicationArea=#Suite;
                      Image=CoupledItem;
                      OnAction=VAR
                                 CRMIntegrationManagement@1000 : Codeunit "CRM Integration Management";
                               BEGIN
                                 CRMIntegrationManagement.ShowCRMEntityFromRecordID(RECORDID);
                               END;
                                }
      { 144     ;2   ;Action    ;
                      Name=CRMSynchronizeNow;
                      AccessByPermission=TableData "CRM Integration Record"=IM;
                      CaptionML=ENU=Synchronize;
                      ToolTipML=ENU=Send updated data to Dynamics 365 for Sales.;
                      ApplicationArea=#Suite;
                      Image=Refresh;
                      OnAction=VAR
                                 CRMIntegrationManagement@1001 : Codeunit "CRM Integration Management";
                               BEGIN
                                 CRMIntegrationManagement.UpdateOneNow(RECORDID);
                               END;
                                }
      { 142     ;2   ;ActionGroup;
                      Name=Coupling;
                      CaptionML=[@@@=Coupling is a noun;
                                 ENU=Coupling];
                      ToolTipML=ENU=Create, change, or delete a coupling between the Business Central record and a Dynamics 365 for Sales record.;
                      Image=LinkAccount }
      { 140     ;3   ;Action    ;
                      Name=ManageCRMCoupling;
                      AccessByPermission=TableData "CRM Integration Record"=IM;
                      CaptionML=ENU=Set Up Coupling;
                      ToolTipML=ENU=Create or modify the coupling to a Dynamics 365 for Sales product.;
                      ApplicationArea=#Suite;
                      Image=LinkAccount;
                      OnAction=VAR
                                 CRMIntegrationManagement@1000 : Codeunit "CRM Integration Management";
                               BEGIN
                                 CRMIntegrationManagement.DefineCoupling(RECORDID);
                               END;
                                }
      { 138     ;3   ;Action    ;
                      Name=DeleteCRMCoupling;
                      AccessByPermission=TableData "CRM Integration Record"=IM;
                      CaptionML=ENU=Delete Coupling;
                      ToolTipML=ENU=Delete the coupling to a Dynamics 365 for Sales product.;
                      ApplicationArea=#Suite;
                      Enabled=CRMIsCoupledToRecord;
                      Image=UnLinkAccount;
                      OnAction=VAR
                                 CRMCouplingManagement@1000 : Codeunit "CRM Coupling Management";
                               BEGIN
                                 CRMCouplingManagement.RemoveCoupling(RECORDID);
                               END;
                                }
      { 203     ;2   ;Action    ;
                      Name=ShowLog;
                      CaptionML=ENU=Synchronization Log;
                      ToolTipML=ENU=View integration synchronization jobs for the item table.;
                      ApplicationArea=#Suite;
                      Image=Log;
                      OnAction=VAR
                                 CRMIntegrationManagement@1000 : Codeunit "CRM Integration Management";
                               BEGIN
                                 CRMIntegrationManagement.ShowLog(RECORDID);
                               END;
                                }
      { 124     ;1   ;ActionGroup;
                      Name=Availability;
                      CaptionML=ENU=Availability;
                      Image=ItemAvailability }
      { 68      ;2   ;Action    ;
                      Name=ItemsByLocation;
                      AccessByPermission=TableData Location=R;
                      CaptionML=ENU=Items b&y Location;
                      ToolTipML=ENU=Show a list of items grouped by location.;
                      ApplicationArea=#Advanced;
                      Image=ItemAvailbyLoc;
                      OnAction=BEGIN
                                 PAGE.RUN(PAGE::"Items by Location",Rec);
                               END;
                                }
      { 76      ;2   ;ActionGroup;
                      Name="&Item Availability by";
                      CaptionML=ENU=&Item Availability by;
                      Image=ItemAvailability }
      { 3       ;3   ;Action    ;
                      Name=<Action110>;
                      CaptionML=ENU=Event;
                      ToolTipML=ENU=View how the actual and the projected available balance of an item will develop over time according to supply and demand events.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItem(Rec,ItemAvailFormsMgt.ByEvent);
                               END;
                                }
      { 110     ;3   ;Action    ;
                      Name=Period;
                      CaptionML=ENU=Period;
                      ToolTipML=ENU=Show the projected quantity of the item over time according to time periods, such as day, week, or month.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "Item Availability by Periods";
                      RunPageLink="No."=FIELD("No."),
                                  "Global Dimension 1 Filter"=FIELD("Global Dimension 1 Filter"),
                                  "Global Dimension 2 Filter"=FIELD("Global Dimension 2 Filter"),
                                  "Location Filter"=FIELD("Location Filter"),
                                  "Drop Shipment Filter"=FIELD("Drop Shipment Filter"),
                                  "Variant Filter"=FIELD("Variant Filter");
                      Image=Period }
      { 77      ;3   ;Action    ;
                      Name=Variant;
                      CaptionML=ENU=Variant;
                      ToolTipML=ENU=View or edit the item's variants. Instead of setting up each color of an item as a separate item, you can set up the various colors as variants of the item.;
                      ApplicationArea=#Planning;
                      RunObject=Page "Item Availability by Variant";
                      RunPageLink="No."=FIELD("No."),
                                  "Global Dimension 1 Filter"=FIELD("Global Dimension 1 Filter"),
                                  "Global Dimension 2 Filter"=FIELD("Global Dimension 2 Filter"),
                                  "Location Filter"=FIELD("Location Filter"),
                                  "Drop Shipment Filter"=FIELD("Drop Shipment Filter"),
                                  "Variant Filter"=FIELD("Variant Filter");
                      Image=ItemVariant }
      { 69      ;3   ;Action    ;
                      Name=Location;
                      CaptionML=ENU=Location;
                      ToolTipML=ENU=View the actual and projected quantity of the item per location.;
                      ApplicationArea=#Location;
                      RunObject=Page "Item Availability by Location";
                      RunPageLink="No."=FIELD("No."),
                                  "Global Dimension 1 Filter"=FIELD("Global Dimension 1 Filter"),
                                  "Global Dimension 2 Filter"=FIELD("Global Dimension 2 Filter"),
                                  "Location Filter"=FIELD("Location Filter"),
                                  "Drop Shipment Filter"=FIELD("Drop Shipment Filter"),
                                  "Variant Filter"=FIELD("Variant Filter");
                      Image=Warehouse }
      { 67      ;3   ;Action    ;
                      Name="BOM Level";
                      AccessByPermission=TableData "BOM Buffer"=R;
                      CaptionML=ENU=BOM Level;
                      ToolTipML=ENU=View availability figures for items on bills of materials that show how many units of a parent item you can make based on the availability of child items.;
                      ApplicationArea=#Assembly;
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItem(Rec,ItemAvailFormsMgt.ByBOM);
                               END;
                                }
      { 74      ;3   ;Action    ;
                      Name=Timeline;
                      CaptionML=ENU=Timeline;
                      ToolTipML=ENU=Get a graphical view of an item's projected inventory based on future supply and demand events, with or without planning suggestions. The result is a graphical representation of the inventory profile.;
                      ApplicationArea=#Planning;
                      Image=Timeline;
                      OnAction=BEGIN
                                 ShowTimelineFromItem(Rec);
                               END;
                                }
      { 102     ;2   ;ActionGroup;
                      Name=ActionGroup102;
                      CaptionML=ENU=Statistics;
                      Image=Statistics }
      { 107     ;3   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=ENU=Statistics;
                      ToolTipML=ENU=View statistical information, such as the value of posted entries, for the record.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Statistics;
                      OnAction=VAR
                                 ItemStatistics@1001 : Page "Item Statistics";
                               BEGIN
                                 ItemStatistics.SetItem(Rec);
                                 ItemStatistics.RUNMODAL;
                               END;
                                }
      { 108     ;3   ;Action    ;
                      Name="Entry Statistics";
                      CaptionML=ENU=Entry Statistics;
                      ToolTipML=ENU=View statistics for item ledger entries.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "Item Entry Statistics";
                      RunPageLink="No."=FIELD("No."),
                                  "Date Filter"=FIELD("Date Filter"),
                                  "Global Dimension 1 Filter"=FIELD("Global Dimension 1 Filter"),
                                  "Global Dimension 2 Filter"=FIELD("Global Dimension 2 Filter"),
                                  "Location Filter"=FIELD("Location Filter"),
                                  "Drop Shipment Filter"=FIELD("Drop Shipment Filter"),
                                  "Variant Filter"=FIELD("Variant Filter");
                      Image=EntryStatistics }
      { 111     ;3   ;Action    ;
                      Name="T&urnover";
                      CaptionML=ENU=T&urnover;
                      ToolTipML=ENU=View a detailed account of item turnover by periods after you have set the relevant filters for location and variant.;
                      ApplicationArea=#Suite;
                      RunObject=Page "Item Turnover";
                      RunPageLink="No."=FIELD("No."),
                                  "Global Dimension 1 Filter"=FIELD("Global Dimension 1 Filter"),
                                  "Global Dimension 2 Filter"=FIELD("Global Dimension 2 Filter"),
                                  "Location Filter"=FIELD("Location Filter"),
                                  "Drop Shipment Filter"=FIELD("Drop Shipment Filter"),
                                  "Variant Filter"=FIELD("Variant Filter");
                      Image=Turnover }
      { 106     ;2   ;Action    ;
                      Name="Co&mments";
                      CaptionML=ENU=Co&mments;
                      ToolTipML=ENU=View or add comments for the record.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Comment Sheet";
                      RunPageLink="Table Name"=CONST(Item),
                                  "No."=FIELD("No.");
                      Image=ViewComments }
      { 84      ;1   ;ActionGroup;
                      Name="&Purchases";
                      CaptionML=ENU=&Purchases;
                      Image=Purchasing }
      { 81      ;2   ;Action    ;
                      Name="Ven&dors";
                      CaptionML=ENU=Ven&dors;
                      ToolTipML=ENU=View the list of vendors who can supply the item, and at which lead time.;
                      ApplicationArea=#Planning;
                      RunObject=Page "Item Vendor Catalog";
                      RunPageView=SORTING("Item No.");
                      RunPageLink="Item No."=FIELD("No.");
                      Image=Vendor }
      { 240     ;2   ;Action    ;
                      Name="Prepa&yment Percentages";
                      CaptionML=ENU=Prepa&yment Percentages;
                      ToolTipML=ENU="View or edit the percentages of the price that can be paid as a prepayment. ";
                      ApplicationArea=#Prepayments;
                      RunObject=Page "Purchase Prepmt. Percentages";
                      RunPageLink="Item No."=FIELD("No.");
                      Image=PrepaymentPercentages }
      { 87      ;2   ;Action    ;
                      Name=Orders;
                      CaptionML=ENU=Orders;
                      ToolTipML=ENU=View a list of ongoing orders for the item.;
                      ApplicationArea=#Suite;
                      RunObject=Page "Purchase Orders";
                      RunPageView=SORTING("Document Type",Type,"No.");
                      RunPageLink=Type=CONST(Item),
                                  "No."=FIELD("No.");
                      Image=Document }
      { 191     ;2   ;Action    ;
                      Name="Return Orders";
                      CaptionML=ENU=Return Orders;
                      ToolTipML=ENU=Open the list of ongoing return orders for the item.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Purchase Return Orders";
                      RunPageView=SORTING("Document Type",Type,"No.");
                      RunPageLink=Type=CONST(Item),
                                  "No."=FIELD("No.");
                      Image=ReturnOrder }
      { 42      ;1   ;ActionGroup;
                      Name=PurchPricesandDiscounts;
                      CaptionML=ENU=Special Purchase Prices & Discounts }
      { 86      ;2   ;Action    ;
                      Name=Action86;
                      CaptionML=ENU=Set Special Prices;
                      ToolTipML=ENU=Set up different prices for the item. An item price is automatically granted on invoice lines when the specified criteria are met, such as vendor, quantity, or ending date.;
                      ApplicationArea=#Suite;
                      RunObject=Page "Purchase Prices";
                      RunPageView=SORTING("Item No.");
                      RunPageLink="Item No."=FIELD("No.");
                      Image=Price }
      { 85      ;2   ;Action    ;
                      Name=Action85;
                      CaptionML=ENU=Set Special Discounts;
                      ToolTipML=ENU=Set up different discounts for the item. An item discount is automatically granted on invoice lines when the specified criteria are met, such as vendor, quantity, or ending date.;
                      ApplicationArea=#Suite;
                      RunObject=Page "Purchase Line Discounts";
                      RunPageLink="Item No."=FIELD("No.");
                      Image=LineDiscount }
      { 209     ;2   ;Action    ;
                      Name=PurchPricesDiscountsOverview;
                      CaptionML=ENU=Special Prices & Discounts Overview;
                      ToolTipML=ENU=View the special prices and line discounts that you grant for this item when certain criteria are met, such as vendor, quantity, or ending date.;
                      ApplicationArea=#Suite;
                      Image=PriceWorksheet;
                      OnAction=VAR
                                 PurchasesPriceAndLineDisc@1000 : Page "Purchases Price and Line Disc.";
                               BEGIN
                                 PurchasesPriceAndLineDisc.LoadItem(Rec);
                                 PurchasesPriceAndLineDisc.RUNMODAL;
                               END;
                                }
      { 79      ;1   ;ActionGroup;
                      Name="S&ales";
                      CaptionML=ENU=S&ales;
                      Image=Sales }
      { 300     ;2   ;Action    ;
                      Name=Action300;
                      CaptionML=ENU=Prepa&yment Percentages;
                      ToolTipML=ENU="View or edit the percentages of the price that can be paid as a prepayment. ";
                      ApplicationArea=#Prepayments;
                      RunObject=Page "Sales Prepayment Percentages";
                      RunPageLink="Item No."=FIELD("No.");
                      Image=PrepaymentPercentages }
      { 83      ;2   ;Action    ;
                      Name=Action83;
                      CaptionML=ENU=Orders;
                      ToolTipML=ENU=View a list of ongoing orders for the item.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Sales Orders";
                      RunPageView=SORTING("Document Type",Type,"No.");
                      RunPageLink=Type=CONST(Item),
                                  "No."=FIELD("No.");
                      Image=Document }
      { 163     ;2   ;Action    ;
                      Name=Action163;
                      CaptionML=ENU=Return Orders;
                      ToolTipML=ENU=Open the list of ongoing return orders for the item.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Sales Return Orders";
                      RunPageView=SORTING("Document Type",Type,"No.");
                      RunPageLink=Type=CONST(Item),
                                  "No."=FIELD("No.");
                      Image=ReturnOrder }
      { 128     ;1   ;ActionGroup;
                      Name="Bill of Materials";
                      CaptionML=ENU=Bill of Materials;
                      Image=Production }
      { 121     ;2   ;Action    ;
                      Name=BOMStructure;
                      CaptionML=ENU=Structure;
                      ToolTipML=ENU=View which child items are used in an item's assembly BOM or production BOM. Each item level can be collapsed or expanded to obtain an overview or detailed view.;
                      ApplicationArea=#Assembly;
                      Image=Hierarchy;
                      OnAction=VAR
                                 BOMStructure@1000 : Page "BOM Structure";
                               BEGIN
                                 BOMStructure.InitItem(Rec);
                                 BOMStructure.RUN;
                               END;
                                }
      { 104     ;2   ;Action    ;
                      Name="Cost Shares";
                      CaptionML=ENU=Cost Shares;
                      ToolTipML=ENU=View how the costs of underlying items in the BOM roll up to the parent item. The information is organized according to the BOM structure to reflect at which levels the individual costs apply. Each item level can be collapsed or expanded to obtain an overview or detailed view.;
                      ApplicationArea=#Assembly;
                      Image=CostBudget;
                      OnAction=VAR
                                 BOMCostShares@1000 : Page "BOM Cost Shares";
                               BEGIN
                                 BOMCostShares.InitItem(Rec);
                                 BOMCostShares.RUN;
                               END;
                                }
      { 100     ;2   ;ActionGroup;
                      Name="Assemb&ly";
                      CaptionML=ENU=Assemb&ly;
                      Image=AssemblyBOM }
      { 98      ;3   ;Action    ;
                      Name="Assembly BOM";
                      AccessByPermission=TableData "BOM Component"=R;
                      CaptionML=ENU=Assembly BOM;
                      ToolTipML=ENU=View or edit the bill of material that specifies which items and resources are required to assemble the assembly item.;
                      ApplicationArea=#Assembly;
                      RunObject=Page "Assembly BOM";
                      RunPageLink="Parent Item No."=FIELD("No.");
                      Image=BOM }
      { 96      ;3   ;Action    ;
                      Name="Where-Used";
                      AccessByPermission=TableData "BOM Component"=R;
                      CaptionML=ENU=Where-Used;
                      ToolTipML=ENU=View a list of BOMs in which the item is used.;
                      ApplicationArea=#Assembly;
                      RunObject=Page "Where-Used List";
                      RunPageView=SORTING(Type,"No.");
                      RunPageLink=Type=CONST(Item),
                                  "No."=FIELD("No.");
                      Image=Track }
      { 94      ;3   ;Action    ;
                      Name="Calc. Stan&dard Cost";
                      AccessByPermission=TableData "BOM Component"=R;
                      CaptionML=ENU=Calc. Stan&dard Cost;
                      ToolTipML=ENU=Calculate the unit cost of the item by rolling up the unit cost of each component and resource in the item's assembly BOM or production BOM. The unit cost of a parent item must always equals the total of the unit costs of its components, subassemblies, and any resources.;
                      ApplicationArea=#Assembly;
                      Image=CalculateCost;
                      OnAction=BEGIN
                                 CLEAR(CalculateStdCost);
                                 CalculateStdCost.CalcItem("No.",true);
                               END;
                                }
      { 90      ;3   ;Action    ;
                      Name="Calc. Unit Price";
                      AccessByPermission=TableData "BOM Component"=R;
                      CaptionML=ENU=Calc. Unit Price;
                      ToolTipML=ENU=Calculate the unit price based on the unit cost and the profit percentage.;
                      ApplicationArea=#Assembly;
                      Image=SuggestItemPrice;
                      OnAction=BEGIN
                                 CLEAR(CalculateStdCost);
                                 CalculateStdCost.CalcAssemblyItemPrice("No.")
                               END;
                                }
      { 89      ;2   ;ActionGroup;
                      Name=Production;
                      CaptionML=ENU=Production;
                      Image=Production }
      { 88      ;3   ;Action    ;
                      Name="Production BOM";
                      CaptionML=ENU=Production BOM;
                      ToolTipML=ENU=Open the item's production bill of material to view or edit its components.;
                      ApplicationArea=#Manufacturing;
                      RunObject=Page "Production BOM";
                      RunPageLink="No."=FIELD("Production BOM No.");
                      Image=BOM }
      { 78      ;3   ;Action    ;
                      Name=Action78;
                      AccessByPermission=TableData "Production BOM Header"=R;
                      CaptionML=ENU=Where-Used;
                      ToolTipML=ENU=View a list of BOMs in which the item is used.;
                      ApplicationArea=#Advanced;
                      Image=Where-Used;
                      OnAction=VAR
                                 ProdBOMWhereUsed@1001 : Page "Prod. BOM Where-Used";
                               BEGIN
                                 ProdBOMWhereUsed.SetItem(Rec,WORKDATE);
                                 ProdBOMWhereUsed.RUNMODAL;
                               END;
                                }
      { 5       ;3   ;Action    ;
                      Name=Action5;
                      AccessByPermission=TableData "Production BOM Header"=R;
                      CaptionML=ENU=Calc. Stan&dard Cost;
                      ToolTipML=ENU=Calculate the unit cost of the item by rolling up the unit cost of each component and resource in the item's assembly BOM or production BOM. The unit cost of a parent item must always equals the total of the unit costs of its components, subassemblies, and any resources.;
                      ApplicationArea=#Advanced;
                      Image=CalculateCost;
                      OnAction=BEGIN
                                 CLEAR(CalculateStdCost);
                                 CalculateStdCost.CalcItem("No.",false);
                               END;
                                }
      { 103     ;1   ;ActionGroup;
                      Name=Warehouse;
                      CaptionML=ENU=Warehouse;
                      Image=Warehouse }
      { 212     ;2   ;Action    ;
                      Name="&Bin Contents";
                      CaptionML=ENU=&Bin Contents;
                      ToolTipML=ENU=View the quantities of the item in each bin where it exists. You can see all the important parameters relating to bin content, and you can modify certain bin content parameters in this window.;
                      ApplicationArea=#Warehouse;
                      RunObject=Page "Item Bin Contents";
                      RunPageView=SORTING("Item No.");
                      RunPageLink="Item No."=FIELD("No.");
                      Image=BinContent }
      { 157     ;2   ;Action    ;
                      Name="Stockkeepin&g Units";
                      CaptionML=ENU=Stockkeepin&g Units;
                      ToolTipML=ENU="Open the item's SKUs to view or edit instances of the item at different locations or with different variants. ";
                      ApplicationArea=#Planning;
                      RunObject=Page "Stockkeeping Unit List";
                      RunPageView=SORTING("Item No.");
                      RunPageLink="Item No."=FIELD("No.");
                      Image=SKU }
      { 122     ;1   ;ActionGroup;
                      Name=Service;
                      CaptionML=ENU=Service;
                      Image=ServiceItem }
      { 183     ;2   ;Action    ;
                      Name="Ser&vice Items";
                      CaptionML=ENU=Ser&vice Items;
                      ToolTipML=ENU="View instances of the item as service items, such as machines that you maintain or repair for customers through service orders. ";
                      ApplicationArea=#Service;
                      RunObject=Page "Service Items";
                      RunPageView=SORTING("Item No.");
                      RunPageLink="Item No."=FIELD("No.");
                      Image=ServiceItem }
      { 17      ;2   ;Action    ;
                      Name=Troubleshooting;
                      AccessByPermission=TableData "Service Header"=R;
                      CaptionML=ENU=Troubleshooting;
                      ToolTipML=ENU=View or edit information about technical problems with a service item.;
                      ApplicationArea=#Service;
                      Image=Troubleshoot;
                      OnAction=VAR
                                 TroubleshootingHeader@1000 : Record "Troubleshooting Header";
                               BEGIN
                                 TroubleshootingHeader.ShowForItem(Rec);
                               END;
                                }
      { 185     ;2   ;Action    ;
                      Name="Troubleshooting Setup";
                      CaptionML=ENU=Troubleshooting Setup;
                      ToolTipML=ENU=View or edit your settings for troubleshooting service items.;
                      ApplicationArea=#Service;
                      RunObject=Page "Troubleshooting Setup";
                      RunPageLink=Type=CONST(Item),
                                  "No."=FIELD("No.");
                      Image=Troubleshoot }
      { 127     ;1   ;ActionGroup;
                      Name=Resources;
                      CaptionML=ENU=Resources;
                      Image=Resource }
      { 187     ;2   ;Action    ;
                      Name="Resource Skills";
                      CaptionML=ENU=Resource Skills;
                      ToolTipML=ENU=View the assignment of skills to resources, items, service item groups, and service items. You can use skill codes to allocate skilled resources to service items or items that need special skills for servicing.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Resource Skills";
                      RunPageLink=Type=CONST(Item),
                                  "No."=FIELD("No.");
                      Image=ResourceSkills }
      { 188     ;2   ;Action    ;
                      Name="Skilled Resources";
                      AccessByPermission=TableData "Service Header"=R;
                      CaptionML=ENU=Skilled Resources;
                      ToolTipML=ENU=View a list of all registered resources with information about whether they have the skills required to service the particular service item group, item, or service item.;
                      ApplicationArea=#Advanced;
                      Image=ResourceSkills;
                      OnAction=VAR
                                 ResourceSkill@1001 : Record "Resource Skill";
                               BEGIN
                                 CLEAR(SkilledResourceList);
                                 SkilledResourceList.Initialize(ResourceSkill.Type::Item,"No.",Description);
                                 SkilledResourceList.RUNMODAL;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Control1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Item;
                CaptionML=ENU=Item;
                GroupType=Group }

    { 2   ;2   ;Field     ;
                Name="No.";
                ToolTipML=ENU=Specifies the number of the involved entry or record, according to the specified number series.;
                ApplicationArea=#All;
                SourceExpr="No.";
                Importance=Additional;
                Visible=NoFieldVisible;
                OnAssistEdit=BEGIN
                               if AssistEdit then
                                 CurrPage.UPDATE;
                             END;

                ImplicitType=Code20 }

    { 4   ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies a description of the item.;
                ApplicationArea=#All;
                SourceExpr=Description;
                ImplicitType=Text50;
                ShowMandatory=TRUE }

    { 20  ;2   ;Field     ;
                Name=Blocked;
                ToolTipML=ENU=Specifies that the related record is blocked from being posted in transactions, for example a customer that is declared insolvent or an item that is placed in quarantine.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Blocked;
                ImplicitType=Boolean }

    { 166 ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU=Specifies if the item card represents a physical item (Inventory) or a service (Service).;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Type;
                OnValidate=BEGIN
                             EnableControls;
                           END;

                ImplicitType=Option }

    { 6   ;2   ;Field     ;
                Name="Base Unit of Measure";
                ToolTipML=ENU=Specifies the base unit used to measure the item, such as piece, box, or pallet. The base unit of measure also serves as the conversion basis for alternate units of measure.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Base Unit of Measure";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE(true);
                             GET("No.");
                           END;

                ImplicitType=Code10;
                ShowMandatory=TRUE }

    { 22  ;2   ;Field     ;
                Name="Last Date Modified";
                ToolTipML=ENU=Specifies when the item card was last modified.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Last Date Modified";
                Importance=Additional;
                ImplicitType=Date }

    { 135 ;2   ;Field     ;
                Name=GTIN;
                ToolTipML=ENU=Specifies the Global Trade Item Number (GTIN) for the item. For example, the GTIN is used with bar codes to track items, and when sending and receiving documents electronically. The GTIN number typically contains a Universal Product Code (UPC), or European Article Number (EAN).;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GTIN;
                Importance=Additional;
                Enabled=InventoryItemEditable;
                ImplicitType=Code14 }

    { 170 ;2   ;Field     ;
                Name="Item Category Code";
                ToolTipML=ENU=Specifies the category that the item belongs to. Item categories also contain any assigned item attributes.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Item Category Code";
                OnValidate=BEGIN
                             CurrPage.ItemAttributesFactbox.PAGE.LoadItemAttributesData("No.");
                             EnableCostingControls;
                           END;

                ImplicitType=Code20 }

    { 168 ;2   ;Field     ;
                Name="Product Group Code";
                ToolTipML=ENU=Specifies a product group code associated with the item category.;
                ApplicationArea=#Advanced;
                SourceExpr="Product Group Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 180 ;2   ;Field     ;
                Name="Service Item Group";
                ToolTipML=ENU=Specifies the code of the service item group that the item belongs to.;
                ApplicationArea=#Service;
                SourceExpr="Service Item Group";
                Importance=Additional;
                ImplicitType=Code10 }

    { 97  ;2   ;Field     ;
                Name="Automatic Ext. Texts";
                ToolTipML=ENU=Specifies that an extended text that you have set up will be added automatically on sales or purchase documents for this item.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Automatic Ext. Texts";
                Importance=Additional;
                ImplicitType=Boolean }

    { 171 ;1   ;Group     ;
                Name=InventoryGrp;
                CaptionML=ENU=Inventory;
                Visible=NOT IsService;
                GroupType=Group }

    { 10  ;2   ;Field     ;
                Name="Shelf No.";
                ToolTipML=ENU=Specifies where to find the item in the warehouse. This is informational only.;
                ApplicationArea=#Advanced;
                SourceExpr="Shelf No.";
                ImplicitType=Code10 }

    { 164 ;2   ;Field     ;
                Name="Created From Nonstock Item";
                ToolTipML=ENU=Specifies that the item was created from a nonstock item.;
                ApplicationArea=#Advanced;
                SourceExpr="Created From Nonstock Item";
                Importance=Additional;
                ImplicitType=Boolean }

    { 12  ;2   ;Field     ;
                Name="Search Description";
                ToolTipML=ENU=Specifies a search description that you use to find the item in lists.;
                ApplicationArea=#Advanced;
                SourceExpr="Search Description";
                Importance=Additional;
                ImplicitType=Code50 }

    { 14  ;2   ;Field     ;
                Name=Inventory;
                DrillDown=false;
                ToolTipML=ENU=Specifies how many units, such as pieces, boxes, or cans, of the item are in inventory.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Inventory;
                Importance=Promoted;
                Visible=IsFoundationEnabled;
                Enabled=InventoryItemEditable;
                HideValue=IsService;
                OnAssistEdit=VAR
                               AdjustInventory@1000 : Page "Adjust Inventory";
                             BEGIN
                               MODIFY(true);
                               COMMIT;

                               AdjustInventory.SetItem("No.");
                               if AdjustInventory.RUNMODAL in [ACTION::LookupOK,ACTION::OK] then
                                 GET("No.");
                               CurrPage.UPDATE
                             END;

                ImplicitType=Decimal }

    { 205 ;2   ;Field     ;
                Name=InventoryNonFoundation;
                DrillDown=false;
                AssistEdit=false;
                CaptionML=ENU=Inventory;
                ToolTipML=ENU=Specifies how many units, such as pieces, boxes, or cans, of the item are in inventory.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Inventory;
                Importance=Promoted;
                Visible=NOT IsFoundationEnabled;
                Enabled=InventoryItemEditable;
                ImplicitType=Decimal }

    { 16  ;2   ;Field     ;
                Name="Qty. on Purch. Order";
                ToolTipML=ENU=Specifies how many units of the item are inbound on purchase orders, meaning listed on outstanding purchase order lines.;
                ApplicationArea=#Advanced;
                SourceExpr="Qty. on Purch. Order";
                ImplicitType=Decimal }

    { 172 ;2   ;Field     ;
                Name="Qty. on Prod. Order";
                ToolTipML=ENU=Specifies how many units of the item are allocated to production orders, meaning listed on outstanding production order lines.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Qty. on Prod. Order";
                ImplicitType=Decimal }

    { 174 ;2   ;Field     ;
                Name="Qty. on Component Lines";
                ToolTipML=ENU=Specifies how many units of the item are allocated as production order components, meaning listed under outstanding production order lines.;
                ApplicationArea=#Advanced;
                SourceExpr="Qty. on Component Lines";
                ImplicitType=Decimal }

    { 18  ;2   ;Field     ;
                Name="Qty. on Sales Order";
                ToolTipML=ENU=Specifies how many units of the item are allocated to sales orders, meaning listed on outstanding sales orders lines.;
                ApplicationArea=#Advanced;
                SourceExpr="Qty. on Sales Order";
                ImplicitType=Decimal }

    { 189 ;2   ;Field     ;
                Name="Qty. on Service Order";
                ToolTipML=ENU=Specifies how many units of the item are allocated to service orders, meaning listed on outstanding service order lines.;
                ApplicationArea=#Service;
                SourceExpr="Qty. on Service Order";
                Importance=Additional;
                ImplicitType=Decimal }

    { 152 ;2   ;Field     ;
                Name="Qty. on Job Order";
                ToolTipML=ENU=Specifies how many units of the item are allocated to jobs, meaning listed on outstanding job planning lines.;
                ApplicationArea=#Advanced;
                SourceExpr="Qty. on Job Order";
                Importance=Additional;
                ImplicitType=Decimal }

    { 7   ;2   ;Field     ;
                Name="Qty. on Assembly Order";
                ToolTipML=ENU=Specifies how many units of the item are allocated to assembly orders, which is how many are listed on outstanding assembly order headers.;
                ApplicationArea=#Assembly;
                SourceExpr="Qty. on Assembly Order";
                Importance=Additional;
                ImplicitType=Decimal }

    { 9   ;2   ;Field     ;
                Name="Qty. on Asm. Component";
                ToolTipML=ENU=Specifies how many units of the item are allocated as assembly components, which means how many are listed on outstanding assembly order lines.;
                ApplicationArea=#Assembly;
                SourceExpr="Qty. on Asm. Component";
                Importance=Additional;
                ImplicitType=Decimal }

    { 113 ;2   ;Field     ;
                Name=StockoutWarningDefaultYes;
                CaptionML=ENU=Stockout Warning;
                ToolTipML=ENU=Specifies if a warning is displayed when you enter a quantity on a sales document that brings the item's inventory below zero.;
                OptionCaptionML=ENU=Default (Yes),No,Yes;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Stockout Warning";
                Visible=ShowStockoutWarningDefaultYes;
                Editable=Type <> Type::Service;
                ImplicitType=Option }

    { 115 ;2   ;Field     ;
                Name=StockoutWarningDefaultNo;
                CaptionML=ENU=Stockout Warning;
                ToolTipML=ENU=Specifies if a warning is displayed when you enter a quantity on a sales document that brings the item's inventory below zero.;
                OptionCaptionML=ENU=Default (No),No,Yes;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Stockout Warning";
                Visible=ShowStockoutWarningDefaultNo;
                ImplicitType=Option }

    { 120 ;2   ;Field     ;
                Name=PreventNegInventoryDefaultYes;
                CaptionML=ENU=Prevent Negative Inventory;
                ToolTipML=ENU=Specifies if you can post a transaction that will bring the item's inventory below zero.;
                OptionCaptionML=ENU=Default (Yes),No,Yes;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Prevent Negative Inventory";
                Importance=Additional;
                Visible=ShowPreventNegInventoryDefaultYes;
                ImplicitType=Option }

    { 130 ;2   ;Field     ;
                Name=PreventNegInventoryDefaultNo;
                CaptionML=ENU=Prevent Negative Inventory;
                ToolTipML=ENU=Specifies if you can post a transaction that will bring the item's inventory below zero.;
                OptionCaptionML=ENU=Default (No),No,Yes;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Prevent Negative Inventory";
                Importance=Additional;
                Visible=ShowPreventNegInventoryDefaultNo;
                ImplicitType=Option }

    { 196 ;2   ;Field     ;
                Name="Net Weight";
                ToolTipML=ENU=Specifies the net weight of the item.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Net Weight";
                Importance=Additional;
                ImplicitType=Decimal }

    { 235 ;2   ;Field     ;
                Name="Gross Weight";
                ToolTipML=ENU=Specifies the gross weight of the item.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Gross Weight";
                Importance=Additional;
                ImplicitType=Decimal }

    { 60  ;2   ;Field     ;
                Name="Unit Volume";
                ToolTipML=ENU=Specifies the volume of one unit of the item.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit Volume";
                ImplicitType=Decimal }

    { 1020001;2;Field     ;
                Name="SAT Item Classification";
                ToolTipML=ENU=Specifies the classification required for reporting to the Mexican tax authorities (SAT);
                ApplicationArea=#Basic,#Suite;
                SourceExpr="SAT Item Classification";
                ImplicitType=Code10 }

    { 169 ;1   ;Group     ;
                Name=Costs & Posting;
                CaptionML=ENU=Costs & Posting;
                GroupType=Group }

    { 167 ;2   ;Group     ;
                Name=Cost Details;
                CaptionML=ENU=Cost Details;
                GroupType=Group }

    { 24  ;3   ;Field     ;
                Name="Costing Method";
                ToolTipML=ENU=Specifies how the item's cost flow is recorded and whether an actual or budgeted value is capitalized and used in the cost calculation.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Costing Method";
                OnValidate=BEGIN
                             EnableCostingControls;
                           END;

                ImplicitType=Option }

    { 28  ;3   ;Field     ;
                Name="Standard Cost";
                ToolTipML=ENU=Specifies the unit cost that is used as an estimation to be adjusted with variances later. It is typically used in assembly and production where costs can vary.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Standard Cost";
                Enabled=StandardCostEnable;
                OnDrillDown=VAR
                              ShowAvgCalcItem@1000 : Codeunit "Show Avg. Calc. - Item";
                            BEGIN
                              ShowAvgCalcItem.DrillDownAvgCostAdjmtPoint(Rec)
                            END;

                ImplicitType=Decimal }

    { 30  ;3   ;Field     ;
                Name="Unit Cost";
                ToolTipML=ENU=Specifies the cost of one unit of the item or resource on the line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit Cost";
                Importance=Promoted;
                Enabled=UnitCostEnable;
                Editable=UnitCostEditable;
                OnDrillDown=VAR
                              ShowAvgCalcItem@1000 : Codeunit "Show Avg. Calc. - Item";
                            BEGIN
                              ShowAvgCalcItem.DrillDownAvgCostAdjmtPoint(Rec)
                            END;

                ImplicitType=Decimal }

    { 155 ;3   ;Field     ;
                Name="Indirect Cost %";
                ToolTipML=ENU=Specifies the percentage of the item's last purchase cost that includes indirect costs, such as freight that is associated with the purchase of the item.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Indirect Cost %";
                Importance=Additional;
                ImplicitType=Decimal }

    { 32  ;3   ;Field     ;
                Name="Last Direct Cost";
                CaptionML=ENU=Last Purchase Cost;
                ToolTipML=ENU=Specifies the most recent direct unit cost of the item.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Last Direct Cost";
                Importance=Additional;
                ImplicitType=Decimal }

    { 207 ;3   ;Field     ;
                Name="Net Invoiced Qty.";
                ToolTipML=ENU=Specifies how many units of the item in inventory have been invoiced.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Net Invoiced Qty.";
                ImplicitType=Decimal }

    { 238 ;3   ;Field     ;
                Name="Cost is Adjusted";
                ToolTipML=ENU=Specifies whether the item's unit cost has been adjusted, either automatically or manually.;
                ApplicationArea=#Advanced;
                SourceExpr="Cost is Adjusted";
                ImplicitType=Boolean }

    { 26  ;3   ;Field     ;
                Name="Cost is Posted to G/L";
                ToolTipML=ENU=Specifies that all the inventory costs for this item have been posted to the general ledger.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Cost is Posted to G/L";
                Importance=Additional;
                ImplicitType=Boolean }

    { 211 ;3   ;Field     ;
                Name=SpecialPurchPricesAndDiscountsTxt;
                CaptionML=ENU=Special Purch. Prices & Discounts;
                ToolTipML=ENU=Specifies special purchase prices and line discounts for the item.;
                ApplicationArea=#Suite;
                SourceExpr=SpecialPurchPricesAndDiscountsTxt;
                Editable=FALSE;
                OnDrillDown=VAR
                              PurchasePrice@1001 : Record "Purchase Price";
                              PurchaseLineDiscount@1002 : Record "Purchase Line Discount";
                              PurchasesPriceAndLineDisc@1000 : Page "Purchases Price and Line Disc.";
                            BEGIN
                              if SpecialPurchPricesAndDiscountsTxt = ViewExistingTxt then begin
                                PurchasesPriceAndLineDisc.LoadItem(Rec);
                                PurchasesPriceAndLineDisc.RUNMODAL;
                                exit;
                              end;

                              case STRMENU(STRSUBSTNO('%1,%2',CreateNewSpecialPriceTxt,CreateNewSpecialDiscountTxt),1,'') of
                                1:
                                  begin
                                    PurchasePrice.SETRANGE("Item No.","No.");
                                    PAGE.RUNMODAL(PAGE::"Purchase Prices",PurchasePrice);
                                  end;
                                2:
                                  begin
                                    PurchaseLineDiscount.SETRANGE("Item No.","No.");
                                    PAGE.RUNMODAL(PAGE::"Purchase Line Discounts",PurchaseLineDiscount);
                                  end;
                              end;

                              UpdateSpecialPricesAndDiscountsTxt;
                            END;

                ImplicitType=Text }

    { 176 ;2   ;Group     ;
                Name=Posting Details;
                CaptionML=ENU=Posting Details;
                GroupType=Group }

    { 95  ;3   ;Field     ;
                Name="Gen. Prod. Posting Group";
                ToolTipML=ENU=Specifies the item's product type to link transactions made for this item with the appropriate general ledger account according to the general posting setup.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Gen. Prod. Posting Group";
                Importance=Promoted;
                ImplicitType=Code20;
                ShowMandatory=TRUE }

    { 66  ;3   ;Field     ;
                Name="VAT Prod. Posting Group";
                ToolTipML=ENU=Specifies the Tax specification of the involved item or resource to link transactions made for this record with the appropriate general ledger account according to the Tax posting setup.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Prod. Posting Group";
                Importance=Additional;
                Visible=UseVAT;
                ImplicitType=Code20;
                ShowMandatory=TRUE }

    { 1020000;3;Field     ;
                Name="Tax Group Code";
                ToolTipML=ENU=Specifies the tax group that is used to calculate and post sales tax.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tax Group Code";
                Importance=Promoted;
                Visible=UseSalesTax;
                ImplicitType=Code20 }

    { 40  ;3   ;Field     ;
                Name="Inventory Posting Group";
                ToolTipML=ENU=Specifies links between business transactions made for the item and an inventory account in the general ledger, to group amounts for that item type.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Inventory Posting Group";
                Importance=Promoted;
                Editable=InventoryItemEditable;
                ImplicitType=Code20;
                ShowMandatory=InventoryItemEditable }

    { 136 ;3   ;Field     ;
                Name="Default Deferral Template Code";
                CaptionML=ENU=Default Deferral Template;
                ToolTipML=ENU=Specifies how revenue or expenses for the item are deferred to other accounting periods by default.;
                ApplicationArea=#Suite;
                SourceExpr="Default Deferral Template Code";
                ImplicitType=Code10 }

    { 177 ;2   ;Group     ;
                Name=ForeignTrade;
                CaptionML=ENU=Foreign Trade;
                GroupType=Group }

    { 62  ;3   ;Field     ;
                Name="Tariff No.";
                ToolTipML=ENU=Specifies a code for the item's tariff number.;
                SourceExpr="Tariff No.";
                ImplicitType=Code20 }

    { 93  ;3   ;Field     ;
                Name="Country/Region of Origin Code";
                ToolTipML=ENU=Specifies a code for the country/region where the item was produced or processed.;
                ApplicationArea=#Advanced;
                SourceExpr="Country/Region of Origin Code";
                Importance=Additional;
                ImplicitType=Code10 }

    { 1905885101;1;Group  ;
                Name=Prices & Sales;
                CaptionML=ENU=Prices & Sales;
                GroupType=Group }

    { 38  ;2   ;Field     ;
                Name="Unit Price";
                ToolTipML=ENU=Specifies the price of one unit of the item or resource. You can enter a price manually or have it entered according to the Price/Profit Calculation field on the related card.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Unit Price";
                Importance=Promoted;
                Editable=PriceEditable;
                ImplicitType=Decimal }

    { 173 ;2   ;Field     ;
                Name=CalcUnitPriceExclVAT;
                ToolTipML=ENU=Specifies the unit price excluding tax.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CalcUnitPriceExclVAT;
                CaptionClass='2,0,' + FIELDCAPTION("Unit Price");
                Importance=Additional;
                ImplicitType=Decimal }

    { 175 ;2   ;Field     ;
                Name="Price Includes VAT";
                ToolTipML=ENU=Specifies if the Unit Price and Line Amount fields on sales document lines for this item should be shown with or without tax.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Price Includes VAT";
                Importance=Additional;
                Visible=UseVAT;
                OnValidate=BEGIN
                             if "Price Includes VAT" = xRec."Price Includes VAT" then
                               exit;
                           END;

                ImplicitType=Boolean }

    { 34  ;2   ;Field     ;
                Name="Price/Profit Calculation";
                ToolTipML=ENU=Specifies the relationship between the Unit Cost, Unit Price, and Profit Percentage fields associated with this item.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Price/Profit Calculation";
                Importance=Additional;
                OnValidate=BEGIN
                             EnableControls;
                           END;

                ImplicitType=Option }

    { 181 ;2   ;Field     ;
                Name="Profit %";
                ToolTipML=ENU=Specifies the profit margin that you want to sell the item at. You can enter a profit percentage manually or have it entered according to the Price/Profit Calculation field;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=2:2;
                SourceExpr="Profit %";
                Editable=ProfitEditable;
                ImplicitType=Decimal }

    { 36  ;2   ;Field     ;
                Name=SpecialPricesAndDiscountsTxt;
                CaptionML=ENU=Special Sales Prices & Discounts;
                ToolTipML=ENU=Specifies special prices and line discounts for the item.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SpecialPricesAndDiscountsTxt;
                Editable=FALSE;
                OnDrillDown=VAR
                              SalesPrice@1001 : Record "Sales Price";
                              SalesLineDiscount@1002 : Record "Sales Line Discount";
                              SalesPriceAndLineDiscounts@1000 : Page "Sales Price and Line Discounts";
                            BEGIN
                              if SpecialPricesAndDiscountsTxt = ViewExistingTxt then begin
                                SalesPriceAndLineDiscounts.InitPage(true);
                                SalesPriceAndLineDiscounts.LoadItem(Rec);
                                SalesPriceAndLineDiscounts.RUNMODAL;
                                exit;
                              end;

                              case STRMENU(STRSUBSTNO('%1,%2',CreateNewSpecialPriceTxt,CreateNewSpecialDiscountTxt),1,'') of
                                1:
                                  begin
                                    SalesPrice.SETRANGE("Item No.","No.");
                                    PAGE.RUNMODAL(PAGE::"Sales Prices",SalesPrice);
                                  end;
                                2:
                                  begin
                                    SalesLineDiscount.SETRANGE(Type,SalesLineDiscount.Type::Item);
                                    SalesLineDiscount.SETRANGE(Code,"No.");
                                    PAGE.RUNMODAL(PAGE::"Sales Line Discounts",SalesLineDiscount);
                                  end;
                              end;

                              UpdateSpecialPricesAndDiscountsTxt;
                            END;

                ImplicitType=Text }

    { 44  ;2   ;Field     ;
                Name="Allow Invoice Disc.";
                ToolTipML=ENU=Specifies if the item should be included in the calculation of an invoice discount on documents where the item is traded.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Allow Invoice Disc.";
                Importance=Additional;
                ImplicitType=Boolean }

    { 48  ;2   ;Field     ;
                Name="Item Disc. Group";
                ToolTipML=ENU=Specifies an item group code that can be used as a criterion to grant a discount when the item is sold to a certain customer.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Item Disc. Group";
                Importance=Additional;
                ImplicitType=Code20 }

    { 73  ;2   ;Field     ;
                Name="Sales Unit of Measure";
                ToolTipML=ENU=Specifies the unit of measure code used when you sell the item.;
                ApplicationArea=#Advanced;
                SourceExpr="Sales Unit of Measure";
                ImplicitType=Code10 }

    { 19  ;2   ;Field     ;
                Name="Application Wksh. User ID";
                ToolTipML=ENU=Specifies the ID of a user who is working in the Application Worksheet window.;
                ApplicationArea=#Advanced;
                SourceExpr="Application Wksh. User ID";
                Importance=Additional;
                Visible=FALSE;
                ImplicitType=Code128 }

    { 151 ;2   ;Field     ;
                Name="VAT Bus. Posting Gr. (Price)";
                ToolTipML=ENU=Specifies the Tax business posting group for customers for whom you want the sales price including Tax to apply.;
                ApplicationArea=#Advanced;
                SourceExpr="VAT Bus. Posting Gr. (Price)";
                ImplicitType=Code20 }

    { 1904731401;1;Group  ;
                Name=Replenishment;
                CaptionML=ENU=Replenishment }

    { 133 ;2   ;Field     ;
                Name="Replenishment System";
                ToolTipML=ENU=Specifies the type of supply order created by the planning system when the item needs to be replenished.;
                ApplicationArea=#Assembly,#Planning;
                SourceExpr="Replenishment System";
                Importance=Promoted;
                ImplicitType=Option }

    { 54  ;2   ;Field     ;
                Name="Lead Time Calculation";
                ToolTipML=ENU=Specifies a date formula for the amount of time it takes to replenish the item.;
                ApplicationArea=#Assembly,#Planning;
                SourceExpr="Lead Time Calculation";
                ImplicitType=DateFormula }

    { 229 ;2   ;Group     ;
                Name=Purchase;
                CaptionML=ENU=Purchase }

    { 50  ;3   ;Field     ;
                Name="Vendor No.";
                ToolTipML=ENU=Specifies the vendor code of who supplies this item by default.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor No.";
                ImplicitType=Code20 }

    { 52  ;3   ;Field     ;
                Name="Vendor Item No.";
                ToolTipML=ENU=Specifies the number that the vendor uses for this item.;
                ApplicationArea=#Planning;
                SourceExpr="Vendor Item No.";
                ImplicitType=Text20 }

    { 99  ;3   ;Field     ;
                Name="Purch. Unit of Measure";
                ToolTipML=ENU=Specifies the unit of measure code used when you purchase the item.;
                ApplicationArea=#Planning;
                SourceExpr="Purch. Unit of Measure";
                ImplicitType=Code10 }

    { 230 ;2   ;Group     ;
                Name=Production;
                CaptionML=ENU=Production }

    { 227 ;3   ;Field     ;
                Name="Manufacturing Policy";
                ToolTipML=ENU=Specifies if additional orders for any related components are calculated.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Manufacturing Policy";
                ImplicitType=Option }

    { 137 ;3   ;Field     ;
                Name="Routing No.";
                ToolTipML=ENU=Specifies the number of the production routing that the item is used in.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Routing No.";
                ImplicitType=Code20 }

    { 139 ;3   ;Field     ;
                Name="Production BOM No.";
                ToolTipML=ENU=Specifies the number of the production BOM that the item represents.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Production BOM No.";
                ImplicitType=Code20 }

    { 141 ;3   ;Field     ;
                Name="Rounding Precision";
                ToolTipML=ENU=Specifies how calculated consumption quantities are rounded when entered on consumption journal lines.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Rounding Precision";
                ImplicitType=Decimal }

    { 143 ;3   ;Field     ;
                Name="Flushing Method";
                ToolTipML=ENU=Specifies how consumption of the item (component) is calculated and handled in production processes. Manual: Enter and post consumption in the consumption journal manually. Forward: Automatically posts consumption according to the production order component lines when the first operation starts. Backward: Automatically calculates and posts consumption according to the production order component lines when the production order is finished. Pick + Forward / Pick + Backward: Variations with warehousing.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Flushing Method";
                ImplicitType=Option }

    { 153 ;3   ;Field     ;
                Name="Overhead Rate";
                ToolTipML=ENU=Specifies the item's indirect cost as an absolute amount.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Overhead Rate";
                Importance=Additional;
                ImplicitType=Decimal }

    { 118 ;3   ;Field     ;
                Name="Scrap %";
                ToolTipML=ENU=Specifies the percentage of the item that you expect to be scrapped in the production process.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Scrap %";
                ImplicitType=Decimal }

    { 145 ;3   ;Field     ;
                Name="Lot Size";
                ToolTipML=ENU=Specifies how many units of the item are processed in one production operation by default.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Lot Size";
                ImplicitType=Decimal }

    { 13  ;2   ;Group     ;
                Name=Assembly;
                CaptionML=ENU=Assembly;
                GroupType=Group }

    { 15  ;3   ;Field     ;
                Name="Assembly Policy";
                ToolTipML=ENU=Specifies which default order flow is used to supply this assembly item.;
                ApplicationArea=#Assembly;
                SourceExpr="Assembly Policy";
                ImplicitType=Option }

    { 8   ;3   ;Field     ;
                Name="Assembly BOM";
                AccessByPermission=TableData "BOM Component"=R;
                ToolTipML=ENU=Specifies if the item is an assembly BOM.;
                ApplicationArea=#Assembly;
                SourceExpr="Assembly BOM";
                OnDrillDown=VAR
                              BOMComponent@1000 : Record "BOM Component";
                            BEGIN
                              COMMIT;
                              BOMComponent.SETRANGE("Parent Item No.","No.");
                              PAGE.RUN(PAGE::"Assembly BOM",BOMComponent);
                              CurrPage.UPDATE;
                            END;

                ImplicitType=Boolean }

    { 1901343701;1;Group  ;
                Name=Planning;
                CaptionML=ENU=Planning }

    { 125 ;2   ;Field     ;
                Name="Reordering Policy";
                ToolTipML=ENU=Specifies the reordering policy.;
                ApplicationArea=#Planning;
                SourceExpr="Reordering Policy";
                Importance=Promoted;
                OnValidate=BEGIN
                             EnablePlanningControls
                           END;

                ImplicitType=Option }

    { 59  ;2   ;Field     ;
                Name=Reserve;
                ToolTipML=ENU=Specifies whether the program will allow reservations to be made for this item.;
                ApplicationArea=#Reservation;
                SourceExpr=Reserve;
                Importance=Additional;
                ImplicitType=Option }

    { 58  ;2   ;Field     ;
                Name="Order Tracking Policy";
                ToolTipML=ENU=Specifies if and how order tracking entries are created and maintained between supply and its corresponding demand.;
                ApplicationArea=#Planning;
                SourceExpr="Order Tracking Policy";
                Importance=Promoted;
                ImplicitType=Option }

    { 57  ;2   ;Field     ;
                Name="Stockkeeping Unit Exists";
                ToolTipML=ENU=Specifies that a stockkeeping unit exists for this item.;
                ApplicationArea=#Planning;
                SourceExpr="Stockkeeping Unit Exists";
                ImplicitType=Boolean }

    { 56  ;2   ;Field     ;
                Name="Dampener Period";
                ToolTipML=ENU=Specifies a period of time during which you do not want the planning system to propose to reschedule existing supply orders.;
                ApplicationArea=#Planning;
                SourceExpr="Dampener Period";
                Importance=Additional;
                Enabled=DampenerPeriodEnable;
                ImplicitType=DateFormula }

    { 55  ;2   ;Field     ;
                Name="Dampener Quantity";
                ToolTipML=ENU=Specifies a dampener quantity to block insignificant change suggestions for an existing supply, if the change quantity is lower than the dampener quantity.;
                ApplicationArea=#Planning;
                SourceExpr="Dampener Quantity";
                Importance=Additional;
                Enabled=DampenerQtyEnable;
                ImplicitType=Decimal }

    { 53  ;2   ;Field     ;
                Name=Critical;
                ToolTipML=ENU=Specifies if the item is included in availability calculations to promise a shipment date for its parent item.;
                ApplicationArea=#OrderPromising;
                SourceExpr=Critical;
                ImplicitType=Boolean }

    { 51  ;2   ;Field     ;
                Name="Safety Lead Time";
                ToolTipML=ENU=Specifies a date formula to indicate a safety lead time that can be used as a buffer period for production and other delays.;
                ApplicationArea=#Planning;
                SourceExpr="Safety Lead Time";
                Enabled=SafetyLeadTimeEnable;
                ImplicitType=DateFormula }

    { 49  ;2   ;Field     ;
                Name="Safety Stock Quantity";
                ToolTipML=ENU=Specifies a quantity of stock to have in inventory to protect against supply-and-demand fluctuations during replenishment lead time.;
                ApplicationArea=#Planning;
                SourceExpr="Safety Stock Quantity";
                Enabled=SafetyStockQtyEnable;
                ImplicitType=Decimal }

    { 43  ;2   ;Group     ;
                Name="Lot-for-Lot Parameters";
                CaptionML=ENU=Lot-for-Lot Parameters;
                GroupType=Group }

    { 45  ;3   ;Field     ;
                Name="Include Inventory";
                ToolTipML=ENU=Specifies that the inventory quantity is included in the projected available balance when replenishment orders are calculated.;
                ApplicationArea=#Planning;
                SourceExpr="Include Inventory";
                Enabled=IncludeInventoryEnable;
                OnValidate=BEGIN
                             EnablePlanningControls
                           END;

                ImplicitType=Boolean }

    { 27  ;3   ;Field     ;
                Name="Lot Accumulation Period";
                ToolTipML=ENU=Specifies a period in which multiple demands are accumulated into one supply order when you use the Lot-for-Lot reordering policy.;
                ApplicationArea=#Planning;
                SourceExpr="Lot Accumulation Period";
                Enabled=LotAccumulationPeriodEnable;
                ImplicitType=DateFormula }

    { 41  ;3   ;Field     ;
                Name="Rescheduling Period";
                ToolTipML=ENU=Specifies a period within which any suggestion to change a supply date always consists of a Reschedule action and never a Cancel + New action.;
                ApplicationArea=#Planning;
                SourceExpr="Rescheduling Period";
                Enabled=ReschedulingPeriodEnable;
                ImplicitType=DateFormula }

    { 39  ;2   ;Group     ;
                Name="Reorder-Point Parameters";
                CaptionML=ENU=Reorder-Point Parameters;
                GroupType=Group }

    { 64  ;3   ;Group     ;
                Name=Control64;
                GroupType=Group }

    { 37  ;4   ;Field     ;
                Name="Reorder Point";
                ToolTipML=ENU=Specifies a stock quantity that sets the inventory below the level that you must replenish the item.;
                ApplicationArea=#Planning;
                SourceExpr="Reorder Point";
                Enabled=ReorderPointEnable;
                ImplicitType=Decimal }

    { 35  ;4   ;Field     ;
                Name="Reorder Quantity";
                ToolTipML=ENU=Specifies a standard lot size quantity to be used for all order proposals.;
                ApplicationArea=#Planning;
                SourceExpr="Reorder Quantity";
                Enabled=ReorderQtyEnable;
                ImplicitType=Decimal }

    { 33  ;4   ;Field     ;
                Name="Maximum Inventory";
                ToolTipML=ENU=Specifies a quantity that you want to use as a maximum inventory level.;
                ApplicationArea=#Planning;
                SourceExpr="Maximum Inventory";
                Enabled=MaximumInventoryEnable;
                ImplicitType=Decimal }

    { 31  ;3   ;Field     ;
                Name="Overflow Level";
                ToolTipML=ENU=Specifies a quantity you allow projected inventory to exceed the reorder point, before the system suggests to decrease supply orders.;
                ApplicationArea=#Planning;
                SourceExpr="Overflow Level";
                Importance=Additional;
                Enabled=OverflowLevelEnable;
                ImplicitType=Decimal }

    { 29  ;3   ;Field     ;
                Name="Time Bucket";
                ToolTipML=ENU=Specifies a time period that defines the recurring planning horizon used with Fixed Reorder Qty. or Maximum Qty. reordering policies.;
                ApplicationArea=#Planning;
                SourceExpr="Time Bucket";
                Importance=Additional;
                Enabled=TimeBucketEnable;
                ImplicitType=DateFormula }

    { 63  ;2   ;Group     ;
                Name="Order Modifiers";
                CaptionML=ENU=Order Modifiers;
                GroupType=Group }

    { 61  ;3   ;Group     ;
                Name=Control61;
                GroupType=Group }

    { 25  ;4   ;Field     ;
                Name="Minimum Order Quantity";
                ToolTipML=ENU=Specifies a minimum allowable quantity for an item order proposal.;
                ApplicationArea=#Planning;
                SourceExpr="Minimum Order Quantity";
                Enabled=MinimumOrderQtyEnable;
                ImplicitType=Decimal }

    { 23  ;4   ;Field     ;
                Name="Maximum Order Quantity";
                ToolTipML=ENU=Specifies a maximum allowable quantity for an item order proposal.;
                ApplicationArea=#Planning;
                SourceExpr="Maximum Order Quantity";
                Enabled=MaximumOrderQtyEnable;
                ImplicitType=Decimal }

    { 21  ;4   ;Field     ;
                Name="Order Multiple";
                ToolTipML=ENU=Specifies a parameter used by the planning system to modify the quantity of planned supply orders.;
                ApplicationArea=#Planning;
                SourceExpr="Order Multiple";
                Enabled=OrderMultipleEnable;
                ImplicitType=Decimal }

    { 1904830201;1;Group  ;
                Name="Item Tracking";
                CaptionML=ENU=Item Tracking }

    { 225 ;2   ;Field     ;
                Name="Item Tracking Code";
                ToolTipML=ENU=Specifies how serial or lot numbers assigned to the item are tracked in the supply chain.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Item Tracking Code";
                Importance=Promoted;
                ImplicitType=Code10 }

    { 210 ;2   ;Field     ;
                Name="Serial Nos.";
                ToolTipML=ENU=Specifies a number series code to assign consecutive serial numbers to items produced.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Serial Nos.";
                ImplicitType=Code20 }

    { 72  ;2   ;Field     ;
                Name="Lot Nos.";
                ToolTipML=ENU=Specifies the number series code that will be used when assigning lot numbers.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Lot Nos.";
                ImplicitType=Code20 }

    { 71  ;2   ;Field     ;
                Name="Expiration Calculation";
                ToolTipML=ENU=Specifies the formula for calculating the expiration date on the item tracking line.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Expiration Calculation";
                ImplicitType=DateFormula }

    { 1907509201;1;Group  ;
                Name=Warehouse;
                CaptionML=ENU=Warehouse }

    { 215 ;2   ;Field     ;
                Name="Warehouse Class Code";
                ToolTipML=ENU=Specifies the warehouse class code for the item.;
                ApplicationArea=#Warehouse;
                SourceExpr="Warehouse Class Code";
                ImplicitType=Code10 }

    { 213 ;2   ;Field     ;
                Name="Special Equipment Code";
                ToolTipML=ENU=Specifies the code of the equipment that warehouse employees must use when handling the item.;
                ApplicationArea=#Warehouse;
                SourceExpr="Special Equipment Code";
                Importance=Additional;
                ImplicitType=Code10 }

    { 206 ;2   ;Field     ;
                Name="Put-away Template Code";
                ToolTipML=ENU=Specifies the code of the put-away template by which the program determines the most appropriate zone and bin for storage of the item after receipt.;
                ApplicationArea=#Warehouse;
                SourceExpr="Put-away Template Code";
                ImplicitType=Code10 }

    { 204 ;2   ;Field     ;
                Name="Put-away Unit of Measure Code";
                ToolTipML=ENU=Specifies the code of the item unit of measure in which the program will put the item away.;
                ApplicationArea=#Warehouse;
                SourceExpr="Put-away Unit of Measure Code";
                Importance=Promoted;
                ImplicitType=Code10 }

    { 202 ;2   ;Field     ;
                Name="Phys Invt Counting Period Code";
                ToolTipML=ENU=Specifies the code of the counting period that indicates how often you want to count the item in a physical inventory.;
                ApplicationArea=#Warehouse;
                SourceExpr="Phys Invt Counting Period Code";
                Importance=Promoted;
                ImplicitType=Code10 }

    { 200 ;2   ;Field     ;
                Name="Last Phys. Invt. Date";
                ToolTipML=ENU=Specifies the date on which you last posted the results of a physical inventory for the item to the item ledger.;
                ApplicationArea=#Warehouse;
                SourceExpr="Last Phys. Invt. Date";
                ImplicitType=Date }

    { 198 ;2   ;Field     ;
                Name="Last Counting Period Update";
                ToolTipML=ENU=Specifies the last date on which you calculated the counting period. It is updated when you use the function Calculate Counting Period.;
                ApplicationArea=#Warehouse;
                SourceExpr="Last Counting Period Update";
                ImplicitType=Date }

    { 194 ;2   ;Field     ;
                Name="Next Counting Start Date";
                ToolTipML=ENU=Specifies the starting date of the next counting period.;
                ApplicationArea=#Warehouse;
                SourceExpr="Next Counting Start Date";
                ImplicitType=Date }

    { 131 ;2   ;Field     ;
                Name="Next Counting End Date";
                ToolTipML=ENU=Specifies the ending date of the next counting period.;
                ApplicationArea=#Warehouse;
                SourceExpr="Next Counting End Date";
                ImplicitType=Date }

    { 192 ;2   ;Field     ;
                Name="Identifier Code";
                ToolTipML=ENU=Specifies a unique code for the item in terms that are useful for automatic data capture.;
                ApplicationArea=#Advanced;
                SourceExpr="Identifier Code";
                Importance=Additional;
                ImplicitType=Code20 }

    { 208 ;2   ;Field     ;
                Name="Use Cross-Docking";
                ToolTipML=ENU=Specifies if this item can be cross-docked.;
                ApplicationArea=#Warehouse;
                SourceExpr="Use Cross-Docking";
                Importance=Additional;
                ImplicitType=Boolean }

    { 1900000007;0;Container;
                Name=Control1900000007;
                ContainerType=FactBoxArea }

    { 109 ;1   ;Part      ;
                Name=ItemPicture;
                CaptionML=ENU=Picture;
                ApplicationArea=#All;
                SubPageLink="No."=FIELD("No."),
                            "Date Filter"=FIELD("Date Filter"),
                            "Global Dimension 1 Filter"=FIELD("Global Dimension 1 Filter"),
                            "Global Dimension 2 Filter"=FIELD("Global Dimension 2 Filter"),
                            "Location Filter"=FIELD("Location Filter"),
                            "Drop Shipment Filter"=FIELD("Drop Shipment Filter"),
                            "Variant Filter"=FIELD("Variant Filter");
                PagePartID="Item Picture";
                PartType=Page }

    { 1901275107;1;Part   ;
                Name=Attached Documents;
                CaptionML=ENU=Attachments;
                ApplicationArea=#All;
                SubPageLink="Table ID"=CONST(27),
                            "No."=FIELD("No.");
                PagePartID="Document Attachment Factbox";
                PartType=Page }

    { 201 ;1   ;Part      ;
                Name=ItemAttributesFactbox;
                ApplicationArea=#Basic,#Suite;
                PagePartID="Item Attributes Factbox";
                PartType=Page }

    { 132 ;1   ;Part      ;
                Name=Control132;
                ApplicationArea=#All;
                SubPageLink="Source Type"=CONST(Item),
                            "Source No."=FIELD("No.");
                PagePartID="Social Listening FactBox";
                Visible=SocialListeningVisible;
                PartType=Page }

    { 134 ;1   ;Part      ;
                Name=Control134;
                ApplicationArea=#All;
                SubPageLink="Source Type"=CONST(Item),
                            "Source No."=FIELD("No.");
                PagePartID="Social Listening Setup FactBox";
                Visible=SocialListeningSetupVisible;
                PartType=Page;
                UpdatePropagation=Both }

    { 162 ;1   ;Part      ;
                Name=WorkflowStatus;
                ApplicationArea=#Suite;
                PagePartID="Workflow Status FactBox";
                Visible=ShowWorkflowStatus;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=false }

    { 1900383207;1;Part   ;
                Name=Control1900383207;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Control1905767507;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ApplicationAreaMgmtFacade@1027 : Codeunit "Application Area Mgmt. Facade";
      CalculateStdCost@1005 : Codeunit "Calculate Standard Cost";
      CRMIntegrationManagement@1030 : Codeunit "CRM Integration Management";
      ItemAvailFormsMgt@1000 : Codeunit "Item Availability Forms Mgt";
      ApprovalsMgmt@1013 : Codeunit "Approvals Mgmt.";
      SkilledResourceList@1001 : Page "Skilled Resource List";
      IsFoundationEnabled@1028 : Boolean;
      ShowStockoutWarningDefaultYes@1006 : Boolean;
      ShowStockoutWarningDefaultNo@1004 : Boolean;
      ShowPreventNegInventoryDefaultYes@1003 : Boolean;
      ShowPreventNegInventoryDefaultNo@1002 : Boolean;
      TimeBucketEnable@8576 : Boolean INDATASET;
      SafetyLeadTimeEnable@3464 : Boolean INDATASET;
      SafetyStockQtyEnable@1045 : Boolean INDATASET;
      ReorderPointEnable@1559 : Boolean INDATASET;
      ReorderQtyEnable@7337 : Boolean INDATASET;
      MaximumInventoryEnable@3237 : Boolean INDATASET;
      MinimumOrderQtyEnable@5662 : Boolean INDATASET;
      MaximumOrderQtyEnable@1780 : Boolean INDATASET;
      OrderMultipleEnable@8166 : Boolean INDATASET;
      IncludeInventoryEnable@5357 : Boolean INDATASET;
      ReschedulingPeriodEnable@3577 : Boolean INDATASET;
      LotAccumulationPeriodEnable@3181 : Boolean INDATASET;
      DampenerPeriodEnable@9019 : Boolean INDATASET;
      DampenerQtyEnable@5625 : Boolean INDATASET;
      OverflowLevelEnable@7090 : Boolean INDATASET;
      StandardCostEnable@1224 : Boolean INDATASET;
      UnitCostEnable@8240 : Boolean INDATASET;
      SocialListeningSetupVisible@1008 : Boolean INDATASET;
      SocialListeningVisible@1007 : Boolean INDATASET;
      CRMIntegrationEnabled@1010 : Boolean;
      CRMIsCoupledToRecord@1009 : Boolean;
      OpenApprovalEntriesExistCurrUser@1012 : Boolean;
      OpenApprovalEntriesExist@1011 : Boolean;
      ShowWorkflowStatus@1014 : Boolean;
      InventoryItemEditable@1015 : Boolean INDATASET;
      UnitCostEditable@1022 : Boolean INDATASET;
      ProfitEditable@1017 : Boolean;
      PriceEditable@1018 : Boolean;
      UseSalesTax@1020002 : Boolean;
      UseVAT@1020001 : Boolean;
      SpecialPricesAndDiscountsTxt@1019 : Text;
      CreateNewTxt@1020 : TextConst 'ENU=Create New...';
      ViewExistingTxt@1021 : TextConst 'ENU=View Existing Prices and Discounts...';
      CreateNewSpecialPriceTxt@1023 : TextConst 'ENU=Create New Special Price...';
      CreateNewSpecialDiscountTxt@1024 : TextConst 'ENU=Create New Special Discount...';
      SpecialPurchPricesAndDiscountsTxt@1033 : Text;
      EnabledApprovalWorkflowsExist@1025 : Boolean;
      EventFilter@1026 : Text;
      NoFieldVisible@1016 : Boolean;
      NewMode@1029 : Boolean;
      IsService@1031 : Boolean;
      CanRequestApprovalForFlow@1032 : Boolean;
      CanCancelApprovalForFlow@1034 : Boolean;
      IsSaaS@1035 : Boolean;

    LOCAL PROCEDURE EnableControls@6();
    VAR
      ItemLedgerEntry@1000 : Record "Item Ledger Entry";
      CRMIntegrationManagement@1001 : Codeunit "CRM Integration Management";
    BEGIN
      InventoryItemEditable := Type = Type::Inventory;
      IsService := (Type = Type::Service);

      if Type = Type::Inventory then begin
        ItemLedgerEntry.SETRANGE("Item No.","No.");
        UnitCostEditable := ItemLedgerEntry.ISEMPTY;
      end else
        UnitCostEditable := true;

      ProfitEditable := "Price/Profit Calculation" <> "Price/Profit Calculation"::"Profit=Price-Cost";
      PriceEditable := "Price/Profit Calculation" <> "Price/Profit Calculation"::"Price=Cost+Profit";

      EnablePlanningControls;
      EnableCostingControls;

      EnableShowStockOutWarning;

      SetSocialListeningFactboxVisibility;
      EnableShowShowEnforcePositivInventory;
      CRMIntegrationEnabled := CRMIntegrationManagement.IsCRMIntegrationEnabled;

      UpdateSpecialPricesAndDiscountsTxt;
    END;

    LOCAL PROCEDURE OnNewRec@16();
    VAR
      DocumentNoVisibility@1002 : Codeunit DocumentNoVisibility;
    BEGIN
      if GUIALLOWED then begin
        EnableControls;
        if "No." = '' then
          if DocumentNoVisibility.ItemNoSeriesIsDefault then
            NewMode := true;
      end;
    END;

    LOCAL PROCEDURE EnableShowStockOutWarning@4();
    VAR
      SalesSetup@1000 : Record "Sales & Receivables Setup";
    BEGIN
      if Type = Type::Service then
        "Stockout Warning" := "Stockout Warning"::No;

      SalesSetup.GET;
      ShowStockoutWarningDefaultYes := SalesSetup."Stockout Warning";
      ShowStockoutWarningDefaultNo := not ShowStockoutWarningDefaultYes;

      EnableShowShowEnforcePositivInventory;
    END;

    LOCAL PROCEDURE InsertItemUnitOfMeasure@8();
    VAR
      ItemUnitOfMeasure@1000 : Record "Item Unit of Measure";
    BEGIN
      if "Base Unit of Measure" <> '' then begin
        ItemUnitOfMeasure.INIT;
        ItemUnitOfMeasure."Item No." := "No.";
        ItemUnitOfMeasure.VALIDATE(Code,"Base Unit of Measure");
        ItemUnitOfMeasure."Qty. per Unit of Measure" := 1;
        ItemUnitOfMeasure.INSERT;
      end;
    END;

    LOCAL PROCEDURE EnableShowShowEnforcePositivInventory@2();
    VAR
      InventorySetup@1000 : Record "Inventory Setup";
    BEGIN
      InventorySetup.GET;
      ShowPreventNegInventoryDefaultYes := InventorySetup."Prevent Negative Inventory";
      ShowPreventNegInventoryDefaultNo := not ShowPreventNegInventoryDefaultYes;
    END;

    LOCAL PROCEDURE EnablePlanningControls@1();
    VAR
      PlanningGetParam@1000 : Codeunit "Planning-Get Parameters";
      TimeBucketEnabled@1010 : Boolean;
      SafetyLeadTimeEnabled@1009 : Boolean;
      SafetyStockQtyEnabled@1008 : Boolean;
      ReorderPointEnabled@1007 : Boolean;
      ReorderQtyEnabled@1006 : Boolean;
      MaximumInventoryEnabled@1005 : Boolean;
      MinimumOrderQtyEnabled@1004 : Boolean;
      MaximumOrderQtyEnabled@1003 : Boolean;
      OrderMultipleEnabled@1002 : Boolean;
      IncludeInventoryEnabled@1001 : Boolean;
      ReschedulingPeriodEnabled@1015 : Boolean;
      LotAccumulationPeriodEnabled@1014 : Boolean;
      DampenerPeriodEnabled@1013 : Boolean;
      DampenerQtyEnabled@1012 : Boolean;
      OverflowLevelEnabled@1011 : Boolean;
    BEGIN
      PlanningGetParam.SetUpPlanningControls("Reordering Policy","Include Inventory",
        TimeBucketEnabled,SafetyLeadTimeEnabled,SafetyStockQtyEnabled,
        ReorderPointEnabled,ReorderQtyEnabled,MaximumInventoryEnabled,
        MinimumOrderQtyEnabled,MaximumOrderQtyEnabled,OrderMultipleEnabled,IncludeInventoryEnabled,
        ReschedulingPeriodEnabled,LotAccumulationPeriodEnabled,
        DampenerPeriodEnabled,DampenerQtyEnabled,OverflowLevelEnabled);

      TimeBucketEnable := TimeBucketEnabled;
      SafetyLeadTimeEnable := SafetyLeadTimeEnabled;
      SafetyStockQtyEnable := SafetyStockQtyEnabled;
      ReorderPointEnable := ReorderPointEnabled;
      ReorderQtyEnable := ReorderQtyEnabled;
      MaximumInventoryEnable := MaximumInventoryEnabled;
      MinimumOrderQtyEnable := MinimumOrderQtyEnabled;
      MaximumOrderQtyEnable := MaximumOrderQtyEnabled;
      OrderMultipleEnable := OrderMultipleEnabled;
      IncludeInventoryEnable := IncludeInventoryEnabled;
      ReschedulingPeriodEnable := ReschedulingPeriodEnabled;
      LotAccumulationPeriodEnable := LotAccumulationPeriodEnabled;
      DampenerPeriodEnable := DampenerPeriodEnabled;
      DampenerQtyEnable := DampenerQtyEnabled;
      OverflowLevelEnable := OverflowLevelEnabled;
    END;

    LOCAL PROCEDURE EnableCostingControls@3();
    BEGIN
      StandardCostEnable := "Costing Method" = "Costing Method"::Standard;
      UnitCostEnable := "Costing Method" <> "Costing Method"::Standard;
    END;

    LOCAL PROCEDURE SetSocialListeningFactboxVisibility@5();
    VAR
      SocialListeningMgt@1000 : Codeunit "Social Listening Management";
    BEGIN
      SocialListeningMgt.GetItemFactboxVisibility(Rec,SocialListeningSetupVisible,SocialListeningVisible);
    END;

    LOCAL PROCEDURE InitControls@12();
    BEGIN
      UnitCostEnable := true;
      StandardCostEnable := true;
      OverflowLevelEnable := true;
      DampenerQtyEnable := true;
      DampenerPeriodEnable := true;
      LotAccumulationPeriodEnable := true;
      ReschedulingPeriodEnable := true;
      IncludeInventoryEnable := true;
      OrderMultipleEnable := true;
      MaximumOrderQtyEnable := true;
      MinimumOrderQtyEnable := true;
      MaximumInventoryEnable := true;
      ReorderQtyEnable := true;
      ReorderPointEnable := true;
      SafetyStockQtyEnable := true;
      SafetyLeadTimeEnable := true;
      TimeBucketEnable := true;

      InventoryItemEditable := Type = Type::Inventory;
      "Costing Method" := "Costing Method"::FIFO;
      UnitCostEditable := true;
    END;

    LOCAL PROCEDURE UpdateSpecialPricesAndDiscountsTxt@7();
    VAR
      TempSalesPriceAndLineDiscBuff@1000 : TEMPORARY Record "Sales Price and Line Disc Buff";
      TempPurchPriceLineDiscBuff@1001 : TEMPORARY Record "Purch. Price Line Disc. Buff.";
    BEGIN
      SpecialPricesAndDiscountsTxt := CreateNewTxt;
      if TempSalesPriceAndLineDiscBuff.ItemHasLines(Rec) then
        SpecialPricesAndDiscountsTxt := ViewExistingTxt;

      SpecialPurchPricesAndDiscountsTxt := CreateNewTxt;
      if TempPurchPriceLineDiscBuff.ItemHasLines(Rec) then
        SpecialPurchPricesAndDiscountsTxt := ViewExistingTxt;
    END;

    LOCAL PROCEDURE CreateItemFromTemplate@11();
    VAR
      ItemTemplate@1001 : Record "Item Template";
      Item@1000 : Record Item;
      InventorySetup@1002 : Record "Inventory Setup";
    BEGIN
      if NewMode then begin
        if ItemTemplate.NewItemFromTemplate(Item) then begin
          COPY(Item);
          CurrPage.UPDATE;
        end;

        if ApplicationAreaMgmtFacade.IsFoundationEnabled then
          if (Item."No." = '') and InventorySetup.GET then
            VALIDATE("Costing Method",InventorySetup."Default Costing Method");

        NewMode := false;
      end;
    END;

    LOCAL PROCEDURE SetNoFieldVisible@13();
    VAR
      DocumentNoVisibility@1000 : Codeunit DocumentNoVisibility;
    BEGIN
      NoFieldVisible := DocumentNoVisibility.ItemNoIsVisible;
    END;

    BEGIN
    END.
  }
}

