OBJECT Table 5332 Coupling Record Buffer
{
  OBJECT-PROPERTIES
  {
    Date=20180425D;
    Time=160142.723T;
    Modified=true;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Coupling Record Buffer;
  }
  FIELDS
  {
    { 1   ;   ;NAV Name            ;Text250       ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=NAV Name }
    { 2   ;   ;CRM Name            ;Text250       ;OnValidate=VAR
                                                                CRMIntegrationRecord@1001 : Record "CRM Integration Record";
                                                              BEGIN
                                                                if FindCRMRecordByName("CRM Name") then begin
                                                                  if "Saved CRM ID" <> "CRM ID" then
                                                                    CRMIntegrationRecord.AssertRecordIDCanBeCoupled("NAV Record ID","CRM ID");
                                                                  CalcCRMName;
                                                                end else
                                                                  ERROR(NoSuchCRMRecordErr,"CRM Name",CRMProductName.SHORT);
                                                              END;

                                                   OnLookup=VAR
                                                              CRMIntegrationRecord@1001 : Record "CRM Integration Record";
                                                            BEGIN
                                                              if LookupCRMTables.Lookup("CRM Table ID","NAV Table ID","Saved CRM ID","CRM ID") then begin
                                                                if "Saved CRM ID" <> "CRM ID" then
                                                                  CRMIntegrationRecord.AssertRecordIDCanBeCoupled("NAV Record ID","CRM ID");
                                                                CalcCRMName;
                                                              end;
                                                            END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=ENU=CRM Name }
    { 3   ;   ;NAV Table ID        ;Integer       ;OnValidate=VAR
                                                                IntegrationTableMapping@1000 : Record "Integration Table Mapping";
                                                              BEGIN
                                                                IntegrationTableMapping.SETRANGE("Table ID","NAV Table ID");
                                                                IntegrationTableMapping.SETRANGE("Delete After Synchronization",false);
                                                                if IntegrationTableMapping.FINDFIRST then
                                                                  "CRM Table Name" := IntegrationTableMapping.Name
                                                                else
                                                                  "CRM Table Name" := '';
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=ENU=NAV Table ID }
    { 4   ;   ;CRM Table ID        ;Integer       ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=CRM Table ID }
    { 5   ;   ;Sync Action         ;Option        ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Sync Action;
                                                   OptionCaptionML=ENU=Do Not Synchronize,To Integration Table,From Integration Table;
                                                   OptionString="Do Not Synchronize","To Integration Table","From Integration Table" }
    { 8   ;   ;NAV Record ID       ;RecordID      ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=NAV Record ID }
    { 9   ;   ;CRM ID              ;GUID          ;OnValidate=BEGIN
                                                                CalcCRMName;
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=ENU=CRM ID }
    { 10  ;   ;Create New          ;Boolean       ;OnValidate=VAR
                                                                NullGUID@1000 : GUID;
                                                              BEGIN
                                                                if "Create New" then begin
                                                                  "Saved Sync Action" := "Sync Action";
                                                                  "Saved CRM ID" := "CRM ID";
                                                                  VALIDATE("Sync Action","Sync Action"::"To Integration Table");
                                                                  CLEAR(NullGUID);
                                                                  VALIDATE("CRM ID",NullGUID);
                                                                end else begin
                                                                  VALIDATE("Sync Action","Saved Sync Action");
                                                                  VALIDATE("CRM ID","Saved CRM ID");
                                                                end;
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Create New }
    { 11  ;   ;Saved Sync Action   ;Option        ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Saved Sync Action;
                                                   OptionCaptionML=ENU=Do Not Synchronize,To Integration Table,From Integration Table;
                                                   OptionString="Do Not Synchronize","To Integration Table","From Integration Table" }
    { 12  ;   ;Saved CRM ID        ;GUID          ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Saved CRM ID }
    { 13  ;   ;CRM Table Name      ;Code20        ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=CRM Table Name;
                                                   Editable=false }
  }
  KEYS
  {
    {    ;"NAV Name"                              ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      InitialSynchDisabledErr@1001 : TextConst 'ENU=No initial synchronization direction was specified because initial synchronization was disabled.';
      NoSuchCRMRecordErr@1000 : TextConst '@@@="%1 = The record name entered by the user, %2 = CRM product name";ENU=A record with the name %1 does not exist in %2.';
      CRMSetupDefaults@1002 : Codeunit "CRM Setup Defaults";
      LookupCRMTables@1003 : Codeunit "Lookup CRM Tables";
      CRMProductName@1004 : Codeunit "CRM Product Name";

    [External]
    PROCEDURE Initialize@1(NAVRecordID@1000 : RecordID);
    VAR
      IntegrationTableMapping@1004 : Record "Integration Table Mapping";
      RecordRef@1003 : RecordRef;
    BEGIN
      RecordRef := NAVRecordID.GETRECORD;
      RecordRef.FIND;

      INIT;
      VALIDATE("NAV Table ID",NAVRecordID.TABLENO);
      "NAV Record ID" := NAVRecordID;
      "NAV Name" := NameValue(RecordRef);
      "CRM Table ID" := CRMSetupDefaults.GetCRMTableNo("NAV Table ID");
      if CRMSetupDefaults.GetDefaultDirection("NAV Table ID") = IntegrationTableMapping.Direction::FromIntegrationTable then
        VALIDATE("Sync Action","Sync Action"::"From Integration Table")
      else
        VALIDATE("Sync Action","Sync Action"::"To Integration Table");
      if FindCRMId then
        if CalcCRMName then begin
          VALIDATE("Sync Action","Sync Action"::"Do Not Synchronize");
          "Saved CRM ID" := "CRM ID";
        end;
    END;

    LOCAL PROCEDURE FindCRMId@8() : Boolean;
    VAR
      CRMIntegrationRecord@1002 : Record "CRM Integration Record";
    BEGIN
      exit(CRMIntegrationRecord.FindIDFromRecordID("NAV Record ID","CRM ID"))
    END;

    LOCAL PROCEDURE FindCRMRecordByName@7(VAR CRMName@1004 : Text[250]) : Boolean;
    VAR
      RecordRef@1002 : RecordRef;
      FieldRef@1001 : FieldRef;
      Found@1003 : Boolean;
    BEGIN
      RecordRef.OPEN("CRM Table ID");
      FieldRef := RecordRef.FIELD(CRMSetupDefaults.GetNameFieldNo("CRM Table ID"));
      FieldRef.SETRANGE(CRMName);
      if RecordRef.FINDFIRST then
        Found := true
      else begin
        RecordRef.CURRENTKEYINDEX(2); // "Name" key should be the second key in a CRM table
        FieldRef := RecordRef.FIELD(CRMSetupDefaults.GetNameFieldNo("CRM Table ID"));
        FieldRef.SETFILTER("CRM Name" + '*');
        if RecordRef.FINDFIRST then
          Found := true;
      end;
      if Found then begin
        CRMName := NameValue(RecordRef);
        "CRM ID" := PrimaryKeyValue(RecordRef);
      end;
      RecordRef.CLOSE;
      exit(Found);
    END;

    LOCAL PROCEDURE CalcCRMName@9() Found : Boolean;
    VAR
      RecordRef@1003 : RecordRef;
    BEGIN
      RecordRef.OPEN("CRM Table ID");
      Found := FindCRMRecRefByPK(RecordRef,"CRM ID");
      if Found then
        "CRM Name" := NameValue(RecordRef)
      else
        "CRM Name" := '';
      RecordRef.CLOSE;
    END;

    [External]
    PROCEDURE GetInitialSynchronizationDirection@13() : Integer;
    VAR
      IntegrationTableMapping@1000 : Record "Integration Table Mapping";
    BEGIN
      if "Sync Action" = "Sync Action"::"Do Not Synchronize" then
        ERROR(InitialSynchDisabledErr);

      if "Sync Action" = "Sync Action"::"To Integration Table" then
        exit(IntegrationTableMapping.Direction::ToIntegrationTable);

      exit(IntegrationTableMapping.Direction::FromIntegrationTable);
    END;

    [External]
    PROCEDURE GetPerformInitialSynchronization@6() : Boolean;
    BEGIN
      exit("Sync Action" <> "Sync Action"::"Do Not Synchronize");
    END;

    LOCAL PROCEDURE NameValue@10(RecordRef@1000 : RecordRef) : Text[250];
    VAR
      FieldRef@1001 : FieldRef;
    BEGIN
      FieldRef := RecordRef.FIELD(CRMSetupDefaults.GetNameFieldNo(RecordRef.NUMBER));
      exit(COPYSTR(FORMAT(FieldRef.VALUE),1,MAXSTRLEN("CRM Name")));
    END;

    LOCAL PROCEDURE PrimaryKeyValue@12(RecordRef@1000 : RecordRef) : GUID;
    VAR
      FieldRef@1002 : FieldRef;
      PrimaryKeyRef@1001 : KeyRef;
    BEGIN
      PrimaryKeyRef := RecordRef.KEYINDEX(1);
      FieldRef := PrimaryKeyRef.FIELDINDEX(1);
      exit(FieldRef.VALUE);
    END;

    LOCAL PROCEDURE FindCRMRecRefByPK@5(VAR RecordRef@1000 : RecordRef;CRMId@1001 : GUID) : Boolean;
    VAR
      FieldRef@1002 : FieldRef;
      PrimaryKeyRef@1003 : KeyRef;
    BEGIN
      PrimaryKeyRef := RecordRef.KEYINDEX(1);
      FieldRef := PrimaryKeyRef.FIELDINDEX(1);
      FieldRef.SETRANGE(CRMId);
      exit(RecordRef.FINDFIRST);
    END;

    BEGIN
    END.
  }
}

