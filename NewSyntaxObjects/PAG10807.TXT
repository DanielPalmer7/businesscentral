OBJECT Page 10807 Sales Tax Setup Wizard
{
  OBJECT-PROPERTIES
  {
    Date=20180425D;
    Time=161724.730T;
    Modified=true;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Sales Tax Setup;
    InsertAllowed=false;
    DeleteAllowed=false;
    LinksAllowed=false;
    SourceTable="Sales Tax Setup Wizard";
    PageType=NavigatePage;
    ShowFilter=false;
    OnOpenPage=BEGIN
                 if not GET then begin
                   INIT;
                   Initialize;
                   INSERT;
                 end;
                 LoadTopBanners;
                 ShowIntroStep;
                 SetCityAndCountyVisible;
                 SetDefaultCountry;
               END;

    OnQueryClosePage=VAR
                       AssistedSetup@1001 : Record "Assisted Setup";
                     BEGIN
                       if CloseAction = ACTION::OK then
                         if AssistedSetup.GetStatus(PAGE::"Sales Tax Setup Wizard") = AssistedSetup.Status::"Not Completed" then
                           if not CONFIRM(NAVNotSetUpQst,false) then
                             ERROR('');
                     END;

    ActionList=ACTIONS
    {
      { 8       ;    ;ActionContainer;
                      Name=ActionContainer8;
                      ActionContainerType=ActionItems }
      { 15      ;1   ;Action    ;
                      Name=Back;
                      CaptionML=ENU=Back;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=BackEnabled;
                      InFooterBar=true;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 NextStep(true);
                               END;
                                }
      { 14      ;1   ;Action    ;
                      Name=NextStep;
                      CaptionML=ENU=Next;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NextEnabled;
                      InFooterBar=true;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 NextStep(false);
                               END;
                                }
      { 9       ;1   ;Action    ;
                      Name=Finish;
                      CaptionML=ENU=Finish;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=FinishEnabled;
                      InFooterBar=true;
                      Image=Approve;
                      OnAction=VAR
                                 AssistedSetup@1004 : Record "Assisted Setup";
                               BEGIN
                                 StoreSalesTaxSetup;
                                 AssistedSetup.SetStatus(PAGE::"Sales Tax Setup Wizard",AssistedSetup.Status::Completed);
                                 CurrPage.CLOSE;
                                 AssignTaxAreaCode;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Control1;
                ContainerType=ContentArea }

    { 96  ;1   ;Group     ;
                Name=Control96;
                Visible=TopBannerVisible AND NOT (Step = Step::Done);
                Editable=FALSE;
                GroupType=Group }

    { 97  ;2   ;Field     ;
                Name=MediaResourcesStandard;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaResourcesStandard."Media Reference";
                Editable=FALSE;
                ShowCaption=false }

    { 98  ;1   ;Group     ;
                Name=Control98;
                Visible=TopBannerVisible AND (Step = Step::Done);
                Editable=FALSE;
                GroupType=Group }

    { 99  ;2   ;Field     ;
                Name=MediaResourcesDone;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaResourcesDone."Media Reference";
                Editable=FALSE;
                ShowCaption=false }

    { 11  ;1   ;Group     ;
                Name=Step1;
                CaptionML=ENU="";
                Visible=Step = Step::Intro;
                GroupType=Group }

    { 18  ;2   ;Group     ;
                Name=Para1.1;
                CaptionML=ENU=Welcome to Sales Tax Setup;
                GroupType=Group }

    { 1020000;3;Group     ;
                Name=Para1.1.1;
                CaptionML=ENU="";
                GroupType=Group;
                InstructionalTextML=ENU=You can create a default tax area code to assign to customers and vendors so that sales tax is automatically calculated in sales or purchase documents. }

    { 21  ;2   ;Group     ;
                Name=Para1.2;
                CaptionML=ENU=Let's go!;
                GroupType=Group;
                InstructionalTextML=ENU=Choose Next to create a default tax group. }

    { 2   ;1   ;Group     ;
                Name=Step2;
                CaptionML=ENU="";
                Visible=Step = Step::TaxGroupCreated;
                GroupType=Group }

    { 1020002;2;Group     ;
                Name=Para2.1;
                CaptionML=ENU=Default tax group created;
                GroupType=Group }

    { 1020001;3;Group     ;
                Name=Para2.1.1;
                CaptionML=ENU="";
                GroupType=Group;
                InstructionalTextML=ENU=Tax Group of TAXABLE has been created. You will need to assign this group to your items that are taxable. }

    { 4   ;1   ;Group     ;
                Name=Step3;
                CaptionML=ENU="";
                Visible=Step = Step::TaxAccounts;
                GroupType=Group }

    { 23  ;2   ;Group     ;
                Name=Para3.1;
                CaptionML=ENU=Select which accounts you want to use with this tax group.;
                GroupType=Group }

    { 5   ;3   ;Field     ;
                Name="Tax Account (Sales)";
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tax Account (Sales)";
                OnValidate=BEGIN
                             NextEnabled := ("Tax Account (Sales)" <> '') or ("Tax Account (Purchases)" <> '');
                           END;

                ImplicitType=Code20 }

    { 1020003;3;Field     ;
                Name="Tax Account (Purchases)";
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tax Account (Purchases)";
                OnValidate=BEGIN
                             NextEnabled := ("Tax Account (Sales)" <> '') or ("Tax Account (Purchases)" <> '');
                           END;

                ImplicitType=Code20 }

    { 6   ;1   ;Group     ;
                Name=Step4;
                CaptionML=ENU="";
                Visible=Step = Step::TaxRates;
                GroupType=Group }

    { 1020009;2;Group     ;
                Name=Para4.1;
                CaptionML=[ENU="Enter the tax information for your area; then click next."];
                GroupType=Group }

    { 1020016;3;Group     ;
                Name=Para4.1.1;
                CaptionML=ENU="";
                Visible=CityAndCountyVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Enter your city tax information }

    { 13  ;4   ;Field     ;
                Name=City;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=City;
                ImplicitType=Text30 }

    { 1020004;4;Field     ;
                Name="City Rate";
                ApplicationArea=#Basic,#Suite;
                SourceExpr="City Rate";
                OnValidate=BEGIN
                             VALIDATE(City);
                           END;

                ImplicitType=Decimal }

    { 1020010;3;Group     ;
                Name=Para4.1.2;
                CaptionML=ENU="";
                Visible=CityAndCountyVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Enter your county tax information;
                Layout=Rows }

    { 1020005;4;Field     ;
                Name=County;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=County;
                ImplicitType=Text30 }

    { 1020006;4;Field     ;
                Name="County Rate";
                ApplicationArea=#Basic,#Suite;
                SourceExpr="County Rate";
                OnValidate=BEGIN
                             VALIDATE(County);
                           END;

                ImplicitType=Decimal }

    { 1020011;3;Group     ;
                Name=Para4.1.3;
                CaptionML=ENU="";
                GroupType=Group;
                InstructionalTextML=ENU=Enter your state tax information;
                Layout=Rows }

    { 1020007;4;Field     ;
                Name=State;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=State;
                ImplicitType=Code2 }

    { 1020008;4;Field     ;
                Name="State Rate";
                ApplicationArea=#Basic,#Suite;
                SourceExpr="State Rate";
                OnValidate=BEGIN
                             VALIDATE(State);
                           END;

                ImplicitType=Decimal }

    { 1030001;4;Field     ;
                Name="Country/Region";
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Country/Region";
                ImplicitType=Option }

    { 1020013;1;Group     ;
                Name=Step5;
                CaptionML=ENU="";
                Visible=Step = Step::TaxAreaName;
                GroupType=Group }

    { 1020012;2;Group     ;
                Name=Para5.1;
                CaptionML=ENU=Enter a name for your new tax area;
                GroupType=Group }

    { 1020014;3;Field     ;
                Name="Tax Area Code";
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tax Area Code";
                OnValidate=BEGIN
                             "Tax Area Code" := DELCHR("Tax Area Code",'<>',' ');
                             NextEnabled := "Tax Area Code" <> '';
                           END;

                ImplicitType=Code20 }

    { 1020022;1;Group     ;
                Name=Step6;
                CaptionML=ENU="";
                Visible=Step = Step::Done;
                GroupType=Group }

    { 1020021;2;Group     ;
                Name=Para6.1;
                CaptionML=ENU=That's it!;
                GroupType=Group;
                InstructionalTextML=ENU=Choose Finish to create this tax area and assign your customers to the new tax area. }

    { 1020019;3;Field     ;
                Name=AssignToCustomers;
                CaptionML=ENU=To Customers;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AssignToCustomers;
                ImplicitType=Boolean }

    { 1020020;3;Field     ;
                Name=AssignToVendors;
                CaptionML=ENU=To Vendors;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AssignToVendors;
                ImplicitType=Boolean }

    { 1020015;3;Field     ;
                Name=AssignToLocations;
                CaptionML=ENU=To Locations;
                SourceExpr=AssignToLocations;
                ImplicitType=Boolean }

    { 1020018;3;Field     ;
                Name=AssignToCompanyInfo;
                CaptionML=ENU=To Company Information;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AssignToCompanyInfo;
                ImplicitType=Boolean }

  }
  CODE
  {
    VAR
      MediaRepositoryStandard@1020010 : Record "Media Repository";
      MediaRepositoryDone@1020011 : Record "Media Repository";
      MediaResourcesStandard@1020028 : Record "Media Resources";
      MediaResourcesDone@1020029 : Record "Media Resources";
      ClientTypeManagement@1020077 : Codeunit ClientTypeManagement;
      Step@1015 : 'Intro,TaxGroupCreated,TaxAccounts,TaxRates,TaxAreaName,Done';
      GeneratedName@1020007 : Code[20];
      BackEnabled@1014 : Boolean;
      NextEnabled@1013 : Boolean;
      FinishEnabled@1010 : Boolean;
      TopBannerVisible@1020012 : Boolean;
      NAVNotSetUpQst@1020006 : TextConst 'ENU=Sales tax has not been set up.\\Are you sure that you want to exit?';
      AssignToCustomers@1020000 : Boolean;
      AssignToVendors@1020001 : Boolean;
      AssignToCompanyInfo@1020004 : Boolean;
      AssignToLocations@1020005 : Boolean;
      CityAndCountyVisible@1020013 : Boolean;

    LOCAL PROCEDURE NextStep@3(Backwards@1000 : Boolean);
    BEGIN
      if Backwards then
        Step := Step - 1
      else
        Step := Step + 1;

      case Step of
        Step::Intro:
          ShowIntroStep;
        Step::TaxGroupCreated:
          ShowTaxGroupCreatedStep;
        Step::TaxAccounts:
          ShowTaxAccountsStep;
        Step::TaxRates:
          ShowTaxRatesStep;
        Step::TaxAreaName:
          ShowTaxAreaNameStep;
        Step::Done:
          ShowDoneStep;
      end;
      CurrPage.UPDATE(true);
    END;

    LOCAL PROCEDURE ShowIntroStep@1();
    BEGIN
      ResetWizardControls;
      BackEnabled := false;
    END;

    LOCAL PROCEDURE ShowTaxGroupCreatedStep@2();
    BEGIN
      ResetWizardControls;
      NextEnabled := true;
    END;

    LOCAL PROCEDURE ShowTaxAccountsStep@4();
    BEGIN
      ResetWizardControls;
      NextEnabled := ("Tax Account (Purchases)" <> '') or ("Tax Account (Sales)" <> '');
    END;

    LOCAL PROCEDURE ShowTaxRatesStep@15();
    BEGIN
      ResetWizardControls;
    END;

    LOCAL PROCEDURE ShowTaxAreaNameStep@1020005();
    BEGIN
      ResetWizardControls;
      if "Tax Area Code" in ['',GeneratedName] then begin
        GeneratedName := GenerateTaxAreaCode;
        "Tax Area Code" := GeneratedName;
      end;
      NextEnabled := "Tax Area Code" <> '';
    END;

    LOCAL PROCEDURE ShowDoneStep@6();
    BEGIN
      ResetWizardControls;
      NextEnabled := false;
      FinishEnabled := true;
    END;

    LOCAL PROCEDURE ResetWizardControls@10();
    BEGIN
      // Buttons
      BackEnabled := true;
      NextEnabled := true;
      FinishEnabled := false;
    END;

    LOCAL PROCEDURE AssignTaxAreaCode@1020006();
    VAR
      Customer@1020004 : Record Customer;
      Vendor@1020003 : Record Vendor;
      Location@1020006 : Record Location;
      DummyCompanyInformation@1020005 : Record "Company Information";
      AssignTaxAreaToCustomer@1020001 : Report "Assign Tax Area to Customer";
      AssignTaxAreaToVendor@1020000 : Report "Assign Tax Area to Vendor";
      AssignTaxAreaToLocation@1020002 : Report "Assign Tax Area to Location";
    BEGIN
      COMMIT;
      if AssignToCustomers then begin
        AssignTaxAreaToCustomer.SETTABLEVIEW(Customer);
        AssignTaxAreaToCustomer.SetDefaultAreaCode("Tax Area Code");
        AssignTaxAreaToCustomer.RUN;
        COMMIT;
      end;
      if AssignToVendors then begin
        AssignTaxAreaToVendor.SETTABLEVIEW(Vendor);
        AssignTaxAreaToVendor.SetDefaultAreaCode("Tax Area Code");
        AssignTaxAreaToVendor.RUN;
        COMMIT;
      end;
      if AssignToLocations then begin
        AssignTaxAreaToLocation.SETTABLEVIEW(Location);
        AssignTaxAreaToLocation.SetDefaultAreaCode("Tax Area Code");
        AssignTaxAreaToLocation.RUN;
        COMMIT;
      end;
      if AssignToCompanyInfo and DummyCompanyInformation.FINDFIRST then begin
        DummyCompanyInformation.VALIDATE("Tax Area Code","Tax Area Code");
        DummyCompanyInformation.MODIFY;
        COMMIT;
      end;
    END;

    LOCAL PROCEDURE LoadTopBanners@1020063();
    BEGIN
      if MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType)) and
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType))
      then
        if MediaResourcesStandard.GET(MediaRepositoryStandard."Media Resources Ref") and
           MediaResourcesDone.GET(MediaRepositoryDone."Media Resources Ref")
        then
          TopBannerVisible := MediaResourcesDone."Media Reference".HASVALUE;
    END;

    LOCAL PROCEDURE SetCityAndCountyVisible@1020000();
    VAR
      CompanyInformation@1020000 : Record "Company Information";
    BEGIN
      CityAndCountyVisible := not CompanyInformation.IsCanada;
    END;

    LOCAL PROCEDURE SetDefaultCountry@1030001();
    VAR
      CompanyInformation@1030000 : Record "Company Information";
    BEGIN
      if CompanyInformation.IsCanada then
        "Country/Region" := "Country/Region"::CA
      else
        "Country/Region" := "Country/Region"::US;
      MODIFY;
    END;

    BEGIN
    END.
  }
}

