OBJECT Page 1180 Data Privacy Wizard
{
  OBJECT-PROPERTIES
  {
    Date=20180425D;
    Time=161337.40T;
    Modified=true;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Data Privacy Utility;
    SourceTable="Data Privacy Entities";
    PageType=NavigatePage;
    SourceTableTemporary=true;
    OnInit=BEGIN
             LoadTopBanners;
             CurrentPage := 1;
           END;

    OnOpenPage=BEGIN
                 EnableControls;
                 DataPrivacyMgmt.CreateEntities;
               END;

    ActionList=ACTIONS
    {
      { 5       ;    ;ActionContainer;
                      Name=ActionContainer5;
                      ActionContainerType=ActionItems }
      { 8       ;1   ;Action    ;
                      Name=PreviewData;
                      CaptionML=ENU=&Generate and Preview Data;
                      ApplicationArea=#Basic,#Suite;
                      Visible=CurrentPage = 3;
                      Enabled=PreviewActionEnabled;
                      InFooterBar=true;
                      OnAction=BEGIN
                                 CurrPage.UPDATE;
                                 DataPrivacyMgmt.InitRecords(EntityTypeTableNo,EntityNo,PackageCode,ActionType,false,DataSensitivity);
                                 CurrPage.DataPrivacySubPage.PAGE.GeneratePreviewData(PackageCode);
                                 CurrentPage := CurrentPage + 1;
                               END;
                                }
      { 47      ;1   ;Action    ;
                      Name=BackAction;
                      CaptionML=ENU=&Back;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=(CurrentPage > 1) AND (CurrentPage < 5);
                      InFooterBar=true;
                      Image=PreviousRecord;
                      OnAction=VAR
                                 PreviousPage@1000 : Integer;
                               BEGIN
                                 PreviousPage := CurrentPage;
                                 CurrentPage := CurrentPage - 1;

                                 NextActionEnabled := true;
                                 PreviewActionEnabled := true;
                                 if CurrentPage = 3 then begin
                                   if PreviousPage = 4 then // Don't clear the entity number if coming back from the preview page
                                     exit;
                                   if PackageCode <> '' then
                                     if STRPOS(PackageCode,'*') > 0 then
                                       DataPrivacyMgmt.DeletePackage(PackageCode);
                                   NextActionEnabled := false;
                                   PreviewActionEnabled := false;
                                 end;

                                 CurrPage.UPDATE;
                               END;
                                }
      { 9       ;1   ;Action    ;
                      Name=NextAction;
                      CaptionML=ENU=&Next;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=NextActionEnabled;
                      InFooterBar=true;
                      Image=NextRecord;
                      OnAction=VAR
                                 ActivityLog@1000 : Record "Activity Log";
                                 Company@1001 : Record Company;
                                 ConfigPackageTable@1003 : Record "Config. Package Table";
                                 ConfigPackage@1002 : Record "Config. Package";
                                 SessionId@1004 : Integer;
                               BEGIN
                                 NextActionEnabled := true;
                                 PreviewActionEnabled := true;

                                 CurrentPage := CurrentPage + 1;

                                 if CurrentPage = 3 then begin
                                   EntityNo := '';
                                   NextActionEnabled := false;
                                   PreviewActionEnabled := false;
                                 end;

                                 if CurrentPage = 4 then begin
                                   DataPrivacyMgmt.InitRecords(EntityTypeTableNo,EntityNo,PackageCode,ActionType,false,DataSensitivity);
                                   if ActionType = ActionType::"Create a data privacy configuration package" then
                                     if ConfigPackage.GET(PackageCode) then begin
                                       Company.GET(COMPANYNAME);
                                       NextActionEnabled := false;
                                       PreviewActionEnabled := false;
                                       EditConfigPackage := true;
                                       CurrentPage := 5; // Move to the end
                                       ActivityLog.LogActivity(
                                         Company.RECORDID,ActivityLog.Status::Success,ActivityContextTxt,ActivityDescriptionConfigTxt,
                                         STRSUBSTNO(ActivityMessageConfigTxt,EntityType,EntityNo));
                                     end else begin // No data generated, so no config package created.
                                       CurrentPage := 6; // Move to the end
                                       ActivityLog.LogActivity(
                                         Company.RECORDID,ActivityLog.Status::Failed,ActivityContextTxt,ActivityDescriptionConfigTxt,
                                         STRSUBSTNO(ActivityMessageConfigTxt,EntityType,EntityNo));
                                       NextActionEnabled := false;
                                       PreviewActionEnabled := false;
                                       EditConfigPackage := false;
                                       exit;
                                     end;
                                   CurrentPage := 5;
                                 end;

                                 if CurrentPage = 5 then begin
                                   NextActionEnabled := false;
                                   PreviewActionEnabled := false;

                                   Company.GET(COMPANYNAME);
                                   if ActionType = ActionType::"Export a data subject's data" then
                                     if ConfigPackage.GET(PackageCode) then begin
                                       DataPrivacyMgmt.SetPrivacyBlocked(EntityTypeTableNo,EntityNo);
                                       ConfigPackageTable.SETRANGE("Package Code",PackageCode);
                                       if STARTSESSION(SessionId,CODEUNIT::"Prvacy Data Mgmt Excel",COMPANYNAME,ConfigPackageTable) then
                                         ActivityLog.LogActivity(
                                           Company.RECORDID,ActivityLog.Status::Success,ActivityContextTxt,ActivityDescriptionExportTxt,
                                           STRSUBSTNO(ActivityMessageExportTxt,EntityType,EntityNo))
                                       else
                                         ActivityLog.LogActivity(
                                           Company.RECORDID,ActivityLog.Status::Failed,ActivityContextTxt,ActivityDescriptionExportTxt,
                                           STRSUBSTNO(ActivityMessageExportTxt,EntityType,EntityNo));
                                     end else begin // No data generated, so no config package created.
                                       CurrentPage := 6; // Move to the end
                                       ActivityLog.LogActivity(
                                         Company.RECORDID,ActivityLog.Status::Failed,ActivityContextTxt,ActivityDescriptionExportTxt,
                                         STRSUBSTNO(ActivityMessageExportTxt,EntityType,EntityNo));
                                     end;
                                   NextActionEnabled := false;
                                   PreviewActionEnabled := false;
                                 end;

                                 CurrPage.UPDATE(false);
                               END;
                                }
      { 10      ;1   ;Action    ;
                      Name=FinishAction;
                      CaptionML=ENU=&Finish;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=CurrentPage >= 5;
                      InFooterBar=true;
                      Image=Approve;
                      OnAction=VAR
                                 ConfigPackage@1001 : Record "Config. Package";
                                 ConfigPackages@1000 : Page "Config. Packages";
                               BEGIN
                                 if EditConfigPackage and (ActionType = ActionType::"Create a data privacy configuration package") then begin
                                   ConfigPackage.FILTERGROUP(2);
                                   ConfigPackage.SETFILTER(Code,PackageCode);
                                   ConfigPackage.FILTERGROUP(0);

                                   ConfigPackages.SETTABLEVIEW(ConfigPackage);
                                   ConfigPackages.EDITABLE := true;
                                   ConfigPackages.RUN;
                                 end;
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=Privacy Data Wizard;
                CaptionML=ENU=Privacy Data Setup;
                ContainerType=ContentArea }

    { 17  ;1   ;Group     ;
                Name=Control17;
                Visible=TopBannerVisible AND NOT (CurrentPage = 5);
                Editable=False;
                GroupType=Group }

    { 18  ;2   ;Field     ;
                Name=MediaResourcesStandard;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaResourcesStandard."Media Reference";
                Editable=FALSE;
                ShowCaption=false }

    { 19  ;1   ;Group     ;
                Name=Control19;
                Visible=TopBannerVisible AND (CurrentPage = 5);
                Editable=False;
                GroupType=Group }

    { 20  ;2   ;Field     ;
                Name=MediaResourcesDone;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaResourcesDone."Media Reference";
                Editable=FALSE;
                ShowCaption=false }

    { 12  ;1   ;Group     ;
                Name=Step1;
                Visible=CurrentPage = 1;
                GroupType=Group;
                InstructionalTextML=ENU="" }

    { 6   ;2   ;Group     ;
                Name=Para1.1;
                CaptionML=ENU=Welcome to Data Privacy Utility;
                GroupType=Group;
                InstructionalTextML=ENU="" }

    { 7   ;3   ;Group     ;
                Name=Para1.1.1;
                CaptionML=ENU="";
                GroupType=Group;
                InstructionalTextML=ENU=You can export data for a person to Excel or to a RapidStart configuration package. }

    { 29  ;2   ;Group     ;
                Name=Para1.2;
                CaptionML=ENU=Let's go!;
                GroupType=Group }

    { 30  ;3   ;Group     ;
                Name=Para1.2.1;
                CaptionML=ENU="";
                GroupType=Group;
                InstructionalTextML=ENU=Choose Next to start the process. }

    { 26  ;1   ;Group     ;
                Name=Step2;
                CaptionML=ENU="";
                Visible=CurrentPage = 2;
                GroupType=Group }

    { 4   ;2   ;Group     ;
                Name=Para2.1;
                CaptionML=ENU=I want to...;
                GroupType=Group }

    { 27  ;3   ;Field     ;
                Name=ActionType;
                OptionCaptionML=[@@@=Note to translators.  These options must be translated based on being prefixed with "I want to" text.;
                                 ENU=Export a data subject's data,Create a data privacy configuration package];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ActionType;
                ImplicitType=Option;
                ShowCaption=false }

    { 41  ;3   ;Field     ;
                Name=AvailableOptionsDescription;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AvailableOptionsDescription;
                Editable=FALSE;
                MultiLine=true;
                ImplicitType=Text;
                ShowCaption=false }

    { 14  ;1   ;Group     ;
                Name=Step3;
                CaptionML=ENU="";
                Visible=CurrentPage = 3;
                GroupType=Group }

    { 13  ;2   ;Group     ;
                Name=Para3.1;
                CaptionML=ENU=Specify the data that you want to export.;
                GroupType=Group }

    { 16  ;3   ;Field     ;
                Name=EntityType;
                CaptionML=ENU=Data Subject;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=EntityType;
                TableRelation="Data Privacy Entities"."Table Caption";
                OnLookup=BEGIN
                           RESET;
                           DELETEALL;
                           if PAGE.RUNMODAL(PAGE::"Data Subject",Rec) = ACTION::LookupOK then begin
                             EntityType := "Table Caption";
                             EntityTypeTableNo := "Table No.";
                             if EntityType <> EntityTypeGlobal then
                               EntityNo := '';
                             EntityTypeGlobal := EntityType;
                           end;
                         END;

                ImplicitType=Text80 }

    { 25  ;3   ;Field     ;
                Name=EntityTypeTableNo;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=EntityTypeTableNo;
                Visible=FALSE;
                ImplicitType=Integer }

    { 21  ;3   ;Field     ;
                Name=EntityNo;
                CaptionML=ENU=Data Subject Identifier;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=EntityNo;
                OnValidate=VAR
                             Customer@1006 : Record Customer;
                             Vendor@1005 : Record Vendor;
                             Contact@1004 : Record Contact;
                             Resource@1003 : Record Resource;
                             Employee@1002 : Record Employee;
                             SalespersonPurchaser@1001 : Record "Salesperson/Purchaser";
                             User@1012 : Record User;
                             FilterAsText@1010 : Text;
                           BEGIN
                             if EntityNo <> '' then begin
                               if EntityTypeTableNo = DATABASE::Customer then begin
                                 if not Customer.GET(FORMAT(EntityNo,20)) then
                                   ERROR(RecordNotFoundErr);
                                 SetEntityFilter(DATABASE::Customer,FilterAsText);
                                 Customer.SETVIEW(FilterAsText);
                                 Customer.SETRANGE("No.",FORMAT(EntityNo,20));
                                 if not Customer.FINDFIRST then
                                   ERROR(NoPartnerPeopleErr);
                                 if Customer."Privacy Blocked" then
                                   MESSAGE(DataSubjectBlockedMsg);
                               end;

                               if EntityTypeTableNo = DATABASE::Vendor then begin
                                 if not Vendor.GET(FORMAT(EntityNo,20)) then
                                   ERROR(RecordNotFoundErr);
                                 SetEntityFilter(DATABASE::Vendor,FilterAsText);
                                 Vendor.SETVIEW(FilterAsText);
                                 Vendor.SETRANGE("No.",FORMAT(EntityNo,20));
                                 if not Vendor.FINDFIRST then
                                   ERROR(NoPartnerPeopleErr);
                                 if Vendor."Privacy Blocked" then
                                   MESSAGE(DataSubjectBlockedMsg);
                               end;

                               if EntityTypeTableNo = DATABASE::Contact then begin
                                 if not Contact.GET(FORMAT(EntityNo,20)) then
                                   ERROR(RecordNotFoundErr);
                                 SetEntityFilter(DATABASE::Contact,FilterAsText);
                                 Contact.SETVIEW(FilterAsText);
                                 Contact.SETRANGE("No.",FORMAT(EntityNo,20));
                                 if not Contact.FINDFIRST then
                                   ERROR(NoPersonErr);
                                 if Contact."Privacy Blocked" then
                                   MESSAGE(DataSubjectBlockedMsg);
                               end;

                               if EntityTypeTableNo = DATABASE::Resource then begin
                                 if not Resource.GET(FORMAT(EntityNo,20)) then
                                   ERROR(RecordNotFoundErr);
                                 SetEntityFilter(DATABASE::Resource,FilterAsText);
                                 Resource.SETVIEW(FilterAsText);
                                 Resource.SETRANGE("No.",FORMAT(EntityNo,20));
                                 if not Resource.FINDFIRST then
                                   ERROR(NoPersonErr);
                                 if Resource."Privacy Blocked" then
                                   MESSAGE(DataSubjectBlockedMsg);
                               end;

                               if EntityTypeTableNo = DATABASE::Employee then begin
                                 Employee.SETRANGE("No.",FORMAT(EntityNo,20));
                                 if not Employee.FINDFIRST then
                                   ERROR(RecordNotFoundErr);
                                 if Employee."Privacy Blocked" then
                                   MESSAGE(DataSubjectBlockedMsg);
                               end;

                               if EntityTypeTableNo = DATABASE::"Salesperson/Purchaser" then begin
                                 SalespersonPurchaser.SETRANGE(Code,FORMAT(EntityNo,20));
                                 if not SalespersonPurchaser.FINDFIRST then
                                   ERROR(RecordNotFoundErr);
                                 if SalespersonPurchaser."Privacy Blocked" then
                                   MESSAGE(DataSubjectBlockedMsg);
                               end;

                               if EntityTypeTableNo = DATABASE::User then begin
                                 User.SETRANGE("User Name",EntityNo);
                                 if not User.FINDFIRST then
                                   ERROR(RecordNotFoundErr);
                               end;
                             end;

                             NextActionEnabled := EntityNo <> '';
                             PreviewActionEnabled := EntityNo <> '';

                             OnEntityNoValidate;
                           END;

                OnDrillDown=VAR
                              Customer@1013 : Record Customer;
                              Vendor@1011 : Record Vendor;
                              Contact@1009 : Record Contact;
                              Resource@1007 : Record Resource;
                              Employee@1003 : Record Employee;
                              SalespersonPurchaser@1001 : Record "Salesperson/Purchaser";
                              DataPrivacyEntities@1004 : Record "Data Privacy Entities";
                              User@1016 : Record User;
                              CustomerList@1012 : Page "Customer List";
                              VendorList@1010 : Page "Vendor List";
                              ContactList@1008 : Page "Contact List";
                              ResourceList@1006 : Page "Resource List";
                              EmployeeList@1002 : Page "Employee List";
                              SalespersonsPurchasers@1000 : Page "Salespersons/Purchasers";
                              Users@1015 : Page Users;
                              Instream@1005 : InStream;
                              FilterAsText@1014 : Text;
                            BEGIN
                              if EntityTypeTableNo = DATABASE::Customer then begin
                                if DataPrivacyEntities.GET(DATABASE::Customer) then begin
                                  DataPrivacyEntities.CALCFIELDS("Entity Filter");
                                  DataPrivacyEntities."Entity Filter".CREATEINSTREAM(Instream);
                                  Instream.READTEXT(FilterAsText);
                                end;
                                CustomerList.LOOKUPMODE := true;
                                Customer.SETVIEW(FilterAsText);
                                CustomerList.SETTABLEVIEW(Customer);
                                if CustomerList.RUNMODAL = ACTION::LookupOK then begin
                                  CustomerList.GETRECORD(Customer);
                                  if Customer."Privacy Blocked" then
                                    MESSAGE(DataSubjectBlockedMsg);
                                  EntityNo := Customer."No.";
                                end;
                              end;

                              if EntityTypeTableNo = DATABASE::Vendor then begin
                                if DataPrivacyEntities.GET(DATABASE::Vendor) then begin
                                  DataPrivacyEntities.CALCFIELDS("Entity Filter");
                                  DataPrivacyEntities."Entity Filter".CREATEINSTREAM(Instream);
                                  Instream.READTEXT(FilterAsText);
                                end;
                                VendorList.LOOKUPMODE := true;
                                Vendor.SETVIEW(FilterAsText);
                                VendorList.SETTABLEVIEW(Vendor);
                                if VendorList.RUNMODAL = ACTION::LookupOK then begin
                                  VendorList.GETRECORD(Vendor);
                                  if Vendor."Privacy Blocked" then
                                    MESSAGE(DataSubjectBlockedMsg);
                                  EntityNo := Vendor."No.";
                                end;
                              end;

                              if EntityTypeTableNo = DATABASE::Contact then begin
                                if DataPrivacyEntities.GET(DATABASE::Contact) then begin
                                  DataPrivacyEntities.CALCFIELDS("Entity Filter");
                                  DataPrivacyEntities."Entity Filter".CREATEINSTREAM(Instream);
                                  Instream.READTEXT(FilterAsText);
                                end;
                                ContactList.LOOKUPMODE := true;
                                Contact.SETVIEW(FilterAsText);
                                ContactList.SETTABLEVIEW(Contact);
                                if ContactList.RUNMODAL = ACTION::LookupOK then begin
                                  ContactList.GETRECORD(Contact);
                                  if Contact."Privacy Blocked" then
                                    MESSAGE(DataSubjectBlockedMsg);
                                  EntityNo := Contact."No.";
                                end;
                              end;

                              if EntityTypeTableNo = DATABASE::Resource then begin
                                if DataPrivacyEntities.GET(DATABASE::Resource) then begin
                                  DataPrivacyEntities.CALCFIELDS("Entity Filter");
                                  DataPrivacyEntities."Entity Filter".CREATEINSTREAM(Instream);
                                  Instream.READTEXT(FilterAsText);
                                end;
                                ResourceList.LOOKUPMODE := true;
                                Resource.SETVIEW(FilterAsText);
                                ResourceList.SETTABLEVIEW(Resource);
                                if ResourceList.RUNMODAL = ACTION::LookupOK then begin
                                  ResourceList.GETRECORD(Resource);
                                  if Resource."Privacy Blocked" then
                                    MESSAGE(DataSubjectBlockedMsg);
                                  EntityNo := Resource."No.";
                                end;
                              end;

                              if EntityTypeTableNo = DATABASE::Employee then begin
                                EmployeeList.LOOKUPMODE := true;
                                if EmployeeList.RUNMODAL = ACTION::LookupOK then begin
                                  EmployeeList.GETRECORD(Employee);
                                  if Employee."Privacy Blocked" then
                                    MESSAGE(DataSubjectBlockedMsg);
                                  EntityNo := Employee."No.";
                                end;
                              end;

                              if EntityTypeTableNo = DATABASE::"Salesperson/Purchaser" then begin
                                SalespersonsPurchasers.LOOKUPMODE := true;
                                if SalespersonsPurchasers.RUNMODAL = ACTION::LookupOK then begin
                                  SalespersonsPurchasers.GETRECORD(SalespersonPurchaser);
                                  if SalespersonPurchaser."Privacy Blocked" then
                                    MESSAGE(DataSubjectBlockedMsg);
                                  EntityNo := SalespersonPurchaser.Code;
                                end;
                              end;

                              if EntityTypeTableNo = DATABASE::User then begin
                                Users.LOOKUPMODE := true;
                                if Users.RUNMODAL = ACTION::LookupOK then begin
                                  Users.GETRECORD(User);
                                  EntityNo := User."User Name";
                                end;
                              end;

                              OnDrillDownForEntityNumber(EntityTypeTableNo); // Integration point to external devs

                              NextActionEnabled := EntityNo <> '';
                              PreviewActionEnabled := EntityNo <> '';
                            END;

                ImplicitType=Code50 }

    { 24  ;3   ;Field     ;
                Name=DataSensitivity;
                CaptionML=ENU=Data Sensitivity;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DataSensitivity;
                ImplicitType=Option }

    { 11  ;2   ;Group     ;
                Name=Para3.05;
                CaptionML=ENU="";
                Visible=(CurrentPage = 3) AND (ActionType < 1);
                GroupType=Group;
                InstructionalTextML=ENU=Choose to generate and preview the data that will be exported. Note that this can take a while, depending on the size of the dataset. }

    { 45  ;2   ;Group     ;
                Name=Para3.2;
                CaptionML=ENU="";
                Visible=(CurrentPage = 3) AND (ActionType = 0);
                GroupType=Group;
                InstructionalTextML=ENU=Choose Next to export the data. }

    { 37  ;2   ;Group     ;
                Name=Para3.4;
                CaptionML=ENU="";
                Visible=ActionType = 1;
                GroupType=Group;
                InstructionalTextML=ENU=Choose Next to create the configuration package }

    { 2   ;1   ;Group     ;
                Name=Step4;
                CaptionML=ENU="";
                Visible=CurrentPage = 4;
                GroupType=Group }

    { 35  ;2   ;Group     ;
                Name=Para4.1;
                CaptionML=ENU=Preview the data that will be exported;
                GroupType=Group }

    { 3   ;3   ;Part      ;
                Name=DataPrivacySubPage;
                CaptionML=ENU=" ";
                ApplicationArea=#Basic,#Suite;
                PagePartID="Data Privacy ListPage";
                PartType=Page }

    { 22  ;2   ;Group     ;
                Name=Para4.2;
                CaptionML=ENU="";
                Visible=(CurrentPage = 4) AND (ActionType = 0);
                GroupType=Group;
                InstructionalTextML=ENU=Choose Next to export the data. }

    { 31  ;1   ;Group     ;
                Name=Step5;
                CaptionML=ENU=<Step5>;
                Visible=CurrentPage = 5;
                GroupType=Group;
                InstructionalTextML=ENU="" }

    { 15  ;2   ;Group     ;
                Name=Para5.1;
                CaptionML=ENU=Success!;
                GroupType=Group;
                InstructionalTextML=ENU="" }

    { 23  ;3   ;Group     ;
                Name=Para5.1.1;
                CaptionML=ENU="";
                Visible=(CurrentPage = 5) AND (ActionType = 0);
                GroupType=Group;
                InstructionalTextML=ENU=The data is being exported. The Excel workbook will show up in the Report Inbox on your home page. }

    { 40  ;4   ;Group     ;
                Name=Para5.1.1.1;
                CaptionML=ENU="";
                Visible=(CurrentPage = 5) AND (ActionType = 0);
                GroupType=Group;
                InstructionalTextML=ENU=We recommend that you verify the data that is exported to Excel. Please also verify the filters in the configuration package to make sure that you are getting the data that you want. }

    { 38  ;3   ;Group     ;
                Name=Para5.1.3;
                CaptionML=ENU="";
                Visible=(CurrentPage = 5) AND (ActionType = 1);
                GroupType=Group;
                InstructionalTextML=ENU=Your configuration package has been successfully created. }

    { 39  ;4   ;Field     ;
                Name=EditConfigPackage;
                CaptionML=ENU=Edit Configuration Package;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=EditConfigPackage;
                ImplicitType=Boolean }

    { 43  ;4   ;Group     ;
                Name=Para5.1.4.1;
                CaptionML=ENU="";
                Visible=(CurrentPage = 5) AND (ActionType = 1);
                GroupType=Group;
                InstructionalTextML=ENU=Please verify the filters in the configuration package to make sure that you will get the data that you want. }

    { 36  ;1   ;Group     ;
                Name=Step6;
                CaptionML=ENU=<Step5>;
                Visible=CurrentPage = 6;
                GroupType=Group;
                InstructionalTextML=ENU="" }

    { 34  ;2   ;Group     ;
                Name=Para6.1;
                CaptionML=ENU=Process finished.;
                GroupType=Group;
                InstructionalTextML=ENU="" }

    { 33  ;3   ;Group     ;
                Name=Para6.1.1;
                CaptionML=ENU="";
                Visible=(CurrentPage = 6) AND (ActionType = 0);
                GroupType=Group;
                InstructionalTextML=ENU=No data was found that could be generated, so no export file was created. }

    { 28  ;3   ;Group     ;
                Name=Para6.1.2;
                CaptionML=ENU="";
                Visible=(CurrentPage = 6) AND (ActionType = 1);
                GroupType=Group;
                InstructionalTextML=ENU=No data was found that could be generated, so no configuration package was created. }

  }
  CODE
  {
    VAR
      MediaRepositoryStandard@1005 : Record "Media Repository";
      MediaRepositoryDone@1004 : Record "Media Repository";
      MediaResourcesStandard@1026 : Record "Media Resources";
      MediaResourcesDone@1025 : Record "Media Resources";
      ClientTypeManagement@1077 : Codeunit ClientTypeManagement;
      DataPrivacyMgmt@1009 : Codeunit "Data Privacy Mgmt";
      CurrentPage@1000 : Integer;
      TopBannerVisible@1006 : Boolean;
      ActionType@1011 : '"Export a data subject''s data","Create a data privacy configuration package"';
      EntityType@1007 : Text[80];
      EntityTypeTableNo@1017 : Integer;
      EntityNo@1003 : Code[50];
      DataSensitivity@1001 : 'Sensitive,Personal,"Company Confidential",Normal,Unclassified';
      EntityTypeGlobal@1008 : Text[80];
      NextActionEnabled@1012 : Boolean;
      ActivityContextTxt@1010 : TextConst 'ENU=Privacy Activity';
      ActivityMessageExportTxt@1018 : TextConst '@@@="%1=The type of entity. %2=The entity''s control number.";ENU=Exporting sensitive information for %1 %2';
      ActivityDescriptionExportTxt@1019 : TextConst 'ENU=Exporting data subject data';
      PreviewActionEnabled@1030 : Boolean;
      PackageCode@1021 : Code[20];
      ActivityMessageConfigTxt@1033 : TextConst '@@@="%1=The type of entity. %2=The entity''s control number.";ENU=Creating data privacy configuration package for %1 %2';
      ActivityDescriptionConfigTxt@1032 : TextConst 'ENU=Creating the data privacy configuration package';
      RecordNotFoundErr@1022 : TextConst 'ENU=Record not found.';
      EditConfigPackage@1034 : Boolean;
      OptionsDescriptionTxt@1035 : TextConst 'ENU=\Choose what you want to do with the privacy data.\\You can export data for a specific data subject, such as a customer.\You can also create a configuration package so that you can view and edit the fields and tables that the data will be exported from.';
      AvailableOptionsDescription@1036 : Text;
      DataSubjectBlockedMsg@1015 : TextConst 'ENU=This data subject is already marked as blocked due to privacy. You can export the related data.';
      NoPartnerPeopleErr@1002 : TextConst 'ENU=No records of Partner Type of ''Person'' were found.';
      NoPersonErr@1013 : TextConst 'ENU=No records of type ''Person'' were found.';

    LOCAL PROCEDURE LoadTopBanners@1();
    BEGIN
      if MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType)) and
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType))
      then
        if MediaResourcesStandard.GET(MediaRepositoryStandard."Media Resources Ref") and
           MediaResourcesDone.GET(MediaRepositoryDone."Media Resources Ref")
        then
          TopBannerVisible := MediaResourcesDone."Media Reference".HASVALUE;
    END;

    LOCAL PROCEDURE ResetControls@2();
    BEGIN
      NextActionEnabled := true;
      PreviewActionEnabled := true;
      EditConfigPackage := true;
    END;

    LOCAL PROCEDURE EnableControls@3();
    BEGIN
      ResetControls;
      AvailableOptionsDescription := OptionsDescriptionTxt;
    END;

    LOCAL PROCEDURE SetEntityFilter@5(TableId@1000 : Integer;VAR FilterAsText@1001 : Text);
    VAR
      DataPrivacyEntities@1002 : Record "Data Privacy Entities";
      Instream@1003 : InStream;
    BEGIN
      if DataPrivacyEntities.GET(TableId) then begin
        DataPrivacyEntities.CALCFIELDS("Entity Filter");
        DataPrivacyEntities."Entity Filter".CREATEINSTREAM(Instream);
        Instream.READTEXT(FilterAsText);
      end;
    END;

    PROCEDURE SetEntitityType@6(EntityTypeText@1000 : Text[80]);
    VAR
      DataPrivacyEntities@1001 : Record "Data Privacy Entities";
    BEGIN
      EntityType := EntityTypeText;

      DataPrivacyEntities.SETRANGE("Table Caption",EntityType);
      if DataPrivacyEntities.FINDFIRST then
        EntityTypeTableNo := DataPrivacyEntities."Table No.";
    END;

    [Integration]
    LOCAL PROCEDURE OnDrillDownForEntityNumber@10(EntityTypeTableNo@1000 : Integer);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnEntityNoValidate@4();
    BEGIN
    END;

    BEGIN
    END.
  }
}

