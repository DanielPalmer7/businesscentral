OBJECT Codeunit 260 Document-Mailing
{
  OBJECT-PROPERTIES
  {
    Date=20180425D;
    Time=160552.293T;
    Modified=true;
    Version List=;
  }
  PROPERTIES
  {
    TableNo="Job Queue Entry";
    OnRun=VAR
            ReportSelections@1005 : Record "Report Selections";
            O365DocumentSentHistory@1007 : Record "O365 Document Sent History";
          BEGIN
            O365DocumentSentHistory.NewInProgressFromJobQueue(Rec);

            ReportSelections.SendEmailInBackground(Rec);
          END;

  }
  CODE
  {
    VAR
      EmailSubjectCapTxt@1001 : TextConst '@@@="%1 = Customer Name. %2 = Document Type %3 = Invoice No.";ENU=%1 - %2 %3';
      ReportAsPdfFileNameMsg@1000 : TextConst '@@@="%1 = Document Type %2 = Invoice No.";ENU=Sales %1 %2.pdf';
      EmailSubjectPluralCapTxt@1003 : TextConst '@@@="%1 = Customer Name. %2 = Document Type in plural form";ENU=%1 - %2';
      ReportAsPdfFileNamePluralMsg@1002 : TextConst '@@@="%1 = Document Type in plural form";ENU=Sales %1.pdf';
      JobsReportAsPdfFileNameMsg@1004 : TextConst '@@@="%1 = Document Type %2 = Job Number";ENU=%1 %2.pdf';
      PdfFileNamePluralMsg@1005 : TextConst '@@@="%1 = Document Type in plural form";ENU=%1.pdf';
      IdentityManagement@1006 : Codeunit "Identity Management";
      InvoiceEmailSubjectTxt@1008 : TextConst '@@@="%1 = name of the company";ENU=Invoice from %1';
      TestInvoiceEmailSubjectTxt@1010 : TextConst '@@@="%1 = name of the company";ENU=Test invoice from %1';
      QuoteEmailSubjectTxt@1007 : TextConst '@@@="%1 = name of the company";ENU=Estimate from %1';
      CustomerLbl@1009 : TextConst 'ENU=<Customer>';

    [Internal]
    PROCEDURE EmailFile@3(AttachmentFilePath@1001 : Text[250];AttachmentFileName@1005 : Text[250];HtmlBodyFilePath@1007 : Text[250];PostedDocNo@1000 : Code[20];ToEmailAddress@1006 : Text[250];EmailDocName@1008 : Text[250];HideDialog@1003 : Boolean;ReportUsage@1010 : Integer) : Boolean;
    VAR
      TempEmailItem@1002 : TEMPORARY Record "Email Item";
    BEGIN
      exit(EmailFileInternal(
          TempEmailItem,
          AttachmentFilePath,
          AttachmentFileName,
          HtmlBodyFilePath,
          '',
          ToEmailAddress,
          PostedDocNo,
          EmailDocName,
          HideDialog,
          ReportUsage,
          true));
    END;

    [Internal]
    PROCEDURE EmailFileWithSubject@1(AttachmentFilePath@1001 : Text;AttachmentFileName@1005 : Text;HtmlBodyFilePath@1007 : Text;EmailSubject@1000 : Text;ToEmailAddress@1006 : Text;HideDialog@1003 : Boolean) : Boolean;
    VAR
      TempEmailItem@1002 : TEMPORARY Record "Email Item";
    BEGIN
      exit(EmailFileInternal(
          TempEmailItem,
          COPYSTR(AttachmentFilePath,1,MAXSTRLEN(TempEmailItem."Attachment File Path")),
          COPYSTR(AttachmentFileName,1,MAXSTRLEN(TempEmailItem."Attachment Name")),
          COPYSTR(HtmlBodyFilePath,1,MAXSTRLEN(TempEmailItem."Body File Path")),
          COPYSTR(EmailSubject,1,MAXSTRLEN(TempEmailItem.Subject)),
          COPYSTR(ToEmailAddress,1,MAXSTRLEN(TempEmailItem."Send to")),
          '',
          '',
          HideDialog,
          0,
          false));
    END;

    [Internal]
    PROCEDURE EmailFileWithSubjectAndReportUsage@11(AttachmentFilePath@1001 : Text[250];AttachmentFileName@1005 : Text[250];HtmlBodyFilePath@1007 : Text[250];EmailSubject@1004 : Text[250];PostedDocNo@1000 : Code[20];ToEmailAddress@1006 : Text[250];EmailDocName@1008 : Text[250];HideDialog@1003 : Boolean;ReportUsage@1010 : Integer) : Boolean;
    VAR
      TempEmailItem@1002 : TEMPORARY Record "Email Item";
    BEGIN
      exit(EmailFileInternal(
          TempEmailItem,
          AttachmentFilePath,
          AttachmentFileName,
          HtmlBodyFilePath,
          EmailSubject,
          ToEmailAddress,
          PostedDocNo,
          EmailDocName,
          HideDialog,
          ReportUsage,
          false));
    END;

    [External]
    PROCEDURE GetToAddressFromCustomer@16(BillToCustomerNo@1000 : Code[20]) : Text[250];
    VAR
      Customer@1002 : Record Customer;
      ToAddress@1001 : Text;
    BEGIN
      if Customer.GET(BillToCustomerNo) then
        ToAddress := Customer."E-Mail";

      exit(ToAddress);
    END;

    [External]
    PROCEDURE GetToAddressFromVendor@2(BuyFromVendorNo@1000 : Code[20]) : Text[250];
    VAR
      Vendor@1002 : Record Vendor;
      ToAddress@1001 : Text;
    BEGIN
      if Vendor.GET(BuyFromVendorNo) then
        ToAddress := Vendor."E-Mail";

      exit(ToAddress);
    END;

    [External]
    PROCEDURE GetAttachmentFileName@4(VAR AttachmentFileName@1000 : Text[250];PostedDocNo@1001 : Code[20];EmailDocumentName@1004 : Text[250];ReportUsage@1002 : Integer);
    VAR
      ReportSelections@1003 : Record "Report Selections";
    BEGIN
      if AttachmentFileName = '' then
        if PostedDocNo = '' then begin
          if ReportUsage = ReportSelections.Usage::"P.Order" then
            AttachmentFileName := STRSUBSTNO(PdfFileNamePluralMsg,EmailDocumentName)
          else
            AttachmentFileName := STRSUBSTNO(ReportAsPdfFileNamePluralMsg,EmailDocumentName);
        end else
          case ReportUsage of
            ReportSelections.Usage::JQ,ReportSelections.Usage::"P.Order":
              AttachmentFileName := STRSUBSTNO(JobsReportAsPdfFileNameMsg,EmailDocumentName,PostedDocNo);
            else
              AttachmentFileName := STRSUBSTNO(ReportAsPdfFileNameMsg,EmailDocumentName,PostedDocNo)
          end;
    END;

    PROCEDURE GetEmailBody@27(PostedDocNo@1000 : Code[20];ReportUsage@1001 : Integer;CustomerNo@1006 : Code[20]) : Text;
    VAR
      O365DefaultEmailMessage@1009 : Record "O365 Default Email Message";
      EmailParameter@1002 : Record "Email Parameter";
      Customer@1007 : Record Customer;
      String@1011 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.String";
      DocumentType@1005 : Option;
    BEGIN
      if Customer.GET(CustomerNo) then;

      if EmailParameter.GetEntryWithReportUsage(PostedDocNo,ReportUsage,EmailParameter."Parameter Type"::Body) then begin
        String := EmailParameter.GetParameterValue;
        exit(String.Replace(CustomerLbl,Customer.Name));
      end;

      if IdentityManagement.IsInvAppId then begin
        O365DefaultEmailMessage.ReportUsageToDocumentType(DocumentType,ReportUsage);
        String := O365DefaultEmailMessage.GetMessage(DocumentType);
        exit(String.Replace(CustomerLbl,Customer.Name));
      end;
    END;

    PROCEDURE ReplaceCustomerNameWithPlaceholder@22(CustomerNo@1002 : Code[20];BodyText@1001 : Text) : Text;
    VAR
      Customer@1003 : Record Customer;
      BodyTextString@1000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.String";
    BEGIN
      BodyTextString := BodyText;
      if not Customer.GET(CustomerNo) then
        exit(BodyText);

      exit(BodyTextString.Replace(Customer.Name,CustomerLbl));
    END;

    [External]
    PROCEDURE GetEmailSubject@5(PostedDocNo@1000 : Code[20];EmailDocumentName@1001 : Text[250];ReportUsage@1004 : Integer) Subject : Text[250];
    VAR
      EmailParameter@1003 : Record "Email Parameter";
      CompanyInformation@1002 : Record "Company Information";
      ReportSelections@1005 : Record "Report Selections";
      SalesHeader@1007 : Record "Sales Header";
      DocumentType@1006 : Option;
    BEGIN
      if EmailParameter.GetEntryWithReportUsage(PostedDocNo,ReportUsage,EmailParameter."Parameter Type"::Subject) then
        exit(EmailParameter.GetParameterValue);
      CompanyInformation.GET;
      if IdentityManagement.IsInvAppId then begin
        ReportSelections.ReportUsageToDocumentType(DocumentType,ReportUsage);
        case DocumentType of
          SalesHeader."Document Type"::Invoice:
            exit(STRSUBSTNO(InvoiceEmailSubjectTxt,CompanyInformation.Name));
          SalesHeader."Document Type"::Quote:
            exit(STRSUBSTNO(QuoteEmailSubjectTxt,CompanyInformation.Name));
        end;
      end;
      if PostedDocNo = '' then
        Subject := COPYSTR(
            STRSUBSTNO(EmailSubjectPluralCapTxt,CompanyInformation.Name,EmailDocumentName),1,MAXSTRLEN(Subject))
      else
        Subject := COPYSTR(
            STRSUBSTNO(EmailSubjectCapTxt,CompanyInformation.Name,EmailDocumentName,PostedDocNo),1,MAXSTRLEN(Subject))
    END;

    PROCEDURE GetTestInvoiceEmailBody@12(CustomerNo@1000 : Code[20]) : Text;
    VAR
      O365DefaultEmailMessage@1009 : Record "O365 Default Email Message";
      Customer@1007 : Record Customer;
      String@1011 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.String";
    BEGIN
      if Customer.GET(CustomerNo) then;
      String := O365DefaultEmailMessage.GetTestInvoiceMessage;
      exit(String.Replace(CustomerLbl,Customer.Name));
    END;

    PROCEDURE GetTestInvoiceEmailSubject@9() : Text[250];
    VAR
      CompanyInformation@1002 : Record "Company Information";
    BEGIN
      if CompanyInformation.GET then;
      exit(STRSUBSTNO(TestInvoiceEmailSubjectTxt,CompanyInformation.Name));
    END;

    PROCEDURE SendQuoteInForeground@6(SalesHeader@1002 : Record "Sales Header") : Boolean;
    VAR
      O365DocumentSentHistory@1000 : Record "O365 Document Sent History";
      ReportSelections@1001 : Record "Report Selections";
      O365SalesEmailManagement@1026 : Codeunit "O365 Sales Email Management";
    BEGIN
      if not O365SalesEmailManagement.ShowEmailDialog(SalesHeader."No.") then
        exit;

      O365DocumentSentHistory.NewInProgressFromQuote(SalesHeader);
      // 0 is the option number for ReportSelections.Usage::"S.Quote", which is renamed in RU
      if ReportSelections.SendEmailInForeground(
           SalesHeader.RECORDID,SalesHeader."No.",SalesHeader.GetDocTypeTxt,0,
           true,SalesHeader."Bill-to Customer No.")
      then begin
        O365DocumentSentHistory.SetStatusAsSuccessfullyFinished;
        exit(true);
      end;

      O365DocumentSentHistory.SetStatusAsFailed;
      exit(false);
    END;

    PROCEDURE SendPostedInvoiceInForeground@8(SalesInvoiceHeader@1002 : Record "Sales Invoice Header") : Boolean;
    VAR
      O365DocumentSentHistory@1000 : Record "O365 Document Sent History";
      ReportSelections@1001 : Record "Report Selections";
      O365SalesEmailManagement@1028 : Codeunit "O365 Sales Email Management";
    BEGIN
      if not O365SalesEmailManagement.ShowEmailDialog(SalesInvoiceHeader."No.") then
        exit;

      O365DocumentSentHistory.NewInProgressFromPostedInvoice(SalesInvoiceHeader);
      // 2 is the option number for ReportSelections.Usage::"S.Invoice", which is renamed in RU
      if ReportSelections.SendEmailInForeground(
           SalesInvoiceHeader.RECORDID,SalesInvoiceHeader."No.",'Invoice',2,
           true,SalesInvoiceHeader."Bill-to Customer No.")
      then begin
        O365DocumentSentHistory.SetStatusAsSuccessfullyFinished;
        exit(true);
      end;

      O365DocumentSentHistory.SetStatusAsFailed;
      exit(false);
    END;

    LOCAL PROCEDURE EmailFileInternal@7(VAR TempEmailItem@1000 : TEMPORARY Record "Email Item";AttachmentFilePath@1008 : Text[250];AttachmentFileName@1007 : Text[250];HtmlBodyFilePath@1006 : Text[250];EmailSubject@1002 : Text[250];ToEmailAddress@1001 : Text[250];PostedDocNo@1005 : Code[20];EmailDocName@1003 : Text[250];HideDialog@1004 : Boolean;ReportUsage@1010 : Integer;IsFromPostedDoc@1011 : Boolean) : Boolean;
    VAR
      OfficeMgt@1009 : Codeunit "Office Management";
    BEGIN
      with TempEmailItem do begin
        "Send to" := ToEmailAddress;

        // If true, that means we came from "EmailFile" call and need to get data from the document
        if IsFromPostedDoc then begin
          GetAttachmentFileName(AttachmentFileName,PostedDocNo,EmailDocName,ReportUsage);
          EmailSubject := GetEmailSubject(PostedDocNo,EmailDocName,ReportUsage);
          AddCcBcc;
          AttachIncomingDocuments(PostedDocNo);
        end;
        "Attachment File Path" := AttachmentFilePath;
        "Attachment Name" := AttachmentFileName;
        Subject := EmailSubject;

        if HtmlBodyFilePath <> '' then begin
          VALIDATE("Plaintext Formatted",false);
          VALIDATE("Body File Path",HtmlBodyFilePath);
        end;

        OnBeforeSendEmail(TempEmailItem,IsFromPostedDoc,PostedDocNo,HideDialog,ReportUsage);

        if OfficeMgt.AttachAvailable then
          OfficeMgt.AttachDocument(AttachmentFilePath,AttachmentFileName,GetBodyText,Subject)
        else
          exit(Send(HideDialog));
      end;
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeSendEmail@51(VAR TempEmailItem@1000 : TEMPORARY Record "Email Item";IsFromPostedDoc@1004 : Boolean;PostedDocNo@1001 : Code[20];HideDialog@1002 : Boolean;ReportUsage@1003 : Integer);
    BEGIN
    END;

    [External]
    PROCEDURE EmailFileFromStream@24(AttachementStream@1001 : InStream;AttachmentName@1006 : Text;Body@1007 : Text;Subject@1008 : Text;MailTo@1009 : Text;HideDialog@1011 : Boolean;ReportUsage@1012 : Integer) : Boolean;
    VAR
      TempEmailItem@1010 : TEMPORARY Record "Email Item";
      FileManagement@1004 : Codeunit "File Management";
      TempFile@1003 : File;
      OutStream@1002 : OutStream;
      TempFileName@1005 : Text;
    BEGIN
      TempFileName := FileManagement.ServerTempFileName('');
      TempFile.CREATE(TempFileName);

      TempFile.CREATEOUTSTREAM(OutStream);
      COPYSTREAM(OutStream,AttachementStream);
      TempFile.CLOSE;

      TempEmailItem.VALIDATE("Plaintext Formatted",true);
      TempEmailItem.SetBodyText(Body);

      exit(EmailFileInternal(
          TempEmailItem,
          COPYSTR(TempFileName,1,MAXSTRLEN(TempEmailItem."Attachment File Path")),
          COPYSTR(AttachmentName,1,MAXSTRLEN(TempEmailItem."Attachment Name")),
          '',
          COPYSTR(Subject,1,MAXSTRLEN(TempEmailItem.Subject)),
          COPYSTR(MailTo,1,MAXSTRLEN(TempEmailItem."Send to")),
          '',
          '',
          HideDialog,
          ReportUsage,
          false));
    END;

    [External]
    PROCEDURE EmailHtmlFromStream@10(MailInStream@1000 : InStream;ToEmailAddress@1006 : Text[250];Subject@1008 : Text;HideDialog@1003 : Boolean;ReportUsage@1010 : Integer) : Boolean;
    VAR
      TempEmailItem@1002 : TEMPORARY Record "Email Item";
      FileManagement@1011 : Codeunit "File Management";
      FileName@1005 : Text;
    BEGIN
      FileName := FileManagement.InstreamExportToServerFile(MailInStream,'html');
      exit(EmailFileInternal(
          TempEmailItem,
          '',
          '',
          COPYSTR(FileName,1,MAXSTRLEN(TempEmailItem."Body File Path")),
          COPYSTR(Subject,1,MAXSTRLEN(TempEmailItem.Subject)),
          COPYSTR(ToEmailAddress,1,MAXSTRLEN(TempEmailItem."Send to")),
          '',
          '',
          HideDialog,
          ReportUsage,
          false));
    END;

    BEGIN
    END.
  }
}

