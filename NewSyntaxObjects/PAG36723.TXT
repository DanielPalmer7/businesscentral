OBJECT Page 36723 Bank Rec. Adj. Lines
{
  OBJECT-PROPERTIES
  {
    Date=20180425D;
    Time=161728.283T;
    Modified=true;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Bank Rec. Adj. Lines;
    SourceTable="Bank Rec. Line";
    SourceTableView=SORTING("Bank Account No.","Statement No.","Record Type","Line No.")
                    WHERE("Record Type"=CONST(Adjustment));
    PageType=ListPart;
    AutoSplitKey=true;
    OnOpenPage=BEGIN
                 OnActivateForm;
               END;

    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                       AfterGetCurrentRecord;
                     END;

    OnNewRecord=BEGIN
                  SetUpNewLine(xRec,0,BelowxRec);
                  AfterGetCurrentRecord;
                END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Control1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Control1;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name="Posting Date";
                ToolTipML=ENU=Specifies the Statement Date for Check or Deposit type. For Adjustment type lines, the entry will be the actual date the posting.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Date";
                ImplicitType=Date }

    { 4   ;2   ;Field     ;
                Name="Document Type";
                ToolTipML=ENU=Specifies the type of document that the entry on the journal line is.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Type";
                ImplicitType=Option }

    { 6   ;2   ;Field     ;
                Name="Document No.";
                ToolTipML=ENU=Specifies a document number for the journal line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document No.";
                ImplicitType=Code20 }

    { 1020012;2;Field     ;
                Name="External Document No.";
                ToolTipML=ENU=Specifies a document number that refers to the customer's or vendor's numbering system.;
                SourceExpr="External Document No.";
                Visible=FALSE;
                ImplicitType=Code35 }

    { 1020000;2;Field     ;
                Name="Account Type";
                ToolTipML=ENU=Specifies the type of account that the journal line entry will be posted to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Account Type";
                ImplicitType=Option }

    { 1020002;2;Field     ;
                Name="Account No.";
                ToolTipML=ENU=Specifies the account number that the journal line entry will be posted to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Account No.";
                OnValidate=BEGIN
                             AccountNoOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 8   ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies a description of the transaction on the bank reconciliation line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 10  ;2   ;Field     ;
                Name=Amount;
                ToolTipML=ENU=Specifies the amount of the item, such as a check, that was deposited.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Amount;
                OnValidate=BEGIN
                             AmountOnAfterValidate;
                           END;

                ImplicitType=Decimal }

    { 1020008;2;Field     ;
                Name="Currency Code";
                ToolTipML=ENU=Specifies the currency code for the amounts on the line, as it will be posted to the G/L.;
                SourceExpr="Currency Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 1020010;2;Field     ;
                Name="Currency Factor";
                ToolTipML=ENU=Specifies a currency factor for the reconciliation sub-line entry. The value is calculated based on currency code, exchange rate, and the bank record header's statement date.;
                SourceExpr="Currency Factor";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 1020004;2;Field     ;
                Name="Bal. Account Type";
                ToolTipML=ENU=Specifies the code for the Balance Account Type that will be posted to the general ledger.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. Account Type";
                ImplicitType=Option }

    { 1020006;2;Field     ;
                Name="Bal. Account No.";
                ToolTipML=ENU=Specifies that you can select the number of the G/L, customer, vendor or bank account to which a balancing entry for the line will posted.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. Account No.";
                OnValidate=BEGIN
                             BalAccountNoOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 1020030;2;Field     ;
                Name="Shortcut Dimension 1 Code";
                ToolTipML=ENU=Specifies the dimension value code the journal line is linked to.;
                ApplicationArea=#Suite;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 1020032;2;Field     ;
                Name="Shortcut Dimension 2 Code";
                ToolTipML=ENU=Specifies the dimension value code the journal line is linked to.;
                ApplicationArea=#Suite;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 1020034;2;Field     ;
                Name="ShortcutDimCode[3]";
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(3),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 1020036;2;Field     ;
                Name="ShortcutDimCode[4]";
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(4),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 1020038;2;Field     ;
                Name="ShortcutDimCode[5]";
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(5),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 1020040;2;Field     ;
                Name="ShortcutDimCode[6]";
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(6),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 1020042;2;Field     ;
                Name="ShortcutDimCode[7]";
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(7),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 1020044;2;Field     ;
                Name="ShortcutDimCode[8]";
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(8),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

    { 1020014;2;Field     ;
                Name="Adj. Source Record ID";
                ToolTipML=ENU=Specifies what type of Bank Rec. Line record was the source for the created Adjustment line. The valid types are Check or Deposit.;
                SourceExpr="Adj. Source Record ID";
                Visible=FALSE;
                ImplicitType=Option }

    { 1020016;2;Field     ;
                Name="Adj. Source Document No.";
                ToolTipML=ENU=Specifies the Document number from the Bank Rec. Line record that was the source for the created Adjustment line.;
                SourceExpr="Adj. Source Document No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 1020018;1;Field     ;
                Name=Text000;
                SourceExpr=Text000;
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=TextConst }

    { 1020019;1;Field     ;
                Name=Control1020019;
                SourceExpr=Text000;
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=TextConst }

    { 1020024;1;Field     ;
                Name=AccName;
                CaptionML=ENU=Account Name;
                ToolTipML=ENU=Specifies the name of the bank account.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AccName;
                Editable=FALSE;
                ImplicitType=Text50 }

    { 1020021;1;Field     ;
                Name=BalAccName;
                CaptionML=ENU=Bal. Account Name;
                ToolTipML=ENU=Specifies the name of the balancing account.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BalAccName;
                ImplicitType=Text50 }

  }
  CODE
  {
    VAR
      AccName@1020003 : Text[50];
      BalAccName@1020002 : Text[50];
      ShortcutDimCode@1020005 : ARRAY [8] OF Code[20];
      LastBankRecLine@1020004 : Record "Bank Rec. Line";
      Text000@1020006 : TextConst 'ENU=Placeholder';

    [External]
    PROCEDURE SetupTotals@1020002();
    BEGIN
      // IF BankRecHdr.GET("Bank Account No.","Statement No.") THEN
      // BankRecHdr.CALCFIELDS("Total Adjustments","Total Balanced Adjustments");
      // CurrForm.TotalAdjustments.UPDATE;
    END;

    [External]
    PROCEDURE LookupLineDimensions@1020000();
    BEGIN
      ShowDimensions;
      CurrPage.SAVERECORD;
    END;

    [External]
    PROCEDURE GetTableID@1020001() : Integer;
    VAR
      Object@1020001 : Record Object;
    BEGIN
      Object.SETRANGE(Type,Object.Type::Table);
      Object.SETRANGE(Name,TABLENAME);
      Object.FINDFIRST;
      exit(Object.ID);
    END;

    [External]
    PROCEDURE GetAccounts@7(VAR BankRecLine@1000 : Record "Bank Rec. Line";VAR AccName@1001 : Text[50];VAR BalAccName@1002 : Text[50]);
    VAR
      GLAcc@1003 : Record "G/L Account";
      Cust@1004 : Record Customer;
      Vend@1005 : Record Vendor;
      BankAcc@1006 : Record "Bank Account";
      FA@1007 : Record "Fixed Asset";
    BEGIN
      if (BankRecLine."Account Type" <> LastBankRecLine."Account Type") or
         (BankRecLine."Account No." <> LastBankRecLine."Account No.")
      then begin
        AccName := '';
        if BankRecLine."Account No." <> '' then
          case BankRecLine."Account Type" of
            BankRecLine."Account Type"::"G/L Account":
              if GLAcc.GET(BankRecLine."Account No.") then
                AccName := GLAcc.Name;
            BankRecLine."Account Type"::Customer:
              if Cust.GET(BankRecLine."Account No.") then
                AccName := Cust.Name;
            BankRecLine."Account Type"::Vendor:
              if Vend.GET(BankRecLine."Account No.") then
                AccName := Vend.Name;
            BankRecLine."Account Type"::"Bank Account":
              if BankAcc.GET(BankRecLine."Account No.") then
                AccName := BankAcc.Name;
            BankRecLine."Account Type"::"Fixed Asset":
              if FA.GET(BankRecLine."Account No.") then
                AccName := FA.Description;
          end;
      end;

      if (BankRecLine."Bal. Account Type" <> LastBankRecLine."Bal. Account Type") or
         (BankRecLine."Bal. Account No." <> LastBankRecLine."Bal. Account No.")
      then begin
        BalAccName := '';
        if BankRecLine."Bal. Account No." <> '' then
          case BankRecLine."Bal. Account Type" of
            BankRecLine."Bal. Account Type"::"G/L Account":
              if GLAcc.GET(BankRecLine."Bal. Account No.") then
                BalAccName := GLAcc.Name;
            BankRecLine."Bal. Account Type"::Customer:
              if Cust.GET(BankRecLine."Bal. Account No.") then
                BalAccName := Cust.Name;
            BankRecLine."Bal. Account Type"::Vendor:
              if Vend.GET(BankRecLine."Bal. Account No.") then
                BalAccName := Vend.Name;
            BankRecLine."Bal. Account Type"::"Bank Account":
              if BankAcc.GET(BankRecLine."Bal. Account No.") then
                BalAccName := BankAcc.Name;
            BankRecLine."Bal. Account Type"::"Fixed Asset":
              if FA.GET(BankRecLine."Bal. Account No.") then
                BalAccName := FA.Description;
          end;
      end;

      LastBankRecLine := BankRecLine;
    END;

    LOCAL PROCEDURE AccountNoOnAfterValidate@19049580();
    BEGIN
      GetAccounts(Rec,AccName,BalAccName);
      ShowShortcutDimCode(ShortcutDimCode);
    END;

    LOCAL PROCEDURE AmountOnAfterValidate@19024931();
    BEGIN
      CurrPage.UPDATE(true);
      SetupTotals;
    END;

    LOCAL PROCEDURE BalAccountNoOnAfterValidate@19028835();
    BEGIN
      GetAccounts(Rec,AccName,BalAccName);
      ShowShortcutDimCode(ShortcutDimCode);
    END;

    LOCAL PROCEDURE AfterGetCurrentRecord@19077479();
    BEGIN
      xRec := Rec;
      GetAccounts(Rec,AccName,BalAccName);
    END;

    LOCAL PROCEDURE OnActivateForm@19002417();
    BEGIN
      SetupTotals;
    END;

    BEGIN
    END.
  }
}

