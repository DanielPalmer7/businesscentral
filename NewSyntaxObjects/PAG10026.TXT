OBJECT Page 10026 Sales Order Shipment
{
  OBJECT-PROPERTIES
  {
    Date=20180425D;
    Time=161713.787T;
    Modified=true;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Sales Order Shipment;
    InsertAllowed=false;
    DeleteAllowed=false;
    SourceTable="Sales Header";
    SourceTableView=WHERE("Document Type"=FILTER(Order));
    PageType=Document;
    RefreshOnActivate=true;
    OnInit=BEGIN
             "Tax Area CodeEditable" := true;
             "Package Tracking No.Editable" := true;
             "Shipment Method CodeEditable" := true;
             "Shipping Agent CodeEditable" := true;
             "Shipment DateEditable" := true;
             "Location CodeEditable" := true;
             "Ship-to CountyEditable" := true;
             "Ship-to CodeEditable" := true;
             "Ship-to Post CodeEditable" := true;
             "Ship-to ContactEditable" := true;
             "Ship-to CityEditable" := true;
             "Ship-to Address 2Editable" := true;
             "Ship-to AddressEditable" := true;
             "Ship-to NameEditable" := true;
             "Document DateEditable" := true;
             "Salesperson CodeEditable" := true;
             "Posting DateEditable" := true;
           END;

    OnOpenPage=BEGIN
                 if UserMgt.GetSalesFilter <> '' then begin
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetSalesFilter);
                   FILTERGROUP(0);
                 end;

                 SETRANGE("Date Filter",0D,WORKDATE - 1);
               END;

    OnAfterGetRecord=BEGIN
                       AfterGetCurrentRecord;
                     END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserMgt.GetSalesFilter;
                  AfterGetCurrentRecord;
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     exit(ConfirmDeletion);
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 59      ;1   ;ActionGroup;
                      Name="O&rder";
                      CaptionML=ENU=O&rder;
                      Image=Order }
      { 61      ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=ENU=Statistics;
                      ToolTipML=ENU=View statistical information, such as the value of posted entries, for the record.;
                      Promoted=true;
                      Image=Statistics;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SalesSetup.GET;
                                 if SalesSetup."Calc. Inv. Discount" then begin
                                   CurrPage.SalesLines.PAGE.CalcInvDisc;
                                   COMMIT
                                 end;
                                 OnBeforeCalculateSalesTaxStatistics(Rec,true);
                                 if "Tax Area Code" = '' then
                                   PAGE.RUNMODAL(PAGE::"Sales Order Statistics",Rec)
                                 else
                                   PAGE.RUNMODAL(PAGE::"Sales Order Stats.",Rec)
                               END;
                                }
      { 62      ;2   ;Action    ;
                      Name=Card;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Card;
                      ToolTipML=ENU=Open the card for the customer.;
                      RunObject=Page "Customer Card";
                      RunPageLink="No."=FIELD("Sell-to Customer No.");
                      Image=EditLines }
      { 63      ;2   ;Action    ;
                      Name="Co&mments";
                      CaptionML=ENU=Co&mments;
                      ToolTipML=ENU=View comments that apply.;
                      RunObject=Page "Sales Comment Sheet";
                      RunPageLink="Document Type"=FIELD("Document Type"),
                                  "No."=FIELD("No.");
                      Image=ViewComments }
      { 64      ;2   ;Action    ;
                      Name="S&hipments";
                      CaptionML=ENU=S&hipments;
                      ToolTipML=ENU=View posted sales shipments for the customer.;
                      RunObject=Page "Posted Sales Shipments";
                      RunPageView=SORTING("Order No.");
                      RunPageLink="Order No."=FIELD("No.");
                      Image=Shipment }
      { 65      ;2   ;Action    ;
                      Name=Invoices;
                      CaptionML=ENU=Invoices;
                      ToolTipML=ENU=View the history of posted sales invoices that have been posted for the document.;
                      RunObject=Page "Posted Sales Invoices";
                      RunPageView=SORTING("Order No.");
                      RunPageLink="Order No."=FIELD("No.");
                      Image=Invoice }
      { 122     ;2   ;Action    ;
                      Name=Dimensions;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 197     ;2   ;Action    ;
                      Name="Order &Promising";
                      CaptionML=ENU=Order &Promising;
                      ToolTipML=ENU=View any order promising lines that are related to the shipment.;
                      Image=OrderPromising;
                      OnAction=VAR
                                 OrderPromisingLine@1000 : TEMPORARY Record "Order Promising Line";
                               BEGIN
                                 OrderPromisingLine.SETRANGE("Source Type","Document Type");
                                 OrderPromisingLine.SETRANGE("Source ID","No.");
                                 PAGE.RUNMODAL(PAGE::"Order Promising Lines",OrderPromisingLine);
                               END;
                                }
      { 1900000006;0 ;ActionContainer;
                      Name=ActionContainer1900000006;
                      ActionContainerType=Reports }
      { 1903171306;1 ;Action    ;
                      Name="Sales Shipment per Package";
                      CaptionML=ENU=Sales Shipment per Package;
                      ToolTipML=ENU=View sales shipment information for each package. Information includes shipment number, shipment date, number of units, items shipped, items ordered, and items placed on back order.;
                      RunObject=Report "Sales Shipment per Package";
                      Promoted=false;
                      Image=Report;
                      PromotedCategory=Report }
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 66      ;1   ;ActionGroup;
                      Name="F&unctions";
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 134     ;2   ;Action    ;
                      Name="Re&open";
                      CaptionML=ENU=Re&open;
                      ToolTipML=ENU=Reopen the document to change it after it has been approved. Approved documents have the Released status and must be opened before they can be changed.;
                      Image=ReOpen;
                      OnAction=VAR
                                 ReleaseSalesDoc@1001 : Codeunit "Release Sales Document";
                               BEGIN
                                 ReleaseSalesDoc.Reopen(Rec);
                               END;
                                }
      { 73      ;1   ;ActionGroup;
                      Name="P&osting";
                      CaptionML=ENU=P&osting;
                      Image=Post }
      { 74      ;2   ;Action    ;
                      Name="Test Report";
                      Ellipsis=true;
                      CaptionML=ENU=Test Report;
                      ToolTipML=ENU=View a test report so that you can find and correct any errors before you perform the actual posting of the journal or document.;
                      Image=TestReport;
                      OnAction=BEGIN
                                 OnBeforeCalculateSalesTaxStatistics(Rec,false);
                                 ReportPrint.PrintSalesHeader(Rec);
                               END;
                                }
      { 75      ;2   ;Action    ;
                      Name="P&ost";
                      ShortCutKey=F9;
                      Ellipsis=true;
                      CaptionML=ENU=P&ost;
                      ToolTipML=ENU=Finalize the document or journal by posting the amounts and quantities to the related accounts in your company books.;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=Post;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ApprovalsMgmt@1020001 : Codeunit "Approvals Mgmt.";
                                 PrepaymentMgt@1020000 : Codeunit "Prepayment Mgt.";
                               BEGIN
                                 if ApprovalsMgmt.PrePostApprovalCheckSales(Rec) then begin
                                   if PrepaymentMgt.TestSalesPrepayment(Rec) then
                                     ERROR(STRSUBSTNO(Text001,"Document Type","No."));

                                   if PrepaymentMgt.TestSalesPayment(Rec) then
                                     ERROR(STRSUBSTNO(Text002,"Document Type","No."));

                                   SalesLine.VALIDATE("Document Type","Document Type");
                                   SalesLine.VALIDATE("Document No.","No.");
                                   SalesLine.InsertFreightLine(FreightAmount);
                                   CODEUNIT.RUN(CODEUNIT::"Ship-Post (Yes/No)",Rec);
                                   if "Shipping No." = '-1' then
                                     ERROR('');
                                 end;
                               END;
                                }
      { 76      ;2   ;Action    ;
                      Name="Post and &Print";
                      ShortCutKey=Shift+F9;
                      Ellipsis=true;
                      CaptionML=ENU=Post and &Print;
                      ToolTipML=ENU=Finalize and prepare to print the document or journal. The values and quantities are posted to the related accounts. A report request window where you can specify what to include on the print-out.;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ApprovalsMgmt@1020002 : Codeunit "Approvals Mgmt.";
                                 PrepaymentMgt@1020000 : Codeunit "Prepayment Mgt.";
                               BEGIN
                                 if ApprovalsMgmt.PrePostApprovalCheckSales(Rec) then begin
                                   if PrepaymentMgt.TestSalesPrepayment(Rec) then
                                     ERROR(STRSUBSTNO(Text001,"Document Type","No."));

                                   if PrepaymentMgt.TestSalesPayment(Rec) then
                                     ERROR(STRSUBSTNO(Text002,"Document Type","No."));

                                   SalesLine.VALIDATE("Document Type","Document Type");
                                   SalesLine.VALIDATE("Document No.","No.");
                                   SalesLine.InsertFreightLine(FreightAmount);
                                   CODEUNIT.RUN(CODEUNIT::"Ship-Post + Print",Rec);
                                   if "Shipping No." = '-1' then
                                     ERROR('');
                                 end;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Control1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General }

    { 2   ;2   ;Field     ;
                Name="No.";
                ToolTipML=ENU=Specifies the number of the record.;
                SourceExpr="No.";
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               if AssistEdit(xRec) then
                                 CurrPage.UPDATE;
                             END;

                ImplicitType=Code20 }

    { 4   ;2   ;Field     ;
                Name="Sell-to Customer No.";
                ToolTipML=ENU=Specifies the number of the customer that you shipped the items to.;
                SourceExpr="Sell-to Customer No.";
                Editable=FALSE;
                OnValidate=BEGIN
                             SelltoCustomerNoOnAfterValidat;
                           END;

                ImplicitType=Code20 }

    { 6   ;2   ;Field     ;
                Name="Sell-to Customer Name";
                ToolTipML=ENU=Specifies the name of the customer that you shipped the items to.;
                SourceExpr="Sell-to Customer Name";
                Editable=FALSE;
                ImplicitType=Text50 }

    { 1020001;2;Field     ;
                Name="Bill-to Customer No.";
                ToolTipML=ENU=Specifies the number of the customer that the items are shipped to.;
                SourceExpr="Bill-to Customer No.";
                Editable=FALSE;
                ImplicitType=Code20 }

    { 1020005;2;Field     ;
                Name="Bill-to Name";
                ToolTipML=ENU=Specifies the name of the customer that the items are shipped to.;
                SourceExpr="Bill-to Name";
                Editable=FALSE;
                ImplicitType=Text50 }

    { 1020002;2;Field     ;
                Name="Tax Liable";
                ToolTipML=ENU=Specifies if the customer or vendor is liable for sales tax.;
                SourceExpr="Tax Liable";
                Editable=FALSE;
                ImplicitType=Boolean }

    { 12  ;2   ;Field     ;
                Name="Posting Date";
                ToolTipML=ENU=Specifies the date when the sales order was shipped.;
                SourceExpr="Posting Date";
                Editable="Posting DateEditable";
                ImplicitType=Date }

    { 14  ;2   ;Field     ;
                Name="Order Date";
                ToolTipML=ENU=Specifies the date on which the related sales order was created.;
                SourceExpr="Order Date";
                Editable="Order DateEditable";
                ImplicitType=Date }

    { 45  ;2   ;Field     ;
                Name="Document Date";
                ToolTipML=ENU=Specifies the date on which you created the sales document.;
                SourceExpr="Document Date";
                Editable="Document DateEditable";
                ImplicitType=Date }

    { 135 ;2   ;Field     ;
                Name="Requested Delivery Date";
                ToolTipML=ENU=Specifies the date that your customer has requested to have the items delivered. The value in this field is used to calculate the shipment date, which is the date when the items must be available in inventory. If the customer does not request a date, leave the field blank, and the earliest possible date.;
                SourceExpr="Requested Delivery Date";
                ImplicitType=Date }

    { 137 ;2   ;Field     ;
                Name="Promised Delivery Date";
                ToolTipML=ENU=Specifies the delivery date that you promised the customer for the items on this line as a result of the Order Promising function.;
                SourceExpr="Promised Delivery Date";
                Editable=FALSE;
                ImplicitType=Date }

    { 10  ;2   ;Field     ;
                Name="Salesperson Code";
                ToolTipML=ENU=Specifies the salesperson that is assigned to the order.;
                SourceExpr="Salesperson Code";
                Editable="Salesperson CodeEditable";
                ImplicitType=Code20 }

    { 1020007;2;Field     ;
                Name="Shortcut Dimension 1 Code";
                ToolTipML=ENU=Specifies the dimension value code that the sales line is associated with.;
                SourceExpr="Shortcut Dimension 1 Code";
                Editable=FALSE;
                ImplicitType=Code20 }

    { 1020009;2;Field     ;
                Name="Shortcut Dimension 2 Code";
                ToolTipML=ENU=Specifies the dimension value code that the sales line is associated with.;
                SourceExpr="Shortcut Dimension 2 Code";
                Editable=FALSE;
                ImplicitType=Code20 }

    { 129 ;2   ;Field     ;
                Name=Status;
                ToolTipML=ENU=Specifies the status of the document.;
                SourceExpr=Status;
                Editable=FALSE;
                ImplicitType=Option }

    { 1020011;2;Field     ;
                Name="On Hold";
                ToolTipML=ENU=Specifies if the document was put on hold when it was posted, for example because payment of the resulting customer ledger entries is overdue.;
                SourceExpr="On Hold";
                Editable=FALSE;
                ImplicitType=Code3 }

    { 58  ;1   ;Part      ;
                Name=SalesLines;
                SubPageLink="Document No."=FIELD("No.");
                PagePartID="Sales Order Shipment Subform";
                PartType=Page }

    { 1906801201;1;Group  ;
                Name=Shipping;
                CaptionML=ENU=Shipping }

    { 1020032;2;Field     ;
                Name="Ship-to Code";
                ToolTipML=ENU=Specifies the address that items were shipped to. This field is used when multiple the customer has multiple ship-to addresses.;
                SourceExpr="Ship-to Code";
                Editable="Ship-to CodeEditable";
                ImplicitType=Code10 }

    { 1020030;2;Field     ;
                Name="Ship-to Name";
                ToolTipML=ENU=Specifies the name of the customer at the address that the items were shipped to.;
                SourceExpr="Ship-to Name";
                Editable="Ship-to NameEditable";
                ImplicitType=Text50 }

    { 1020028;2;Field     ;
                Name="Ship-to Address";
                ToolTipML=ENU=Specifies the address that the items were shipped to.;
                SourceExpr="Ship-to Address";
                Editable="Ship-to AddressEditable";
                ImplicitType=Text50 }

    { 1020026;2;Field     ;
                Name="Ship-to Address 2";
                ToolTipML=ENU=Specifies an additional part of the address that the items were shipped to.;
                SourceExpr="Ship-to Address 2";
                Editable="Ship-to Address 2Editable";
                ImplicitType=Text50 }

    { 1020024;2;Field     ;
                Name="Ship-to City";
                ToolTipML=ENU=Specifies the city that the items were shipped to.;
                SourceExpr="Ship-to City";
                Editable="Ship-to CityEditable";
                ImplicitType=Text30 }

    { 1020022;2;Field     ;
                Name="Ship-to County";
                CaptionML=[ENU=Ship-to State / ZIP Code;
                           ENC=Ship-to Prov./State / Post./ZIP Code];
                ToolTipML=ENU=Specifies the ship-state, ZIP code, ship-to province code, state code, ZIP Code, or ZIP code as a part of the address.;
                SourceExpr="Ship-to County";
                Editable="Ship-to CountyEditable";
                ImplicitType=Text30 }

    { 1020021;2;Field     ;
                Name="Ship-to Post Code";
                ToolTipML=ENU=Specifies the ZIP Code at the address that the items were shipped to.;
                SourceExpr="Ship-to Post Code";
                Editable="Ship-to Post CodeEditable";
                ImplicitType=Code20 }

    { 1020016;2;Field     ;
                Name="Ship-to Contact";
                ToolTipML=ENU=Specifies the contact person at the address that the items were shipped to.;
                SourceExpr="Ship-to Contact";
                Editable="Ship-to ContactEditable";
                ImplicitType=Text50 }

    { 1020015;2;Field     ;
                Name="Ship-to UPS Zone";
                ToolTipML=ENU=Specifies a UPS Zone code for this document, if UPS is used for shipments.;
                SourceExpr="Ship-to UPS Zone";
                ImplicitType=Code2 }

    { 1020014;2;Field     ;
                Name="Tax Area Code";
                ToolTipML=ENU=Specifies the tax area that is used to calculate and post sales tax.;
                SourceExpr="Tax Area Code";
                Editable="Tax Area CodeEditable";
                ImplicitType=Code20 }

    { 1020013;2;Field     ;
                Name=FreightAmount;
                CaptionML=ENU=Freight Amount;
                ToolTipML=ENU=Specifies the freight amount for the shipment. When you create a sales order, you can specify freight charges as item charges on the sales order, or you can specify the freight charges in the Sales Order Shipment window.;
                SourceExpr=FreightAmount;
                ImplicitType=Decimal }

    { 1020049;2;Field     ;
                Name="Location Code";
                ToolTipML=ENU=Specifies the location from where inventory items are to be shipped by default, to the customer on the sales document.;
                SourceExpr="Location Code";
                Editable="Location CodeEditable";
                ImplicitType=Code10 }

    { 1020048;2;Field     ;
                Name="Outbound Whse. Handling Time";
                ToolTipML=ENU=Specifies the outbound warehouse handling time, which is used to calculate the planned shipment date.;
                SourceExpr="Outbound Whse. Handling Time";
                ImplicitType=DateFormula }

    { 1020047;2;Field     ;
                Name="Shipment Method Code";
                ToolTipML=ENU=Specifies how items on the sales document are shipped to the customer. By default, the field is filled with the value in the Shipment Method Code field on the customer card.;
                SourceExpr="Shipment Method Code";
                Editable="Shipment Method CodeEditable";
                ImplicitType=Code10 }

    { 1020046;2;Field     ;
                Name="Shipping Agent Code";
                ToolTipML=ENU=Specifies which shipping company will be used when you ship items to the customer.;
                SourceExpr="Shipping Agent Code";
                Editable="Shipping Agent CodeEditable";
                ImplicitType=Code10 }

    { 1020045;2;Field     ;
                Name="Shipping Agent Service Code";
                ToolTipML=ENU=Specifies the code for the shipping agent service to use for this customer.;
                SourceExpr="Shipping Agent Service Code";
                ImplicitType=Code10 }

    { 1020044;2;Field     ;
                Name="Shipping Time";
                ToolTipML=ENU=Specifies the shipping time of the order. That is, the time it takes from when the order is shipped from the warehouse to when the order is delivered to the customer's address.;
                SourceExpr="Shipping Time";
                ImplicitType=DateFormula }

    { 1020043;2;Field     ;
                Name="Late Order Shipping";
                ToolTipML=ENU=Specifies that the shipment of one or more lines has been delayed, or that the shipment date is before the work date.;
                SourceExpr="Late Order Shipping";
                ImplicitType=Boolean }

    { 1020042;2;Field     ;
                Name="Package Tracking No.";
                ToolTipML=ENU=Specifies the shipping agent's package number.;
                SourceExpr="Package Tracking No.";
                Editable="Package Tracking No.Editable";
                ImplicitType=Text30 }

    { 1020050;2;Field     ;
                Name="Shipment Date";
                ToolTipML=ENU=Specifies the date when the items were shipped.;
                SourceExpr="Shipment Date";
                Editable="Shipment DateEditable";
                ImplicitType=Date }

    { 1020052;2;Field     ;
                Name="Shipping Advice";
                ToolTipML=ENU="Specifies if the customer accepts partial shipment of orders. If you select Partial, then the Qty. To Ship field can be lower than the Quantity field on sales lines.  ";
                SourceExpr="Shipping Advice";
                ImplicitType=Option }

    { 1900000007;0;Container;
                Name=Control1900000007;
                ContainerType=FactBoxArea }

    { 1903720907;1;Part   ;
                Name=Control1903720907;
                SubPageLink="No."=FIELD("Sell-to Customer No.");
                PagePartID="Sales Hist. Sell-to FactBox";
                Visible=TRUE;
                Editable=FALSE;
                PartType=Page }

    { 1902018507;1;Part   ;
                Name=Control1902018507;
                SubPageLink="No."=FIELD("Bill-to Customer No.");
                PagePartID="Customer Statistics FactBox";
                Visible=TRUE;
                Editable=FALSE;
                PartType=Page }

    { 1900316107;1;Part   ;
                Name=Control1900316107;
                SubPageLink="No."=FIELD("Sell-to Customer No.");
                PagePartID="Customer Details FactBox";
                Visible=TRUE;
                Editable=FALSE;
                PartType=Page }

    { 1906127307;1;Part   ;
                Name=Control1906127307;
                SubPageLink="Document Type"=FIELD("Document Type"),
                            "Document No."=FIELD("Document No."),
                            "Line No."=FIELD("Line No.");
                PagePartID="Sales Line FactBox";
                ProviderID=58;
                Visible=TRUE;
                Editable=FALSE;
                PartType=Page }

    { 1901314507;1;Part   ;
                Name=Control1901314507;
                SubPageLink="No."=FIELD("No.");
                PagePartID="Item Invoicing FactBox";
                ProviderID=58;
                Visible=TRUE;
                Editable=FALSE;
                PartType=Page }

    { 1906354007;1;Part   ;
                Name=Control1906354007;
                SubPageLink="Table ID"=CONST(36),
                            "Document Type"=FIELD("Document Type"),
                            "Document No."=FIELD("No."),
                            Status=CONST(Open);
                PagePartID="Approval FactBox";
                Visible=TRUE;
                Editable=FALSE;
                PartType=Page }

    { 1901796907;1;Part   ;
                Name=Control1901796907;
                SubPageLink="No."=FIELD("No.");
                PagePartID="Item Warehouse FactBox";
                ProviderID=58;
                Visible=FALSE;
                Editable=FALSE;
                PartType=Page }

    { 1907234507;1;Part   ;
                Name=Control1907234507;
                SubPageLink="No."=FIELD("Bill-to Customer No.");
                PagePartID="Sales Hist. Bill-to FactBox";
                Visible=FALSE;
                Editable=FALSE;
                PartType=Page }

    { 1905767507;1;Part   ;
                Name=Control1905767507;
                Visible=TRUE;
                Editable=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Unable to run this function while in View mode.';
      SalesLine@1020002 : Record "Sales Line";
      ReportPrint@1002 : Codeunit "Test Report-Print";
      SalesSetup@1004 : Record "Sales & Receivables Setup";
      UserMgt@1006 : Codeunit "User Setup Management";
      FreightAmount@1020000 : Decimal;
      Text001@1020004 : TextConst 'ENU=There are non posted Prepayment Amounts on %1 %2.';
      Text002@1020005 : TextConst 'ENU=There are unpaid Prepayment Invoices related to %1 %2.';
      "Posting DateEditable"@19008133 : Boolean INDATASET;
      "Order DateEditable"@19041498 : Boolean INDATASET;
      "Salesperson CodeEditable"@19071610 : Boolean INDATASET;
      "Document DateEditable"@19066404 : Boolean INDATASET;
      "Ship-to NameEditable"@19016985 : Boolean INDATASET;
      "Ship-to AddressEditable"@19079345 : Boolean INDATASET;
      "Ship-to Address 2Editable"@19047538 : Boolean INDATASET;
      "Ship-to CityEditable"@19063178 : Boolean INDATASET;
      "Ship-to ContactEditable"@19023233 : Boolean INDATASET;
      "Ship-to Post CodeEditable"@19021188 : Boolean INDATASET;
      "Ship-to CodeEditable"@19068609 : Boolean INDATASET;
      "Ship-to CountyEditable"@19069973 : Boolean INDATASET;
      "Location CodeEditable"@19048234 : Boolean INDATASET;
      "Shipment DateEditable"@19046400 : Boolean INDATASET;
      "Shipping Agent CodeEditable"@19058680 : Boolean INDATASET;
      "Shipment Method CodeEditable"@19044334 : Boolean INDATASET;
      "Package Tracking No.Editable"@19044372 : Boolean INDATASET;
      "Tax Area CodeEditable"@19010329 : Boolean INDATASET;

    [External]
    PROCEDURE UpdateAllowed@1() : Boolean;
    BEGIN
      if CurrPage.EDITABLE = false then
        ERROR(Text000);
      exit(true);
    END;

    [External]
    PROCEDURE OrderOnHold@1000(OnHold@1020000 : Boolean);
    BEGIN
      "Posting DateEditable" := not OnHold;
      "Order DateEditable" := not OnHold;
      "Salesperson CodeEditable" := not OnHold;
      "Document DateEditable" := not OnHold;
      "Ship-to NameEditable" := not OnHold;
      "Ship-to AddressEditable" := not OnHold;
      "Ship-to Address 2Editable" := not OnHold;
      "Ship-to CityEditable" := not OnHold;
      "Ship-to ContactEditable" := not OnHold;
      "Ship-to Post CodeEditable" := not OnHold;
      "Ship-to CodeEditable" := not OnHold;
      "Ship-to CountyEditable" := not OnHold;
      // CurrForm."Ship-to UPS Zone".EDITABLE := NOT OnHold;
      "Location CodeEditable" := not OnHold;
      "Shipment DateEditable" := not OnHold;
      "Shipping Agent CodeEditable" := not OnHold;
      "Shipment Method CodeEditable" := not OnHold;
      "Package Tracking No.Editable" := not OnHold;
      "Tax Area CodeEditable" := not OnHold;

      CurrPage.SalesLines.PAGE.OrderOnHold(OnHold);
    END;

    LOCAL PROCEDURE SelltoCustomerNoOnAfterValidat@19034782();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE AfterGetCurrentRecord@19077479();
    BEGIN
      xRec := Rec;
      SETRANGE("Date Filter",0D,WORKDATE - 1);

      OrderOnHold("On Hold" <> '');
    END;

    [Integration]
    [External]
    LOCAL PROCEDURE OnBeforeCalculateSalesTaxStatistics@1020000(VAR SalesHeader@1020000 : Record "Sales Header";ShowDialog@1020001 : Boolean);
    BEGIN
    END;

    BEGIN
    END.
  }
}

