OBJECT Codeunit 2112 O365 Sales Attachment Mgt
{
  OBJECT-PROPERTIES
  {
    Date=20180425D;
    Time=160715.130T;
    Modified=true;
    Version List=;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      NotSupportedMsg@1002 : TextConst 'ENU=Cannot view this file type.';
      PhotoLbl@1001 : TextConst '@@@="%1 = a number, e.g. 1, 2, 3,...";ENU=Photo %1';
      MovieLbl@1000 : TextConst '@@@="%1 = a number, e.g. 1, 2, 3,...";ENU=Movie %1';

    [External]
    PROCEDURE GetNoOfAttachments@124(RecordVariant@1002 : Variant) : Integer;
    VAR
      IncomingDocumentAttachment@1000 : Record "Incoming Document Attachment";
      SalesHeader@1001 : Record "Sales Header";
      SalesInvoiceHeader@1003 : Record "Sales Invoice Header";
      RecordRef@1004 : RecordRef;
    BEGIN
      RecordRef.GETTABLE(RecordVariant);
      if RecordRef.NUMBER = DATABASE::"Sales Header" then begin
        SalesHeader := RecordVariant;
        if SalesHeader."Incoming Document Entry No." = 0 then
          exit(0);
        IncomingDocumentAttachment.SETRANGE("Incoming Document Entry No.",SalesHeader."Incoming Document Entry No.");
        exit(IncomingDocumentAttachment.COUNT);
      end;
      if RecordRef.NUMBER = DATABASE::"Sales Invoice Header" then begin
        SalesInvoiceHeader := RecordVariant;
        IncomingDocumentAttachment.SETRANGE("Document No.",SalesInvoiceHeader."No.");
        IncomingDocumentAttachment.SETRANGE("Posting Date",SalesInvoiceHeader."Posting Date");
        exit(IncomingDocumentAttachment.COUNT);
      end;
    END;

    [External]
    PROCEDURE EditAttachments@123(RecordVariant@1000 : Variant) NoOfAttachments : Integer;
    VAR
      IncomingDocument@1001 : Record "Incoming Document";
      SalesHeader@1003 : Record "Sales Header";
      RecordRef@1004 : RecordRef;
    BEGIN
      RecordRef.GETTABLE(RecordVariant);
      if not RecordRef.FIND then
        exit;
      RecordVariant := RecordRef;
      if RecordRef.NUMBER = DATABASE::"Sales Header" then begin
        SalesHeader := RecordVariant;
        if SalesHeader."Incoming Document Entry No." = 0 then begin
          SalesHeader."Incoming Document Entry No." := IncomingDocument.CreateIncomingDocument(SalesHeader."Sell-to Customer Name",'');
          SalesHeader.MODIFY;
          COMMIT;
          RecordVariant := SalesHeader;
        end;
        PAGE.RUN(PAGE::"O365 Sales Doc. Attachments",SalesHeader);
      end;
      if RecordRef.NUMBER = DATABASE::"Sales Invoice Header" then
        PAGE.RUN(PAGE::"O365 Posted Sales Inv. Att.",RecordVariant);
      NoOfAttachments := GetNoOfAttachments(RecordVariant);
    END;

    PROCEDURE ImportAttachmentFromFileSystem@5(VAR IncomingDocumentAttachmentOrig@1001 : Record "Incoming Document Attachment");
    VAR
      IncomingDocumentAttachment@1000 : Record "Incoming Document Attachment";
    BEGIN
      IncomingDocumentAttachment.INIT;
      IncomingDocumentAttachment.COPYFILTERS(IncomingDocumentAttachmentOrig);
      IncomingDocumentAttachment.NewAttachment;
      case IncomingDocumentAttachment.Type of
        IncomingDocumentAttachment.Type::Image:
          IncomingDocumentAttachment.Name :=
            COPYSTR(
              STRSUBSTNO(PhotoLbl,IncomingDocumentAttachment."Line No." div 10000),1,MAXSTRLEN(IncomingDocumentAttachment.Name));
        IncomingDocumentAttachment.Type::Other:
          if UPPERCASE(IncomingDocumentAttachment."File Extension") = 'MOV' then
            IncomingDocumentAttachment.Name :=
              COPYSTR(
                STRSUBSTNO(MovieLbl,IncomingDocumentAttachment."Line No." div 10000),1,MAXSTRLEN(IncomingDocumentAttachment.Name));
      end;
      IncomingDocumentAttachment.MODIFY;
    END;

    PROCEDURE OpenAttachmentPreviewIfSupported@1(IncomingDocumentAttachment@1000 : Record "Incoming Document Attachment");
    BEGIN
      with IncomingDocumentAttachment do begin
        CALCFIELDS(Content);
        if not Content.HASVALUE then
          exit;

        case Type of
          Type::Image:
            PAGE.RUNMODAL(PAGE::"O365 Incoming Doc. Att. Pict.",IncomingDocumentAttachment);
          Type::PDF:
            Export(Name + '.' + "File Extension",true)
          else
            MESSAGE(NotSupportedMsg);
        end;
      end
    END;

    BEGIN
    END.
  }
}

