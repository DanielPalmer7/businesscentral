OBJECT Page 10120 Bank Rec. Worksheet
{
  OBJECT-PROPERTIES
  {
    Date=20180425D;
    Time=161719.923T;
    Modified=true;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Bank Rec. Worksheet;
    SourceTable="Bank Rec. Header";
    PageType=Card;
    RefreshOnActivate=true;
    OnOpenPage=BEGIN
                 RefreshSharedTempTable;
               END;

    OnClosePage=BEGIN
                  RefreshSharedTempTable;
                END;

    OnAfterGetRecord=BEGIN
                       AfterGetCurrentRecord;
                     END;

    OnNewRecord=BEGIN
                  AfterGetCurrentRecord;
                  RefreshSharedTempTable;
                END;

    OnModifyRecord=BEGIN
                     MODIFY(true);
                     RefreshSharedTempTable;
                   END;

    OnDeleteRecord=BEGIN
                     RefreshSharedTempTable;
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 1020050 ;1   ;ActionGroup;
                      Name="&Bank Rec.";
                      CaptionML=ENU=&Bank Rec. }
      { 1020066 ;2   ;Action    ;
                      Name="Co&mments";
                      CaptionML=ENU=Co&mments;
                      ToolTipML=ENU=View comments that apply.;
                      RunObject=Page "Bank Comment Sheet";
                      RunPageView=WHERE("Table Name"=CONST("Bank Rec."));
                      RunPageLink="Bank Account No."=FIELD("Bank Account No."),
                                  "No."=FIELD("Statement No.");
                      Image=ViewComments }
      { 1020059 ;2   ;Action    ;
                      Name="C&ard";
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=C&ard;
                      ToolTipML=ENU="Open the card for the bank account that is being reconciled. ";
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "Bank Account Card";
                      RunPageLink="No."=FIELD("Bank Account No.");
                      Image=EditLines }
      { 1900000006;0 ;ActionContainer;
                      Name=ActionContainer1900000006;
                      ActionContainerType=Reports }
      { 1902208606;1 ;Action    ;
                      Name=BankRecTestReport;
                      CaptionML=ENU=Bank Rec. Test Report;
                      ToolTipML=ENU=View a preliminary draft of the bank reconciliation statement. You can preview, print, or save the bank reconciliation test statement in several file formats. This step in the bank reconciliation process allows you to test the bank reconciliation statement entries for accuracy prior to posting the bank reconciliation statement.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Image=Report;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 BankRecHdr@1020000 : Record "Bank Rec. Header";
                               BEGIN
                                 BankRecHdr := Rec;
                                 BankRecHdr.SETRECFILTER;
                                 REPORT.RUN(REPORT::"Bank Rec. Test Report",true,false,BankRecHdr);
                               END;
                                }
      { 1907493906;1 ;Action    ;
                      Name="Bank Account - Reconcile";
                      CaptionML=ENU=Bank Account - Reconcile;
                      ToolTipML=ENU=Reconcile bank transactions with bank account ledger entries to ensure that your bank account in Dynamics NAV reflects your actual liquidity.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Report "Bank Account - Reconcile";
                      Promoted=false;
                      Image=Report;
                      PromotedCategory=Report }
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 1020048 ;1   ;ActionGroup;
                      Name="F&unctions";
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 1020071 ;2   ;Action    ;
                      Name=SuggestLines;
                      Ellipsis=true;
                      CaptionML=ENU=Suggest Lines;
                      ToolTipML=ENU=Add deposit lines to the worksheet that have identical external document numbers.;
                      ApplicationArea=#Basic,#Suite;
                      Image=SuggestReconciliationLines;
                      OnAction=BEGIN
                                 RunProcessLines(0);
                               END;
                                }
      { 1020079 ;2   ;Action    ;
                      Name=MarkLines;
                      Ellipsis=true;
                      CaptionML=ENU=Mark Lines;
                      ToolTipML=ENU=Mark transactions that you want to reconcile.;
                      ApplicationArea=#Basic,#Suite;
                      OnAction=BEGIN
                                 RunProcessLines(1);
                               END;
                                }
      { 1020072 ;2   ;Action    ;
                      Name=ClearLines;
                      Ellipsis=true;
                      CaptionML=ENU=Clear Lines;
                      ToolTipML=ENU=Delete the selected worksheet lines.;
                      ApplicationArea=#Basic,#Suite;
                      OnAction=BEGIN
                                 RunProcessLines(3);
                               END;
                                }
      { 1020030 ;2   ;Action    ;
                      Name=RecordAdjustments;
                      Ellipsis=true;
                      CaptionML=ENU=Record Adjustments;
                      ToolTipML=ENU=Create adjustments because company and bank values differ.;
                      ApplicationArea=#Basic,#Suite;
                      Image=AdjustEntries;
                      OnAction=BEGIN
                                 RunProcessLines(2);
                               END;
                                }
      { 1020070 ;2   ;Separator ;
                      Name=Separator1020070 }
      { 1020069 ;2   ;Action    ;
                      Name=RecalcGLBalance;
                      CaptionML=ENU=Recalc &G/L Balance;
                      ToolTipML=ENU=Calculate the G/L balance again.;
                      ApplicationArea=#Basic,#Suite;
                      OnAction=BEGIN
                                 RecalcGLBalance;
                               END;
                                }
      { 1020047 ;1   ;ActionGroup;
                      Name="P&osting";
                      CaptionML=ENU=P&osting;
                      Image=Post }
      { 1020080 ;2   ;Action    ;
                      Name=TestReport;
                      Ellipsis=true;
                      CaptionML=ENU=Test Report;
                      ToolTipML=ENU=View a test report so that you can find and correct any errors before you perform the actual posting of the journal or document.;
                      ApplicationArea=#Basic,#Suite;
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintBankRec(Rec);
                               END;
                                }
      { 1020081 ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      CaptionML=ENU=P&ost;
                      ToolTipML=ENU=Finalize the document or journal by posting the amounts and quantities to the related accounts in your company books.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=Post;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Bank Rec.-Post (Yes/No)",Rec);
                                 CurrPage.UPDATE(false);
                                 RefreshSharedTempTable;
                               END;
                                }
      { 1020082 ;2   ;Action    ;
                      Name=PostAndPrint;
                      ShortCutKey=Shift+F9;
                      CaptionML=ENU=Post and &Print;
                      ToolTipML=ENU=Finalize and prepare to print the document or journal. The values and quantities are posted to the related accounts. A report request window where you can specify what to include on the print-out.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Bank Rec.-Post + Print",Rec);
                                 CurrPage.UPDATE(false);
                                 RefreshSharedTempTable;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Control1900000001;
                ContainerType=ContentArea }

    { 1020000;1;Group     ;
                Name=General;
                CaptionML=ENU=General }

    { 1020001;2;Field     ;
                Name="Bank Account No.";
                ToolTipML=ENU=Specifies the code for the bank account the reconciliation applies to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bank Account No.";
                Importance=Promoted;
                ImplicitType=Code20 }

    { 1020003;2;Field     ;
                Name="Statement No.";
                ToolTipML=ENU=Specifies the statement number to be reconciled.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Statement No.";
                Importance=Promoted;
                ImplicitType=Code20 }

    { 1020005;2;Field     ;
                Name="Statement Date";
                ToolTipML=ENU=Specifies the as-of date of the statement. All G/L balances will be calculated based upon this date.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Statement Date";
                Importance=Promoted;
                ImplicitType=Date }

    { 1020007;2;Field     ;
                Name="G/L Balance (LCY)";
                ToolTipML=ENU=Specifies the general ledger balance for the assigned account number.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="G/L Balance (LCY)";
                Editable=FALSE;
                ImplicitType=Decimal }

    { 1020064;2;Field     ;
                Name="G/L Balance";
                ToolTipML=ENU=Specifies the general ledger balance for the assigned account number.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="G/L Balance";
                Editable=FALSE;
                ImplicitType=Decimal }

    { 1020009;2;Field     ;
                Name="Positive Adjustments" - "Negative Bal. Adjustments";
                CaptionML=ENU=+ Positive Adjustments;
                ToolTipML=ENU=Specifies the total amount of positive adjustments for the bank statement.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Positive Adjustments" - "Negative Bal. Adjustments";
                Editable=FALSE }

    { 1020033;2;Field     ;
                Name="""G/L Balance"" + (""Positive Adjustments"" - ""Negative Bal. Adjustments"")";
                CaptionML=ENU=Subtotal;
                ToolTipML=ENU=Specifies a subtotal amount for the posted worksheet. The subtotal is calculated by using the general ledger balance and any positive or negative adjustments.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="G/L Balance" + ("Positive Adjustments" - "Negative Bal. Adjustments");
                Editable=FALSE }

    { 1020011;2;Field     ;
                Name="Negative Adjustments" - "Positive Bal. Adjustments";
                CaptionML=ENU=- Negative Adjustments;
                ToolTipML=ENU=Specifies the total of the negative adjustment lines for the bank statement.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Negative Adjustments" - "Positive Bal. Adjustments";
                Editable=FALSE }

    { 1020036;2;Field     ;
                Name="Ending G/L Balance";
                CaptionML=ENU=Ending G/L Balance;
                ToolTipML=ENU=Specifies the sum of values in the G/L Balance field, plus the Positive Adjustments field, minus the Negative Adjustments field. This is what the G/L balance will be after the bank reconciliation worksheet is posted and the adjustments are posted to the general ledger.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="G/L Balance" + ("Positive Adjustments" - "Negative Bal. Adjustments") + ("Negative Adjustments" - "Positive Bal. Adjustments");
                Editable=FALSE }

    { 1020038;2;Field     ;
                Name=Difference;
                CaptionML=ENU=Difference;
                ToolTipML=ENU=Specifies the difference between the Amount field and the Cleared Amount field.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=("G/L Balance" + ("Positive Adjustments" - "Negative Bal. Adjustments") + ("Negative Adjustments" - "Positive Bal. Adjustments")) - (("Statement Balance" + "Outstanding Deposits") - "Outstanding Checks");
                Editable=FALSE }

    { 1020052;2;Field     ;
                Name="Cleared With./Chks. Per Stmnt.";
                ToolTipML=ENU=Specifies the total of withdrawals or checks that cleared the bank for this statement.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Cleared With./Chks. Per Stmnt.";
                ImplicitType=Decimal }

    { 1020054;2;Field     ;
                Name="Cleared Inc./Dpsts. Per Stmnt.";
                ToolTipML=ENU=Specifies the total of increases or deposits that cleared the bank for this statement.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Cleared Inc./Dpsts. Per Stmnt.";
                ImplicitType=Decimal }

    { 1020013;2;Field     ;
                Name=BalanceOnStatement;
                CaptionML=ENU=Balance on Statement;
                ToolTipML=ENU=Specifies the amount entered by the operator from the balance found on the bank statement.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Statement Balance";
                ImplicitType=Decimal }

    { 1020015;2;Field     ;
                Name="Outstanding Deposits";
                CaptionML=ENU=+ Outstanding Deposits;
                ToolTipML=ENU=Specifies the total of outstanding deposits of type Increase for the bank statement.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Outstanding Deposits";
                Editable=FALSE;
                ImplicitType=Decimal }

    { 1020040;2;Field     ;
                Name="Statement Balance" + "Outstanding Deposits";
                CaptionML=ENU=Subtotal;
                ToolTipML=ENU=Specifies a subtotal amount for the posted worksheet. The subtotal is calculated by using the general ledger balance and any positive or negative adjustments.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Statement Balance" + "Outstanding Deposits";
                Editable=FALSE }

    { 1020017;2;Field     ;
                Name="Outstanding Checks";
                CaptionML=ENU=- Outstanding Checks;
                ToolTipML=ENU=Specifies the total of outstanding check withdrawals for the bank statement.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Outstanding Checks";
                Editable=FALSE;
                ImplicitType=Decimal }

    { 1020044;2;Field     ;
                Name=CalculateEndingBalance;
                CaptionML=ENU=Ending Balance;
                ToolTipML=ENU=Specifies the sum of values in the Balance on Statement field, plus the Outstanding Deposits field, minus the Outstanding Checks field.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CalculateEndingBalance;
                Editable=FALSE;
                ImplicitType=Decimal }

    { 1903609101;1;Group  ;
                Name=Checks;
                CaptionML=ENU=Checks }

    { 1020046;2;Part      ;
                Name=ChecksSubForm;
                ApplicationArea=#Basic,#Suite;
                SubPageLink="Bank Account No."=FIELD("Bank Account No."),
                            "Statement No."=FIELD("Statement No.");
                PagePartID="Bank Rec. Check Lines Subform" }

    { 1906742101;1;Group  ;
                Name="Deposits/Transfers";
                CaptionML=ENU=Deposits/Transfers }

    { 1020051;2;Part      ;
                Name=DepositsSubForm;
                ApplicationArea=#Basic,#Suite;
                SubPageLink="Bank Account No."=FIELD("Bank Account No."),
                            "Statement No."=FIELD("Statement No.");
                PagePartID="Bank Rec. Dep. Lines Subform" }

    { 1907762901;1;Group  ;
                Name=Adjustments;
                CaptionML=ENU=Adjustments }

    { 1020060;2;Part      ;
                Name=AdjustmentsSubForm;
                ApplicationArea=#Basic,#Suite;
                SubPageLink="Bank Account No."=FIELD("Bank Account No."),
                            "Statement No."=FIELD("Statement No.");
                PagePartID="Bank Rec. Adj. Lines Subform" }

    { 1907481501;1;Group  ;
                Name="Control Info";
                CaptionML=ENU=Control Info }

    { 1020035;2;Field     ;
                Name=Bank Account No.2;
                Lookup=false;
                ToolTipML=ENU=Specifies the code for the bank account the reconciliation applies to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bank Account No.";
                Editable=FALSE;
                ImplicitType=Code20 }

    { 1020029;2;Field     ;
                Name=Statement No.2;
                ToolTipML=ENU=Specifies the statement number to be reconciled.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Statement No.";
                Editable=FALSE;
                ImplicitType=Code20 }

    { 1020025;2;Field     ;
                Name="Currency Code";
                ToolTipML=ENU=Specifies the currency code assigned to the bank account.;
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                ImplicitType=Code10 }

    { 1020027;2;Field     ;
                Name="Currency Factor";
                ToolTipML=ENU=Specifies currency conversions when posting adjustments for bank accounts with a foreign currency code assigned.;
                ApplicationArea=#Suite;
                SourceExpr="Currency Factor";
                ImplicitType=Decimal }

    { 1020032;2;Field     ;
                Name=Statement Date2;
                ToolTipML=ENU=Specifies the as-of date of the statement. All G/L balances will be calculated based upon this date.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Statement Date";
                Editable=FALSE;
                ImplicitType=Date }

    { 1020019;2;Field     ;
                Name="Date Created";
                ToolTipML=ENU=Specifies a date automatically populated when the record is created.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Date Created";
                Editable=FALSE;
                ImplicitType=Date }

    { 1020021;2;Field     ;
                Name="Time Created";
                ToolTipML=ENU=Specifies the  time created, which is automatically populated when the record is created.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Time Created";
                Editable=FALSE;
                ImplicitType=Time }

    { 1020023;2;Field     ;
                Name="Created By";
                Lookup=false;
                DrillDown=false;
                AssistEdit=false;
                ToolTipML=ENU=Specifies the User ID of the person who created the record.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Created By";
                Editable=FALSE;
                ImplicitType=Code50 }

    { 1900000007;0;Container;
                Name=Control1900000007;
                ContainerType=FactBoxArea }

    { 1905767507;1;Part   ;
                Name=Control1905767507;
                Visible=TRUE;
                Editable=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      TempBankAccReconciliationDataset@1020002 : TEMPORARY Record "Bank Acc. Reconciliation";
      ReportPrint@1020000 : Codeunit "Test Report-Print";
      Text001@1020001 : TextConst 'ENU=Do you want to recalculate the G/L Balance from the General Ledger?';

    [External]
    PROCEDURE SetupRecord@1020001();
    BEGIN
      SETRANGE("Date Filter","Statement Date");
      CALCFIELDS("Positive Adjustments",
        "Negative Adjustments",
        "Positive Bal. Adjustments",
        "Negative Bal. Adjustments");
    END;

    [External]
    PROCEDURE RunProcessLines@1020002(ActionToTake@1020001 : '"Suggest Lines","Mark Lines","Record Adjustments","Clear Lines"');
    VAR
      ProcessLines@1020002 : Report "Bank Rec. Process Lines";
    BEGIN
      case ActionToTake of
        ActionToTake::"Suggest Lines":
          ProcessLines.SetDoSuggestLines(true,"Bank Account No.","Statement No.");
        ActionToTake::"Mark Lines":
          ProcessLines.SetDoMarkLines(true,"Bank Account No.","Statement No.");
        ActionToTake::"Record Adjustments":
          ProcessLines.SetDoAdjLines(true,"Bank Account No.","Statement No.");
        ActionToTake::"Clear Lines":
          ProcessLines.SetDoClearLines(true,"Bank Account No.","Statement No.");
      end;
      ProcessLines.SETTABLEVIEW(Rec);
      ProcessLines.RUNMODAL;
      DoRecalc;
    END;

    [External]
    PROCEDURE RecalcGLBalance@1020000();
    BEGIN
      if CONFIRM(Text001,true) then
        DoRecalc;
    END;

    [External]
    PROCEDURE DoRecalc@1020004();
    BEGIN
      CalculateBalance;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE AfterGetCurrentRecord@19077479();
    BEGIN
      xRec := Rec;
      SetupRecord;
    END;

    [External]
    PROCEDURE SetSharedTempTable@1020005(VAR TempBankAccReconciliationOnList@1020000 : TEMPORARY Record "Bank Acc. Reconciliation");
    BEGIN
      TempBankAccReconciliationDataset.COPY(TempBankAccReconciliationOnList,true);
    END;

    LOCAL PROCEDURE RefreshSharedTempTable@1020003();
    VAR
      BankAccReconciliation@1020001 : Record "Bank Acc. Reconciliation";
    BEGIN
      TempBankAccReconciliationDataset.DELETEALL;
      BankAccReconciliation.GetTempCopyFromBankRecHeader(TempBankAccReconciliationDataset);
    END;

    BEGIN
    END.
  }
}

